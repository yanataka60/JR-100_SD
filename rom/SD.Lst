0001	CC10			PIOA  	EQU   	$CC10          	
0002	CC11			PIOCA 	EQU   	$CC11          	
0003	CC12			PIOB  	EQU   	$CC12          	
0004	CC13			PIOCB 	EQU   	$CC13          	
0005				
0006	0004			BSTA  	EQU   	$0004          	;BASICプログラムスタートアドレス
0007	0006			BEND  	EQU   	$0006          	;BASICプログラムエンドアドレス
0008	0008			HEND  	EQU   	$0008          	;配列エンドアドレス
0009	000A			V2END 	EQU   	$000A          	;2文字変数アドレス
0010	000C			SEND  	EQU   	$000C          	;文字列変数アドレス
0011	001A			BTPNT 	EQU   	$001A          	;BASICコマンドポインタ $F898
0012	001C			CTPNT 	EQU   	$001C          	;BASICステートメントポインタ $F8C9
0013				
0014	0030			KBUF  	EQU   	$0030          	;キーバッファ ～$0075(70Byte)
0015	00E3			FLG   	EQU   	$00E3          	;SD読込用 FLG 0:BASIC 1:マシン語
0016	00E4			ADRS  	EQU   	$00E4          	;SD読込用 開始アドレス
0017	00E6			LENG  	EQU   	$00E6          	;SD読込用 読込バイト数
0018	00E8			XSAVE 	EQU   	$00E8          	;Xレジスタ保存
0019	00EA			XSAVE2	EQU   	$00EA          	;Xレジスタ保存
0020	00EC			ADRSK 	EQU   	$00EC          	;KSCN2 KTBL算出用/SD読込用 終了アドレス計算用
0021	00EE			XSAVEK	EQU   	$00EE          	;KSCN2用 Xレジスタ保存
0022	00F0			PRGVER	EQU   	$00F0          	;PROG形式バージョン
0023	00F2			ADRS2 	EQU   	$00F2          	;SD読込用 開始アドレス退避
0024				
0025	C11F			CRTCNR	EQU   	$C11F          	;ディスプレイ右上
0026	C800			KEYDAT	EQU   	$C800          	;キーデータ取得
0027	C801			KEYSEL	EQU   	$C801          	;Bit0-Bit3に0-8を出力して$C800のBit0-Bit4のデータを取得
0028				
0029	F018			BEEP  	EQU   	$F018          	;BEEP
0030	E4F2			INPUT 	EQU   	$E4F2          	;1文字入力(カーソルブリンク、エコーバックあり) A=キーデータ Bレジスタ破壊
0031	F7A9			KSCAN 	EQU   	$F7A9          	;キー入力(エコーバックあり) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊
0032	F3BA			SPC   	EQU   	$F3BA          	;空白表示
0033	F3BC			PRINT 	EQU   	$F3BC          	;1文字出力 A=アスキーコード Aレジスタ保存
0034				
0035				;ソース内記述汎用ルーチン
0036				;AZLCNV							;大文字変換 Aレジスタのアルファベット小文字を大文字に変換
0037				;STRPRN							;文字列出力 (X)から$00までの文字列を表示
0038				;PRHEX							;Aレジスタの内容を16進数文字列として表示
0039				;SHEX2							;(X),(X+1)の2バイトアスキーコード文字列を16進数にしてAレジスタへ
0040				;								;		'0'～'9','A'～'F'以外が含まれていたらA=0 C=1
0041				;SHEX							;Aレジスタのアスキーコードを16進数にしてAレジスタへ
0042				;								;		'0'～'9','A'～'F'以外ならA=0 C=1
0043				;KSCN2							;キー入力(エコーバックなし) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊
0044				;								;		CTRLキー未対応
0045				
0046				;A=USR($xxxx,X,A) 引値 第2パラメータ:Xレジスタ 第3パラメータ:Aレジスタ  戻り値:上位バイト:Bレジスタ 下位バイト:Aレジスタ
0047				
0048	D000			      	ORG   	$D000          	
0049				
0050	D000	00 		      	FCB   	$00            	;プリンタ制御ROMの有無識別コード
0051				*
0052	D001			START 				
0053	D001	7E D016		      	JMP   	INIT           	;INITMコマンドジャンプ先
0054	D004	7E D045		      	JMP   	DUMMY          	;プリンタ一文字出力ジャンプ先
0055	D007	7E D016		      	JMP   	INIT           	;HCOPYコマンドジャンプ先
0056	D00A	7E D046		      	JMP   	LOAD           	
0057	D00D	7E D2E3		      	JMP   	BSAVE          	
0058	D010	7E D3AC		      	JMP   	MSAVE          	
0059	D013	7E D475		      	JMP   	FILES          	
0060				
0061	D016	DF E8		INIT  	STX   	XSAVE          	;コマンド文字列終了位置を保存
0062	D018	BD D802		      	JSR   	PIOINI         	;8255初期化
0063				
0064	D01B	96 1A		      	LDAA  	BTPNT          	
0065	D01D	81 F8		      	CMPA  	#$F8           	
0066	D01F	26 0F		      	BNE   	INI2           	
0067	D021	CE D820		      	LDX   	#BTBL          	
0068	D024	DF 1A		      	STX   	BTPNT          	;BASICコマンドポインタをBTBLに変更
0069	D026	CE D851		      	LDX   	#CTBL          	
0070	D029	DF 1C		      	STX   	CTPNT          	:BASICステートメントポインタをCBTLに変更
0071	D02B	CE D6E8		      	LDX   	#SDMSG         	;'JR-100_SD READY OK!'
0072	D02E	20 0F		      	BRA   	INI3           	
0073	D030	DF E8		INI2  	STX   	XSAVE          	;コマンド文字列終了位置を保存
0074	D032	CE F898		      	LDX   	#$F898         	
0075	D035	DF 1A		      	STX   	BTPNT          	;BASICコマンドポインタを元に戻す
0076	D037	CE F8C9		      	LDX   	#$F8C9         	
0077	D03A	DF 1C		      	STX   	CTPNT          	:BASICステートメントポインタを元に戻す
0078	D03C	CE D6FE		      	LDX   	#CMTMSG        	;'CMT OK!'
0079	D03F	BD D553		INI3  	JSR   	STRPRN         	
0080	D042	DE E8		      	LDX   	XSAVE          	
0081	D044	39		      	RTS   			
0082				
0083	D045			DUMMY 				
0084	D045	39		      	RTS   			
0085				
0086				;----------------- BASICプログラム、機械語プログラム LOAD ---------------------------
0087	D046			LOAD  				
0088	D046	86 80		      	LDAA  	#$80           	;コマンド$80を送信
0089	D048	BD D7E4		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0090	D04B	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0091	D04E	4D		      	TSTA  			
0092	D04F	26 41		      	BNE   	ERRJ           	
0093				
0094	D051	C6 20		FN0   	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0095	D053	A6 00		FN1   	LDAA  	X              	
0096	D055	08		      	INX   			
0097	D056	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0098	D058	27 F9		      	BEQ   	FN1            	
0099	D05A	81 3A		      	CMPA  	#':'           	;コロンだったら32Byte以下でも終了
0100	D05C	27 0F		      	BEQ   	FN10           	
0101	D05E	4D		      	TSTA  			;$00だったら32Byte以下でも終了
0102	D05F	27 0C		      	BEQ   	FN10           	
0103	D061	BD D7E4		      	JSR   	SNDBYTE        	
0104	D064	5A		      	DECB  			
0105	D065	26 EC		      	BNE   	FN1            	
0106	D067	4F		      	CLRA  			
0107	D068	BD D7E4		      	JSR   	SNDBYTE        	;$00を送信
0108	D06B	20 0F		      	BRA   	FN12           	
0109				
0110	D06D	09		FN10  	DEX   			
0111	D06E	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0112	D070	4F		      	CLRA  			
0113	D071	BD D7E4		FN11  	JSR   	SNDBYTE        	;32Byteに満たない分を$00送信
0114	D074	5A		      	DECB  			
0115	D075	26 FA		      	BNE   	FN11           	
0116	D077	BD D7E4		      	JSR   	SNDBYTE        	;$00送信
0117	D07A	20 0E		      	BRA   	FN14           	
0118				
0119	D07C	09		FN12  	DEX   			
0120	D07D	A6 00		FN13  	LDAA  	X              	;32Byteを超えてまだ文字列があるようなら':'又は$00が出てくるまでXレジスタを進める
0121	D07F	08		      	INX   			
0122	D080	81 3A		      	CMPA  	#':'           	
0123	D082	26 F9		      	BNE   	FN13           	
0124	D084	4D		      	TSTA  			
0125	D085	26 F6		      	BNE   	FN13           	
0126	D087	09		      	DEX   			
0127	D088	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0128				
0129	D08A			FN14  				
0130	D08A	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0131	D08D	4D		      	TSTA  			
0132	D08E	26 02		      	BNE   	ERRJ           	
0133	D090	20 03		      	BRA   	FN2            	
0134				
0135	D092	7E D2B1		ERRJ  	JMP   	ERR            	
0136				
0137	D095	BD D7D0		FN2   	JSR   	RCVBYTE        	;'P'
0138	D098	BD D7D0		      	JSR   	RCVBYTE        	;'R'
0139	D09B	BD D7D0		      	JSR   	RCVBYTE        	;'O'
0140	D09E	BD D7D0		      	JSR   	RCVBYTE        	;'G'
0141	D0A1	BD D7D0		      	JSR   	RCVBYTE        	;フォーマットバージョン受信
0142	D0A4	81 01		      	CMPA  	#$01           	
0143	D0A6	27 0C		      	BEQ   	VER1           	;フォーマットバージョン1
0144	D0A8	81 02		      	CMPA  	#$02           	
0145	D0AA	27 05		      	BEQ   	VER2           	;フォーマットバージョン2
0146	D0AC	86 F4		      	LDAA  	#$F4           	
0147	D0AE	7E D092		      	JMP   	ERRJ           	;フォーマットバージョンエラー
0148				
0149	D0B1	7E D1A1		VER2  	JMP   	VER21          	
0150				;------------------------- PROGフォーマットバージョン1形式LOAD ---------------------
0151	D0B4	BD D7D0		VER1  	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 2nd Byte
0152	D0B7	BD D7D0		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 3rd Byte
0153	D0BA	BD D7D0		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 4th Byte
0154	D0BD	BD D7D0		      	JSR   	RCVBYTE        	;FNAME_SIZE 1stByte
0155	D0C0	16		      	TAB   			
0156	D0C1	BD D7D0		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 2ndByte
0157	D0C4	BD D7D0		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 3rdByte
0158	D0C7	BD D7D0		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 4thByte
0159	D0CA	CE 0030		      	LDX   	#KBUF          	;SDから送られてきたファイル名を格納
0160	D0CD	BD D7D0		LD1   	JSR   	RCVBYTE        	;FNAME
0161	D0D0	A7 00		      	STAA  	X              	
0162	D0D2	08		      	INX   			
0163	D0D3	5A		      	DECB  			
0164	D0D4	26 F7		      	BNE   	LD1            	
0165	D0D6	4F		      	CLRA  			
0166	D0D7	A7 00		      	STAA  	X              	;ファイル名の最後に$00を追加
0167				
0168	D0D9	BD D7D0		      	JSR   	RCVBYTE        	;読み込みアドレス 1stByte
0169	D0DC	97 E5		      	STAA  	ADRS+1         	
0170	D0DE	97 F3		      	STAA  	ADRS2+1        	
0171	D0E0	BD D7D0		      	JSR   	RCVBYTE        	;読み込みアドレス 2ndByte
0172	D0E3	97 E4		      	STAA  	ADRS           	
0173	D0E5	97 F2		      	STAA  	ADRS2          	
0174	D0E7	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0175	D0EA	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 4thByte
0176				
0177	D0ED	BD D7D0		      	JSR   	RCVBYTE        	;読み込みByte数1st受信
0178	D0F0	97 E7		      	STAA  	LENG+1         	
0179	D0F2	BD D7D0		      	JSR   	RCVBYTE        	;読み込みByte数2nd受信
0180	D0F5	97 E6		      	STAA  	LENG           	
0181	D0F7	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 3rd
0182	D0FA	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 4th
0183				
0184	D0FD	BD D7D0		      	JSR   	RCVBYTE        	;FLAG 1stByte 0:BASIC 1:マシン語
0185	D100	97 E3		      	STAA  	FLG            	
0186				
0187	D102	4D		      	TSTA  			
0188	D103	26 14		      	BNE   	LD2            	
0189	D105	CE D708		      	LDX   	#BSMSG         	;BASICプログラムLOAD表示
0190	D108	BD D553		      	JSR   	STRPRN         	
0191	D10B	CE D71B		      	LDX   	#LDMSG         	;'LOADING '
0192	D10E	BD D553		      	JSR   	STRPRN         	
0193	D111	CE 0030		      	LDX   	#KBUF          	;ファイル名
0194	D114	BD D553		      	JSR   	STRPRN         	
0195	D117	20 46		      	BRA   	LD3            	
0196	D119	CE D711		LD2   	LDX   	#BNMSG         	;マシン語LOAD表示
0197	D11C	BD D553		      	JSR   	STRPRN         	
0198	D11F	CE D71B		      	LDX   	#LDMSG         	;'LOADING '
0199	D122	BD D553		      	JSR   	STRPRN         	
0200	D125	CE 0030		      	LDX   	#KBUF          	;ファイル名
0201	D128	BD D553		      	JSR   	STRPRN         	
0202	D12B	86 28		      	LDAA  	#'('           	
0203	D12D	BD F3BC		      	JSR   	PRINT          	
0204	D130	96 E4		      	LDAA  	ADRS           	;読み込み開始アドレス表示
0205	D132	BD D55F		      	JSR   	PRHEX          	
0206	D135	96 E5		      	LDAA  	ADRS+1         	
0207	D137	BD D55F		      	JSR   	PRHEX          	
0208				
0209	D13A	86 2D		      	LDAA  	#'-'           	
0210	D13C	BD F3BC		      	JSR   	PRINT          	
0211				
0212	D13F	96 E7		      	LDAA  	LENG+1         	
0213	D141	9B E5		      	ADDA  	ADRS+1         	
0214	D143	97 ED		      	STAA  	ADRSK+1        	
0215	D145	96 E6		      	LDAA  	LENG           	
0216	D147	99 E4		      	ADCA  	ADRS           	
0217	D149	97 EC		      	STAA  	ADRSK          	
0218	D14B	DE EC		      	LDX   	ADRSK          	
0219	D14D	09		      	DEX   			
0220	D14E	DF EC		      	STX   	ADRSK          	;(ADRSK) <- 読み込み開始アドレス+読み込みByte数-1
0221				
0222	D150	96 EC		      	LDAA  	ADRSK          	;読み込み終了アドレス表示
0223	D152	BD D55F		      	JSR   	PRHEX          	
0224	D155	96 ED		      	LDAA  	ADRSK+1        	
0225	D157	BD D55F		      	JSR   	PRHEX          	
0226	D15A	86 29		      	LDAA  	#')'           	
0227	D15C	BD F3BC		      	JSR   	PRINT          	
0228	D15F	CE D730		LD3   	LDX   	#CRLF          	;CRLF
0229	D162	BD D553		      	JSR   	STRPRN         	
0230				
0231	D165	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 2ndByte
0232	D168	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0233	D16B	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 4thByte
0234				
0235				;------------------- 実データ受信 --------------------------------
0236	D16E	DE E4		LOP1  	LDX   	ADRS           	
0237	D170	BD D7D0		      	JSR   	RCVBYTE        	;1Byte受信
0238	D173	A7 00		      	STAA  	X              	;(X) <- A
0239	D175	B7 C11F		      	STAA  	CRTCNR         	;受信データをディスプレイ右上に表示
0240	D178	08		      	INX   			;X <- X+1
0241	D179	DF E4		      	STX   	ADRS           	
0242				
0243	D17B	DE E6		      	LDX   	LENG           	
0244	D17D	09		      	DEX   			
0245	D17E	DF E6		      	STX   	LENG           	;(LENG) <- (LENG) -1
0246	D180	26 EC		      	BNE   	LOP1           	;(LENG)が0になるまでループ
0247				
0248	D182	4F		      	CLRA  			
0249	D183	B7 C11F		      	STAA  	CRTCNR         	;ディスプレイ右上をクリア
0250	D186	7D 00E3		      	TST   	FLG            	;FLG CHECK 1(マシン語)なら終了
0251	D189	26 0E		      	BNE   	LOP2           	
0252				
0253	D18B	DE E4		      	LDX   	ADRS           	;0ならBASICパラメータをセット
0254	D18D	09		      	DEX   			
0255	D18E	DF 06		      	STX   	BEND           	;BASICプログラムエンドアドレスセット
0256	D190	08		      	INX   			
0257	D191	DF 08		      	STX   	HEND           	;配列エンドアドレスセット
0258	D193	08		      	INX   			
0259	D194	DF 0A		      	STX   	V2END          	;2文字変数アドレスセット
0260	D196	08		      	INX   			
0261	D197	DF 0C		      	STX   	SEND           	;文字列変数アドレスセット
0262				
0263	D199	DE E8		LOP2  	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0264	D19B	39		      	RTS   			
0265				
0266	D19C	86 F4		ERRV  	LDAA  	#$F4           	
0267	D19E	7E D092		      	JMP   	ERRJ           	
0268				
0269				;------------------------- PROGフォーマットバージョン2形式LOAD ---------------------
0270	D1A1	BD D7D0		VER21 	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 2nd Byte
0271	D1A4	BD D7D0		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 3rd Byte
0272	D1A7	BD D7D0		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 4th Byte
0273	D1AA	BD D7D0		      	JSR   	RCVBYTE        	;'P'
0274	D1AD	BD D7D0		      	JSR   	RCVBYTE        	;'N'
0275	D1B0	BD D7D0		      	JSR   	RCVBYTE        	;'A'
0276	D1B3	BD D7D0		      	JSR   	RCVBYTE        	;'M'
0277	D1B6	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 1stByte
0278	D1B9	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 2ndByte
0279	D1BC	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 3rdByte
0280	D1BF	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 4thByte
0281				
0282	D1C2	BD D7D0		      	JSR   	RCVBYTE        	;FNAME_SIZE 1stByte
0283	D1C5	16		      	TAB   			
0284	D1C6	BD D7D0		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 2ndByte
0285	D1C9	BD D7D0		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 3rdByte
0286	D1CC	BD D7D0		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 4thByte
0287	D1CF	CE 0030		      	LDX   	#KBUF          	;SDから送られてきたファイル名を格納
0288	D1D2	BD D7D0		LV1   	JSR   	RCVBYTE        	;FNAME
0289	D1D5	A7 00		      	STAA  	X              	
0290	D1D7	08		      	INX   			
0291	D1D8	5A		      	DECB  			
0292	D1D9	26 F7		      	BNE   	LV1            	
0293	D1DB	4F		      	CLRA  			
0294	D1DC	A7 00		      	STAA  	X              	;ファイル名の最後に$00を追加
0295				
0296	D1DE	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 'P'
0297	D1E1	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 'B'
0298	D1E4	BD D7D0		      	JSR   	RCVBYTE        	;'I' or 'A'
0299	D1E7	16		      	TAB   			
0300	D1E8	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 'N' or 'S'
0301	D1EB	C1 49		      	CMPB  	#'I'           	
0302	D1ED	26 2B		      	BNE   	LVBAS          	
0303				;------------ PROGフォーマットバージョン2形式 BINARY LOAD ---------------------
0304	D1EF	86 01		LVBIN 	LDAA  	#$01           	
0305	D1F1	97 E3		      	STAA  	FLG            	
0306	D1F3	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 1stByte
0307	D1F6	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 2ndByte
0308	D1F9	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 3rdByte
0309	D1FC	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 4thByte
0310	D1FF	BD D7D0		      	JSR   	RCVBYTE        	;読み込みアドレス 1stByte
0311	D202	97 E5		      	STAA  	ADRS+1         	
0312	D204	97 F3		      	STAA  	ADRS2+1        	
0313	D206	BD D7D0		      	JSR   	RCVBYTE        	;読み込みアドレス 2ndByte
0314	D209	97 E4		      	STAA  	ADRS           	
0315	D20B	97 F2		      	STAA  	ADRS2          	
0316	D20D	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0317	D210	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 4thByte
0318	D213	20 24		      	BRA   	LV5            	
0319				
0320	D215	86 F4		ERRV2 	LDAA  	#$F4           	
0321	D217	7E D092		      	JMP   	ERRJ           	
0322				
0323				;------------ PROGフォーマットバージョン2形式 BASIC LOAD ---------------------
0324	D21A	C1 41		LVBAS 	CMPB  	#'A'           	
0325	D21C	26 F7		      	BNE   	ERRV2          	
0326	D21E	4F		      	CLRA  			
0327	D21F	97 E3		      	STAA  	FLG            	
0328	D221	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 1stByte
0329	D224	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 2ndByte
0330	D227	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 3rdByte
0331	D22A	BD D7D0		      	JSR   	RCVBYTE        	;セクションSIZE 4thByte
0332	D22D	86 46		      	LDAA  	#$46           	;BASICなら読込開始アドレスは$0246固定
0333	D22F	97 E5		      	STAA  	ADRS+1         	
0334	D231	97 F3		      	STAA  	ADRS2+1        	
0335	D233	86 02		      	LDAA  	#$02           	
0336	D235	97 E4		      	STAA  	ADRS           	
0337	D237	97 F2		      	STAA  	ADRS2          	
0338				
0339	D239	BD D7D0		LV5   	JSR   	RCVBYTE        	;読み込みByte数1st受信
0340	D23C	97 E7		      	STAA  	LENG+1         	
0341	D23E	BD D7D0		      	JSR   	RCVBYTE        	;読み込みByte数2nd受信
0342	D241	97 E6		      	STAA  	LENG           	
0343	D243	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 3rd
0344	D246	BD D7D0		      	JSR   	RCVBYTE        	;SKIP 4th
0345				
0346	D249	7D 00E3		      	TST   	FLG            	
0347	D24C	26 14		      	BNE   	LV2            	
0348	D24E	CE D708		      	LDX   	#BSMSG         	;BASICプログラムLOAD表示
0349	D251	BD D553		      	JSR   	STRPRN         	
0350	D254	CE D71B		      	LDX   	#LDMSG         	;'LOADING '
0351	D257	BD D553		      	JSR   	STRPRN         	
0352	D25A	CE 0030		      	LDX   	#KBUF          	;ファイル名
0353	D25D	BD D553		      	JSR   	STRPRN         	
0354	D260	20 46		      	BRA   	LV3            	
0355	D262	CE D711		LV2   	LDX   	#BNMSG         	;マシン語LOAD表示
0356	D265	BD D553		      	JSR   	STRPRN         	
0357	D268	CE D71B		      	LDX   	#LDMSG         	;'LOADING '
0358	D26B	BD D553		      	JSR   	STRPRN         	
0359	D26E	CE 0030		      	LDX   	#KBUF          	;ファイル名
0360	D271	BD D553		      	JSR   	STRPRN         	
0361	D274	86 28		      	LDAA  	#'('           	
0362	D276	BD F3BC		      	JSR   	PRINT          	
0363	D279	96 E4		      	LDAA  	ADRS           	;読み込み開始アドレス表示
0364	D27B	BD D55F		      	JSR   	PRHEX          	
0365	D27E	96 E5		      	LDAA  	ADRS+1         	
0366	D280	BD D55F		      	JSR   	PRHEX          	
0367				
0368	D283	86 2D		      	LDAA  	#'-'           	
0369	D285	BD F3BC		      	JSR   	PRINT          	
0370				
0371	D288	96 E7		      	LDAA  	LENG+1         	
0372	D28A	9B E5		      	ADDA  	ADRS+1         	
0373	D28C	97 ED		      	STAA  	ADRSK+1        	
0374	D28E	96 E6		      	LDAA  	LENG           	
0375	D290	99 E4		      	ADCA  	ADRS           	
0376	D292	97 EC		      	STAA  	ADRSK          	
0377	D294	DE EC		      	LDX   	ADRSK          	
0378	D296	09		      	DEX   			
0379	D297	DF EC		      	STX   	ADRSK          	;(ADRSK) <- 読み込み開始アドレス+読み込みByte数-1
0380				
0381	D299	96 EC		      	LDAA  	ADRSK          	;読み込み終了アドレス表示
0382	D29B	BD D55F		      	JSR   	PRHEX          	
0383	D29E	96 ED		      	LDAA  	ADRSK+1        	
0384	D2A0	BD D55F		      	JSR   	PRHEX          	
0385	D2A3	86 29		      	LDAA  	#')'           	
0386	D2A5	BD F3BC		      	JSR   	PRINT          	
0387	D2A8	CE D730		LV3   	LDX   	#CRLF          	;CRLF
0388	D2AB	BD D553		      	JSR   	STRPRN         	
0389	D2AE	7E D16E		      	JMP   	LOP1           	
0390				
0391	D2B1			ERR   				
0392	D2B1	DF E8		      	STX   	XSAVE          	
0393	D2B3	81 F0		      	CMPA  	#$F0           	
0394	D2B5	26 05		      	BNE   	ERR1           	
0395	D2B7	CE D733		      	LDX   	#MSG_F0        	
0396	D2BA	20 21		      	BRA   	ERRR           	
0397	D2BC	81 F1		ERR1  	CMPA  	#$F1           	
0398	D2BE	26 05		      	BNE   	ERR3           	
0399	D2C0	CE D74E		      	LDX   	#MSG_F1        	
0400	D2C3	20 18		      	BRA   	ERRR           	
0401	D2C5	81 F3		ERR3  	CMPA  	#$F3           	
0402	D2C7	26 05		      	BNE   	ERR4           	
0403	D2C9	CE D75E		      	LDX   	#MSG_F3        	
0404	D2CC	20 0F		      	BRA   	ERRR           	
0405	D2CE	81 F4		ERR4  	CMPA  	#$F4           	
0406	D2D0	26 05		      	BNE   	ERR99          	
0407	D2D2	CE D76B		      	LDX   	#MSG_F4        	
0408	D2D5	20 06		      	BRA   	ERRR           	
0409	D2D7			ERR99 				
0410	D2D7	BD D55F		      	JSR   	PRHEX          	
0411	D2DA	CE D787		      	LDX   	#MSG99         	
0412				
0413	D2DD	BD D553		ERRR  	JSR   	STRPRN         	
0414	D2E0	DE E8		      	LDX   	XSAVE          	
0415	D2E2	39		      	RTS   			
0416				
0417				;--------------------- BASICプログラム SAVE ------------------------------------------
0418	D2E3			BSAVE 				
0419	D2E3	86 81		      	LDAA  	#$81           	;コマンド$81を送信
0420	D2E5	BD D7E4		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0421	D2E8	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0422	D2EB	4D		      	TSTA  			
0423	D2EC	26 22		      	BNE   	ERRJ2          	
0424				
0425	D2EE	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0426	D2F0	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0427	D2F2	A6 00		BSV1  	LDAA  	X              	
0428	D2F4	08		      	INX   			
0429	D2F5	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0430	D2F7	27 F9		      	BEQ   	BSV1           	
0431	D2F9	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0432	D2FB	26 01		      	BNE   	BSV10          	
0433	D2FD	4F		      	CLRA  			
0434	D2FE	BD D7E4		BSV10 	JSR   	SNDBYTE        	
0435	D301	5A		      	DECB  			
0436	D302	26 EE		      	BNE   	BSV1           	
0437	D304	4F		      	CLRA  			
0438	D305	BD D7E4		      	JSR   	SNDBYTE        	;$00送信
0439				
0440	D308	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0441	D30B	4D		      	TSTA  			
0442	D30C	26 02		      	BNE   	ERRJ2          	;$00以外ならエラー
0443	D30E	20 03		      	BRA   	BSV2           	
0444				
0445	D310	7E D2B1		ERRJ2 	JMP   	ERR            	
0446				
0447	D313	4F		BSV2  	CLRA  			
0448	D314	BD D7E4		      	JSR   	SNDBYTE        	;継続コード$00を送信
0449	D317	8D 36		      	BSR   	FNSEND         	;ファイルネームをPROG形式用に送信
0450				
0451	D319	96 05		      	LDAA  	BSTA+1         	;BASICスタートアドレス下位バイトを送信
0452	D31B	BD D7E4		      	JSR   	SNDBYTE        	
0453	D31E	96 04		      	LDAA  	BSTA           	;BASICスタートアドレス上位バイトを送信
0454	D320	BD D7E4		      	JSR   	SNDBYTE        	
0455				
0456	D323	DE 04		      	LDX   	BSTA           	
0457	D325	DF E4		      	STX   	ADRS           	;BASICスタートアドレスを(ADRS)にコピー
0458	D327	96 07		      	LDAA  	BEND+1         	
0459	D329	90 05		      	SUBA  	BSTA+1         	
0460	D32B	97 E7		      	STAA  	LENG+1         	
0461	D32D	96 06		      	LDAA  	BEND           	
0462	D32F	92 04		      	SBCA  	BSTA           	
0463	D331	97 E6		      	STAA  	LENG           	;BASICエンドアドレス-BASICスタートアドレスを計算して(LENG)に格納
0464	D333	DE E6		      	LDX   	LENG           	
0465	D335	08		      	INX   			;BEND - BSTART +1
0466	D336	DF E6		      	STX   	LENG           	
0467				
0468	D338	96 E7		      	LDAA  	LENG+1         	;ファイルサイズ下位バイトを送信
0469	D33A	BD D7E4		      	JSR   	SNDBYTE        	
0470	D33D	96 E6		      	LDAA  	LENG           	;ファイルサイズ上位バイトを送信
0471	D33F	BD D7E4		      	JSR   	SNDBYTE        	
0472				
0473	D342	4F		      	CLRA  			;BASICプログラムであること(0)を送信
0474	D343	BD D7E4		      	JSR   	SNDBYTE        	
0475				
0476	D346	CE D724		      	LDX   	#SVMSG         	;SAVE表示
0477	D349	BD D553		      	JSR   	STRPRN         	
0478				
0479	D34C	8D 45		      	BSR   	BDSEND         	;BASICプログラムを送信
0480	D34E	39		      	RTS   			
0481				
0482				;------------------- ファイルネームをPROG形式用に送信 ----------------------
0483	D34F	DE E8		FNSEND	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0484	D351	5F		      	CLRB  			
0485	D352	A6 00		FNS3  	LDAA  	X              	;ファイルネーム文字数をカウント
0486	D354	08		      	INX   			
0487	D355	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは飛ばす
0488	D357	27 F9		      	BEQ   	FNS3           	
0489	D359	5C		      	INCB  			
0490	D35A	81 3A		      	CMPA  	#':'           	;コロンが見つかったら終了
0491	D35C	27 0D		      	BEQ   	FNS4           	
0492	D35E	81 2C		      	CMPA  	#','           	;コンマが見つかったら終了
0493	D360	27 09		      	BEQ   	FNS4           	
0494	D362	4D		      	TSTA  			;$00が見つかったら終了
0495	D363	27 06		      	BEQ   	FNS4           	
0496	D365	C1 11		      	CMPB  	#$11           	;ファイルネームが16文字以上だったら終了
0497	D367	27 02		      	BEQ   	FNS4           	
0498	D369	20 E7		      	BRA   	FNS3           	
0499	D36B	5A		FNS4  	DECB  			
0500	D36C	17		      	TBA   			
0501				
0502	D36D	BD D7E4		      	JSR   	SNDBYTE        	;FNAME_SIZE 1stByte
0503	D370	DE E8		      	LDX   	XSAVE          	
0504	D372	A6 00		FNS5  	LDAA  	X              	;ファイルネーム文字数分のファイルネームを送信
0505	D374	08		      	INX   			
0506	D375	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは飛ばす
0507	D377	27 F9		      	BEQ   	FNS5           	
0508	D379	BD D7E4		      	JSR   	SNDBYTE        	;ファイルネーム文字数分を送信
0509	D37C	5A		      	DECB  			
0510	D37D	26 F3		      	BNE   	FNS5           	
0511				
0512	D37F	A6 00		FNS6  	LDAA  	X              	;ファイルネームが16文字以上だった場合、コンマ、コロン又は$00が見つかるまでコマンド文字列終了位置を修正
0513	D381	08		      	INX   			
0514	D382	81 3A		      	CMPA  	#':'           	
0515	D384	27 09		      	BEQ   	FNS7           	
0516	D386	81 2C		      	CMPA  	#','           	
0517	D388	27 05		      	BEQ   	FNS7           	
0518	D38A	4D		      	TSTA  			
0519	D38B	27 02		      	BEQ   	FNS7           	
0520	D38D	20 F0		      	BRA   	FNS6           	
0521	D38F	09		FNS7  	DEX   			
0522	D390	DF E8		      	STX   	XSAVE          	
0523	D392	39		      	RTS   			
0524				
0525				;----------- (ADRS)から(LENG)バイトを送信 -----------------------
0526	D393	DE E4		BDSEND	LDX   	ADRS           	;ファイルサイズ分を送信
0527	D395	A6 00		      	LDAA  	X              	;A <- (ADRS)
0528	D397	B7 C11F		      	STAA  	CRTCNR         	;送信データをディスプレイ右上に表示
0529	D39A	BD D7E4		      	JSR   	SNDBYTE        	;1Byte送信
0530	D39D	08		      	INX   			;X <- X+1
0531	D39E	DF E4		      	STX   	ADRS           	;(ADRS) <- (ADRS)+1
0532				
0533	D3A0	DE E6		      	LDX   	LENG           	;X <- (LENG)
0534	D3A2	09		      	DEX   			;X <- X-1
0535	D3A3	DF E6		      	STX   	LENG           	;(LENG) <- (LENG)-1
0536	D3A5	26 EC		      	BNE   	BDSEND         	;(LENG)が0になるまでループ
0537	D3A7	4F		      	CLRA  			
0538	D3A8	B7 C11F		      	STAA  	CRTCNR         	;ディスプレイ右上をクリア
0539	D3AB	39		      	RTS   			
0540				
0541				;------------------ 機械語プログラムをSAVE ------------------------
0542	D3AC			MSAVE 				
0543	D3AC	86 81		      	LDAA  	#$81           	;コマンド$81を送信
0544	D3AE	BD D7E4		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0545	D3B1	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0546	D3B4	4D		      	TSTA  			
0547	D3B5	26 28		      	BNE   	ERRJ3          	
0548				
0549	D3B7	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0550	D3B9	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0551	D3BB	A6 00		MSV1  	LDAA  	X              	
0552	D3BD	08		      	INX   			
0553	D3BE	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0554	D3C0	27 F9		      	BEQ   	MSV1           	
0555	D3C2	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0556	D3C4	27 06		      	BEQ   	MSV2           	
0557	D3C6	81 2C		      	CMPA  	#','           	;コンマなら$00にして送信
0558	D3C8	27 02		      	BEQ   	MSV2           	
0559	D3CA	20 01		      	BRA   	MSV10          	
0560	D3CC	4F		MSV2  	CLRA  			
0561	D3CD	BD D7E4		MSV10 	JSR   	SNDBYTE        	
0562	D3D0	5A		      	DECB  			
0563	D3D1	26 E8		      	BNE   	MSV1           	
0564	D3D3	4F		      	CLRA  			
0565	D3D4	BD D7E4		      	JSR   	SNDBYTE        	;$00送信
0566				
0567	D3D7	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0568	D3DA	4D		      	TSTA  			
0569	D3DB	26 02		      	BNE   	ERRJ3          	;$00以外ならエラー
0570	D3DD	20 03		      	BRA   	MSV3           	
0571				
0572	D3DF	7E D2B1		ERRJ3 	JMP   	ERR            	
0573				
0574	D3E2	DE E8		MSV3  	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0575	D3E4	A6 00		MSV4  	LDAA  	X              	;ファイルネーム部分を読み飛ばし
0576	D3E6	08		      	INX   			
0577	D3E7	81 3A		      	CMPA  	#':'           	;コロンが見つかったら終了
0578	D3E9	27 09		      	BEQ   	MSV5           	
0579	D3EB	81 2C		      	CMPA  	#','           	;コンマが見つかったら終了
0580	D3ED	27 05		      	BEQ   	MSV5           	
0581	D3EF	4D		      	TSTA  			;$00が見つかったら終了
0582	D3F0	27 02		      	BEQ   	MSV5           	
0583	D3F2	20 F0		      	BRA   	MSV4           	
0584	D3F4	A6 00		MSV5  	LDAA  	X              	
0585	D3F6	81 24		      	CMPA  	#'$'           	;'$'は読み飛ばす
0586	D3F8	26 01		      	BNE   	MSV6           	
0587	D3FA	08		      	INX   			
0588	D3FB	BD D57C		MSV6  	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0589	D3FE	25 64		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0590	D400	97 E4		      	STAA  	ADRS           	;開始アドレス上位バイトにセット
0591	D402	BD D57C		      	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0592	D405	25 5D		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0593	D407	97 E5		      	STAA  	ADRS+1         	;開始アドレス下位バイトにセット
0594	D409	A6 00		      	LDAA  	X              	
0595	D40B	81 2C		      	CMPA  	#','           	;コンマは読み飛ばす
0596	D40D	26 01		      	BNE   	MSV8           	
0597	D40F	08		      	INX   			
0598	D410	A6 00		MSV8  	LDAA  	X              	
0599	D412	81 24		      	CMPA  	#'$'           	;'$'は読み飛ばす
0600	D414	26 01		      	BNE   	MSV9           	
0601	D416	08		      	INX   			
0602	D417	BD D57C		MSV9  	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0603	D41A	25 48		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0604	D41C	97 E6		      	STAA  	LENG           	;終了アドレス上位バイトにセット
0605	D41E	BD D57C		      	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0606	D421	25 41		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0607	D423	97 E7		      	STAA  	LENG+1         	;終了アドレス下位バイトにセット
0608	D425	DF EA		      	STX   	XSAVE2         	;コマンド文字列終了位置を保存
0609				
0610	D427	96 E7		      	LDAA  	LENG+1         	
0611	D429	90 E5		      	SUBA  	ADRS+1         	
0612	D42B	97 E7		      	STAA  	LENG+1         	
0613	D42D	96 E6		      	LDAA  	LENG           	
0614	D42F	92 E4		      	SBCA  	ADRS           	
0615	D431	25 31		      	BCS   	ERRJ4          	
0616	D433	97 E6		      	STAA  	LENG           	;終了アドレス-開始アドレスを計算して(LENG)に格納
0617	D435	DE E6		      	LDX   	LENG           	
0618	D437	08		      	INX   			;LENG - ADRS +1
0619	D438	DF E6		      	STX   	LENG           	
0620				
0621	D43A	4F		      	CLRA  			
0622	D43B	BD D7E4		      	JSR   	SNDBYTE        	;継続コード$00を送信
0623	D43E	BD D34F		      	JSR   	FNSEND         	;ファイルネームをPROG形式用に送信
0624				
0625	D441	96 E5		      	LDAA  	ADRS+1         	;BASICスタートアドレス下位バイトを送信
0626	D443	BD D7E4		      	JSR   	SNDBYTE        	
0627	D446	96 E4		      	LDAA  	ADRS           	;BASICスタートアドレス上位バイトを送信
0628	D448	BD D7E4		      	JSR   	SNDBYTE        	
0629				
0630	D44B	96 E7		      	LDAA  	LENG+1         	;ファイルサイズ下位バイトを送信
0631	D44D	BD D7E4		      	JSR   	SNDBYTE        	
0632	D450	96 E6		      	LDAA  	LENG           	;ファイルサイズ上位バイトを送信
0633	D452	BD D7E4		      	JSR   	SNDBYTE        	
0634				
0635	D455	86 01		      	LDAA  	#$01           	;機械語プログラムであること(1)を送信
0636	D457	BD D7E4		      	JSR   	SNDBYTE        	
0637				
0638	D45A	CE D724		      	LDX   	#SVMSG         	;SAVE表示
0639	D45D	BD D553		      	JSR   	STRPRN         	
0640				
0641	D460	BD D393		      	JSR   	BDSEND         	;機械語データを送信
0642	D463	39		      	RTS   			
0643				
0644	D464			ERRJ4 				
0645	D464	86 FF		      	LDAA  	#$FF           	;打ち切りコードを送信
0646	D466	BD D7E4		      	JSR   	SNDBYTE        	
0647	D469	CE D790		      	LDX   	#MSG_AD        	;アドレスエラー表示
0648	D46C	BD D553		      	JSR   	STRPRN         	
0649	D46F	DE E8		      	LDX   	XSAVE          	
0650	D471	39		      	RTS   			
0651				
0652				;------------------ SDファイル一覧表示 ---------------------------
0653	D472	7E D2B1		ERRJ5 	JMP   	ERR            	;ERROR処理へジャンプ
0654				
0655	D475			FILES 				
0656				*「SDIR」処理
0657	D475			SDIR_PRG				
0658	D475	86 82		      	LDAA  	#$82           	;コマンド$82を送信
0659	D477	BD D7E4		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0660	D47A	BD D7D0		      	JSR   	RCVBYTE        	;状態取得(00H=OK)
0661	D47D	4D		      	TSTA  			
0662	D47E	26 F2		      	BNE   	ERRJ5          	;ERROR
0663				
0664	D480	A6 00		SDR00 	LDAA  	X              	
0665	D482	81 20		      	CMPA  	#' '           	;空白は除去
0666	D484	26 03		      	BNE   	SDR01          	
0667	D486	08		      	INX   			
0668	D487	20 F7		      	BRA   	SDR00          	
0669	D489	DF E8		SDR01 	STX   	XSAVE          	;コマンド文字列終了位置を保存
0670	D48B	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0671	D48D	A6 00		SDR1  	LDAA  	X              	
0672	D48F	08		      	INX   			
0673	D490	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0674	D492	27 F9		      	BEQ   	SDR1           	
0675	D494	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0676	D496	27 06		      	BEQ   	SDR2           	
0677	D498	81 2C		      	CMPA  	#','           	;コンマなら$00にして送信
0678	D49A	27 02		      	BEQ   	SDR2           	
0679	D49C	20 01		      	BRA   	SDR10          	
0680	D49E	4F		SDR2  	CLRA  			
0681	D49F	BD D7E4		SDR10 	JSR   	SNDBYTE        	;1文字送信
0682	D4A2	5A		      	DECB  			
0683	D4A3	26 E8		      	BNE   	SDR1           	
0684	D4A5	4F		      	CLRA  			
0685	D4A6	BD D7E4		      	JSR   	SNDBYTE        	;$00送信
0686	D4A9	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0687				
0688	D4AB	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0689	D4AE	4D		      	TSTA  			
0690	D4AF	26 C1		      	BNE   	ERRJ5          	;$00以外ならエラー
0691				
0692	D4B1	CE 0030		DL1   	LDX   	#KBUF          	;Arduinoから送られてくる文字列を#KBUFへ格納
0693	D4B4	BD D7D0		DL2   	JSR   	RCVBYTE        	
0694	D4B7	BD D548		      	JSR   	AZLCNV         	;大文字に変換
0695	D4BA	4D		      	TSTA  			
0696	D4BB	27 11		      	BEQ   	DL3            	;$00を受信するまでを一行とする
0697	D4BD	81 FF		      	CMPA  	#$FF           	
0698	D4BF	27 23		      	BEQ   	DL4            	;$FFを受信したら終了
0699	D4C1	81 FD		      	CMPA  	#$FD           	
0700	D4C3	27 25		      	BEQ   	DL9            	;$FD受信で文字列を取得してSETLしたことを表示
0701	D4C5	81 FE		      	CMPA  	#$FE           	
0702	D4C7	27 47		      	BEQ   	DL5            	;$FEを受信したら一時停止して一文字入力待ち
0703	D4C9	A7 00		      	STAA  	X              	
0704	D4CB	08		      	INX   			
0705	D4CC	20 E6		      	BRA   	DL2            	
0706				
0707	D4CE			DL3   				
0708	D4CE	86 0D		      	LDAA  	#$0D           	;$00を受信したら一行分を表示して改行
0709	D4D0	A7 00		      	STAA  	X              	
0710	D4D2	08		      	INX   			
0711	D4D3	86 0A		      	LDAA  	#$0A           	
0712	D4D5	A7 00		      	STAA  	X              	
0713	D4D7	08		      	INX   			
0714				
0715	D4D8	4F		      	CLRA  			
0716	D4D9	A7 00		      	STAA  	X              	
0717	D4DB	08		      	INX   			
0718	D4DC	CE 0030		      	LDX   	#KBUF          	
0719	D4DF	BD D553		      	JSR   	STRPRN         	;1行表示
0720	D4E2	20 CD		DL33  	BRA   	DL1            	
0721				
0722	D4E4	BD D7D0		DL4   	JSR   	RCVBYTE        	;状態取得(00H=OK)して終了
0723	D4E7	DE E8		      	LDX   	XSAVE          	
0724	D4E9	39		      	RTS   			
0725				
0726	D4EA	CE 0030		DL9   	LDX   	#KBUF          	;文字列を取得
0727	D4ED	BD D7D0		DL91  	JSR   	RCVBYTE        	;#KBUFへ文字列格納
0728	D4F0	BD D548		      	JSR   	AZLCNV         	;大文字に変換
0729	D4F3	A7 00		      	STAA  	X              	
0730	D4F5	08		      	INX   			
0731	D4F6	4D		      	TSTA  			;$00を受信するまで受信処理
0732	D4F7	26 F4		      	BNE   	DL91           	
0733	D4F9	BD D7D0		      	JSR   	RCVBYTE        	;$FF終了コード読み飛ばし
0734	D4FC	BD D7D0		      	JSR   	RCVBYTE        	;状態取得読み飛ばし
0735	D4FF	CE 0030		      	LDX   	#KBUF          	
0736	D502	86 80		      	LDAA  	#$80           	;コマンド$80を送信、そのままLOADコマンド実行
0737	D504	BD D7E4		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0738	D507	BD D7D0		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0739	D50A	4D		      	TSTA  			
0740	D50B	26 34		      	BNE   	ERRJ6          	;ERRORになるはずはないが念のため
0741	D50D	7E D051		      	JMP   	FN0            	
0742				
0743	D510	DF EA		DL5   	STX   	XSAVE2         	
0744	D512	CE D7A0		      	LDX   	#MSGKEY        	;SEL:0-9 NXT:ANY BCK:B BRK:RET
0745	D515	BD D553		      	JSR   	STRPRN         	;文字列表示
0746	D518	DE EA		      	LDX   	XSAVE2         	
0747	D51A	BD D5AE		DL6   	JSR   	KSCN2          	;キーボートスキャン
0748	D51D	4D		      	TSTA  			
0749	D51E	27 FA		      	BEQ   	DL6            	;何か入力されるまでループ
0750	D520	36		      	PSHA  			
0751	D521	BD F018		      	JSR   	BEEP           	
0752	D524	32		      	PULA  			
0753	D525	81 0D		      	CMPA  	#$0D           	
0754	D527	27 0F		      	BEQ   	DL7            	;RETURNで打ち切り
0755	D529	81 30		      	CMPA  	#$30           	;数字0～9ならそのままArduinoへ送信してSETL処理へ
0756	D52B	25 04		      	BCS   	DL61           	
0757	D52D	81 3A		      	CMPA  	#$3A           	
0758	D52F	25 09		      	BCS   	DL8            	
0759	D531	81 42		DL61  	CMPA  	#$42           	
0760	D533	27 05		      	BEQ   	DL8            	;「B」で前ページ
0761	D535	4F		      	CLRA  			
0762	D536	20 02		      	BRA   	DL8            	;それ以外で継続
0763	D538	86 FF		DL7   	LDAA  	#$FF           	
0764	D53A	BD D7E4		DL8   	JSR   	SNDBYTE        	
0765	D53D	7E D4B4		      	JMP   	DL2            	
0766				
0767	D540	39		SDIR99	RTS   			
0768	D541	7E D2B1		ERRJ6 	JMP   	ERR            	
0769				
0770				;--------------- MEXECUTE 機械語読み込みアドレスを実行アドレスとしてジャンプ -------
0771	D544	DE F2		MEXEC 	LDX   	ADRS2          	
0772	D546	6E 00		      	JMP   	X              	
0773				
0774				;--------------- Aレジスタのアルファベット小文字を大文字に変換 ----------------
0775	D548	81 61		AZLCNV	CMPA  	#$61           	;a～zなら$20を引いてA～Zに変換
0776	D54A	25 06		      	BCS   	AZ1            	
0777	D54C	81 7B		      	CMPA  	#$7B           	
0778	D54E	24 02		      	BCC   	AZ1            	
0779	D550	80 20		      	SUBA  	#$20           	
0780	D552	39		AZ1   	RTS   			
0781				
0782				;--------------- 文字列出力 ----------------------
0783				;(X)から$00までの文字列を表示
0784	D553			STRPRN				
0785	D553	A6 00		      	LDAA  	X              	;A <- (X)
0786	D555	4D		      	TSTA  			;$00なら終了
0787	D556	27 06		      	BEQ   	SP1            	
0788	D558	BD F3BC		      	JSR   	PRINT          	;1文字出力
0789	D55B	08		      	INX   			
0790	D55C	20 F5		      	BRA   	STRPRN         	
0791	D55E	39		SP1   	RTS   			
0792				
0793				;------------------- Aレジスタの内容を16進数文字列として表示 -------------------------
0794	D55F	36		PRHEX 	PSHA  			
0795	D560	84 F0		      	ANDA  	#$F0           	;上位4ビットを変換
0796	D562	44		      	LSRA  			
0797	D563	44		      	LSRA  			
0798	D564	44		      	LSRA  			
0799	D565	44		      	LSRA  			
0800	D566	8D 06		      	BSR   	PRHX1          	
0801	D568	32		      	PULA  			
0802	D569	84 0F		      	ANDA  	#$0F           	;下位4ビットを変換
0803	D56B	8D 01		      	BSR   	PRHX1          	
0804	D56D	39		      	RTS   			
0805				
0806	D56E	81 0A		PRHX1 	CMPA  	#$0A           	
0807	D570	25 04		      	BCS   	PH2            	
0808	D572	8B 37		      	ADDA  	#$37           	;A～F
0809	D574	20 02		      	BRA   	PH3            	
0810	D576	8B 30		PH2   	ADDA  	#$30           	;0～9
0811	D578	BD F3BC		PH3   	JSR   	PRINT          	
0812	D57B	39		      	RTS   			
0813				
0814				
0815				;----- (X),(X+1)の2バイトアスキーコード文字列を16進数にしてAレジスタへ -----------------
0816				;                          '0'～'9','A'～'F'以外が含まれていたらA=0 C=1
0817	D57C	A6 00		SHEX2 	LDAA  	X              	
0818	D57E	8D 11		      	BSR   	SHEX           	
0819	D580	25 0E		      	BCS   	SH21           	;ERRORなら中断
0820	D582	16		      	TAB   			
0821	D583	58		      	ASLB  			
0822	D584	58		      	ASLB  			
0823	D585	58		      	ASLB  			
0824	D586	58		      	ASLB  			;Bレジスタに送って16倍
0825	D587	08		      	INX   			
0826	D588	A6 00		      	LDAA  	X              	
0827	D58A	8D 05		      	BSR   	SHEX           	
0828	D58C	25 02		      	BCS   	SH21           	;ERRORなら中断
0829	D58E	1B		      	ABA   			;Bレジスタを加算
0830	D58F	08		      	INX   			
0831	D590	39		SH21  	RTS   			
0832				
0833				;----------------- Aレジスタのアスキーコードを16進数にしてAレジスタへ  --------------------
0834				;                          '0'～'9','A'～'F'以外ならA=0 C=1
0835	D591	81 30		SHEX  	CMPA  	#'0'           	
0836	D593	25 12		      	BCS   	SH2            	
0837	D595	81 3A		      	CMPA  	#':'           	
0838	D597	25 0A		      	BCS   	SH1            	
0839	D599	81 41		      	CMPA  	#'A'           	
0840	D59B	25 0A		      	BCS   	SH2            	
0841	D59D	81 47		      	CMPA  	#'G'           	
0842	D59F	25 0A		      	BCS   	SH3            	
0843	D5A1	20 04		      	BRA   	SH2            	
0844				
0845	D5A3	80 30		SH1   	SUBA  	#$30           	;0～9
0846	D5A5	20 06		      	BRA   	SH4            	
0847	D5A7	4F		SH2   	CLRA  			;ERROR
0848	D5A8	0D		      	SEC   			
0849	D5A9	20 02		      	BRA   	SH4            	
0850	D5AB	80 37		SH3   	SUBA  	#$37           	;A～F
0851	D5AD	39		SH4   	RTS   			
0852				
0853				;--------- キー入力(エコーバックなし) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊 CTRLキー未対応 --------
0854	D5AE	DF EE		KSCN2 	STX   	XSAVEK         	
0855	D5B0	CE C800		      	LDX   	#KEYDAT        	
0856	D5B3	5F		      	CLRB  			
0857	D5B4	17		KSC0  	TBA   			
0858	D5B5	A7 01		      	STAA  	1,X            	;KEYSEL($C801)に出力
0859	D5B7	A6 00		      	LDAA  	X              	;KEYDAT($C800)のデータを取得
0860	D5B9	84 1F		      	ANDA  	#$1F           	
0861	D5BB	81 1F		      	CMPA  	#$1F           	;何か押されている？
0862	D5BD	26 08		      	BNE   	KSC1           	
0863	D5BF	5C		      	INCB  			;押されていなければ次のスキャン
0864	D5C0	C1 09		      	CMPB  	#$09           	;$00～$08まで検査
0865	D5C2	26 F0		      	BNE   	KSC0           	
0866	D5C4	4F		      	CLRA  			;何も押されていなければ$00でリターン
0867	D5C5	20 3C		      	BRA   	KSC15          	
0868				
0869	D5C7	36		KSC1  	PSHA  			;何か押されていた時の処理
0870	D5C8	58		      	ASLB  			;B <- B*8
0871	D5C9	58		      	ASLB  			
0872	D5CA	58		      	ASLB  			
0873	D5CB	CE D658		      	LDX   	#KTBL          	
0874	D5CE	DF EC		      	STX   	ADRSK          	;(ADRSK) <- KTBL
0875	D5D0	96 ED		      	LDAA  	ADRSK+1        	
0876	D5D2	1B		      	ABA   			
0877	D5D3	97 ED		      	STAA  	ADRSK+1        	
0878	D5D5	96 EC		      	LDAA  	ADRSK          	
0879	D5D7	89 00		      	ADCA  	#$00           	
0880	D5D9	97 EC		      	STAA  	ADRSK          	;(ADRSK) <- (ADRSK) + B
0881	D5DB	32		      	PULA  			
0882	D5DC	DE EC		      	LDX   	ADRSK          	
0883	D5DE	47		      	ASRA  			
0884	D5DF	24 0C		      	BCC   	KSC2           	
0885	D5E1	47		      	ASRA  			
0886	D5E2	24 0D		      	BCC   	KSC3           	
0887	D5E4	47		      	ASRA  			
0888	D5E5	24 12		      	BCC   	KSC4           	
0889	D5E7	47		      	ASRA  			
0890	D5E8	24 13		      	BCC   	KSC5           	
0891	D5EA	47		      	ASRA  			
0892	D5EB	24 14		      	BCC   	KSC6           	
0893	D5ED	A6 00		KSC2  	LDAA  	X              	;D0列を取得
0894	D5EF	20 12		      	BRA   	KSC15          	
0895	D5F1	A6 01		KSC3  	LDAA  	1,X            	;D1列を取得
0896	D5F3	81 FF		      	CMPA  	#$FF           	;SHIFTキーが押されていたらもう一度スキャン
0897	D5F5	27 0F		      	BEQ   	KSC7           	
0898	D5F7	20 0A		      	BRA   	KSC15          	
0899	D5F9	A6 02		KSC4  	LDAA  	2,X            	;D2列を取得
0900	D5FB	20 06		      	BRA   	KSC15          	
0901	D5FD	A6 03		KSC5  	LDAA  	3,X            	;D3列を取得
0902	D5FF	20 02		      	BRA   	KSC15          	
0903	D601	A6 04		KSC6  	LDAA  	4,X            	;D4列を取得
0904				
0905	D603	DE EE		KSC15 	LDX   	XSAVEK         	
0906	D605	39		      	RTS   			
0907				
0908	D606	CE C800		KSC7  	LDX   	#KEYDAT        	;SHIFTキーが押されていた時のスキャン
0909	D609	C6 01		      	LDAB  	#$01           	
0910	D60B	17		KSC8  	TBA   			
0911	D60C	A7 01		      	STAA  	1,X            	;KEYSEL($C801)に出力
0912	D60E	A6 00		      	LDAA  	X              	;KEYDAT($C800)のデータを取得
0913	D610	84 1F		      	ANDA  	#$1F           	
0914	D612	81 1F		      	CMPA  	#$1F           	;何か押されている？
0915	D614	26 08		      	BNE   	KSC9           	
0916	D616	5C		      	INCB  			;押されていなければ次のスキャン
0917	D617	C1 09		      	CMPB  	#$09           	;$00～$08まで検査
0918	D619	26 F0		      	BNE   	KSC8           	
0919	D61B	4F		      	CLRA  			;SHIFTキー以外押されていなければ$00でリターン
0920	D61C	20 E5		      	BRA   	KSC15          	
0921	D61E	36		KSC9  	PSHA  			;SHIFTキー以外押されていた時の処理
0922	D61F	58		      	ASLB  			;B <- B*8
0923	D620	58		      	ASLB  			
0924	D621	58		      	ASLB  			
0925	D622	CE D6A0		      	LDX   	#KTBL2         	
0926	D625	DF EC		      	STX   	ADRSK          	;(ADRSK) <- KTBL2
0927	D627	96 ED		      	LDAA  	ADRSK+1        	
0928	D629	1B		      	ABA   			
0929	D62A	97 ED		      	STAA  	ADRSK+1        	
0930	D62C	96 EC		      	LDAA  	ADRSK          	
0931	D62E	89 00		      	ADCA  	#$00           	
0932	D630	97 EC		      	STAA  	ADRSK          	;(ADRSK) <- (ADRSK) + B
0933	D632	32		      	PULA  			
0934	D633	DE EC		      	LDX   	ADRSK          	
0935	D635	47		      	ASRA  			
0936	D636	24 0C		      	BCC   	KSC10          	
0937	D638	47		      	ASRA  			
0938	D639	24 0D		      	BCC   	KSC11          	
0939	D63B	47		      	ASRA  			
0940	D63C	24 0E		      	BCC   	KSC12          	
0941	D63E	47		      	ASRA  			
0942	D63F	24 0F		      	BCC   	KSC13          	
0943	D641	47		      	ASRA  			
0944	D642	24 10		      	BCC   	KSC14          	
0945	D644	A6 00		KSC10 	LDAA  	X              	;D1列を取得
0946	D646	20 BB		      	BRA   	KSC15          	
0947	D648	A6 01		KSC11 	LDAA  	1,X            	;D1列を取得
0948	D64A	20 B7		      	BRA   	KSC15          	
0949	D64C	A6 02		KSC12 	LDAA  	2,X            	;D2列を取得
0950	D64E	20 B3		      	BRA   	KSC15          	
0951	D650	A6 03		KSC13 	LDAA  	3,X            	;D3列を取得
0952	D652	20 AF		      	BRA   	KSC15          	
0953	D654	A6 04		KSC14 	LDAA  	4,X            	;D4列を取得
0954	D656	20 AB		      	BRA   	KSC15          	
0955				
0956				;--------------- KEY TABLE -------------------------
0957	D658	00 FF 5A 58 	KTBL  	FCB   	$00,$FF,'Z','X','C',$00,$00,$00	
		43 00 00 00 
0958	D660	41 53 44 46 	      	FCB   	'A','S','D','F','G',$00,$00,$00	
		47 00 00 00 
0959	D668	51 57 45 52 	      	FCB   	'Q','W','E','R','T',$00,$00,$00	
		54 00 00 00 
0960	D670	31 32 33 34 	      	FCB   	'1','2','3','4','5',$00,$00,$00	
		35 00 00 00 
0961	D678	36 37 38 39 	      	FCB   	'6','7','8','9','0',$00,$00,$00	
		30 00 00 00 
0962	D680	59 55 49 4F 	      	FCB   	'Y','U','I','O','P',$00,$00,$00	
		50 00 00 00 
0963	D688	48 4A 4B 4C 	      	FCB   	'H','J','K','L',';',$00,$00,$00	
		3B 00 00 00 
0964	D690	56 42 4E 4D 	      	FCB   	'V','B','N','M',$2C,$00,$00,$00	
		2C 00 00 00 
0965	D698	2E 20 3A 0D 	      	FCB   	'.',' ',':',$0D,'-',$00,$00,$00	
		2D 00 00 00 
0966				
0967				;--------------- SHIFT用 KEY TABLE ------------------
0968	D6A0	00 00 00 00 	KTBL2 	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0969	D6A8	00 00 00 00 	      	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0970	D6B0	00 00 00 00 	      	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0971	D6B8	21 22 23 24 	      	FCB   	'!','"','#','$','%',$00,$00,$00	
		25 00 00 00 
0972	D6C0	26 27 29 28 	      	FCB   	'&',$27,')','(','^',$00,$00,$00	
		5E 00 00 00 
0973	D6C8	00 40 5C 5B 	      	FCB   	$00,'@','\','[',']',$00,$00,$00	
		5D 00 00 00 
0974	D6D0	00 00 3F 2F 	      	FCB   	$00,$00,'?','/','+',$00,$00,$00	
		2B 00 00 00 
0975	D6D8	00 00 00 2D 	      	FCB   	$00,$00,$00,'-','<',$00,$00,$00	
		3C 00 00 00 
0976	D6E0	3E 20 2A 0D 	      	FCB   	'>',' ','*',$0D,'=',$00,$00,$00	
		3D 00 00 00 
0977				
0978				;--------------- MESSAGE -------------------------
0979	D6E8	4A 52 2D 31 	SDMSG 	FCC     	/JR-100_SD READY OK!/	
    	    	30 30 5F 53 
    	    	44 20 52 45 
    	    	41 44 59 20 
    	    	4F 4B 21 
0980	D6FB	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0981				
0982	D6FE	43 4D 54 20 	CMTMSG	FCC     	/CMT OK!/	
    	    	4F 4B 21 
0983	D705	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0984				
0985	D708	0A 0D 		BSMSG 	FCB   	$0A,$0D        	
0986	D70A	42 41 53 49 	      	FCC     	/BASIC /	
    	    	43 20 
0987	D710	00 		      	FCB   	$00            	
0988				
0989	D711	0A 0D 		BNMSG 	FCB   	$0A,$0D        	
0990	D713	42 49 4E 41 	      	FCC     	/BINARY /	
    	    	52 59 20 
0991	D71A	00 		      	FCB   	$00            	
0992				
0993	D71B	4C 4F 41 44 	LDMSG 	FCC     	/LOADING /	
    	    	49 4E 47 20 
0994	D723	00 		      	FCB   	$00            	
0995				
0996	D724	0A 0D 		SVMSG 	FCB   	$0A,$0D        	
0997	D726	53 41 56 45 	      	FCC     	/SAVEING/	
    	    	49 4E 47 
0998	D72D	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0999				
1000	D730	0A 0D 00 		CRLF  	FCB   	$0A,$0D,$00    	
1001				
1002	D733			MSG_F0				
1003	D733	53 44 2D 43 	      	FCC     	/SD-CARD INITIALIZE ERROR/	
    	    	41 52 44 20 
    	    	49 4E 49 54 
    	    	49 41 4C 49 
    	    	5A 45 20 45 
    	    	52 52 4F 52 
1004	D74B	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1005				
1006	D74E			MSG_F1				
1007	D74E	4E 4F 54 20 	      	FCC     	/NOT FIND FILE/	
    	    	46 49 4E 44 
    	    	20 46 49 4C 
    	    	45 
1008	D75B	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1009				
1010	D75E			MSG_F3				
1011	D75E	46 49 4C 45 	      	FCC     	/FILE EXIST/	
    	    	20 45 58 49 
    	    	53 54 
1012	D768	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1013				
1014	D76B			MSG_F4				
1015	D76B	50 52 4F 47 	      	FCC     	/PROG FORMAT VERSION ERROR/	
    	    	20 46 4F 52 
    	    	4D 41 54 20 
    	    	56 45 52 53 
    	    	49 4F 4E 20 
    	    	45 52 52 4F 
    	    	52 
1016	D784	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1017				
1018	D787			MSG99 				
1019	D787	20 45 52 52 	      	FCC     	/ ERROR/	
    	    	4F 52 
1020	D78D	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1021				
1022	D790			MSG_AD				
1023	D790	41 44 44 52 	      	FCC     	/ADDRESS ERROR/	
    	    	45 53 53 20 
    	    	45 52 52 4F 
    	    	52 
1024	D79D	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1025				
1026	D7A0	53 45 4C 3A 	MSGKEY	FCC     	/SEL:0-9 NXT:ANY BCK:B BRK:RET/	
    	    	30 2D 39 20 
    	    	4E 58 54 3A 
    	    	41 4E 59 20 
    	    	42 43 4B 3A 
    	    	42 20 42 52 
    	    	4B 3A 52 45 
    	    	54 
1027	D7BD	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1028				
1029				**** BUSYをCHECK(1) ****
1030				;PORTA BIT4が1になるまでLOOP
1031	D7C0	B6 CC12		F1CHK 	LDAA  	PIOB           	
1032	D7C3	84 10		      	ANDA  	#$10           	;PORTB BIT4 = 1?
1033	D7C5	27 F9		      	BEQ   	F1CHK          	
1034	D7C7	39		      	RTS   			
1035				
1036				**** BUSYをCHECK(0) ****
1037				;PORTA BIT4が0になるまでLOOP
1038	D7C8	B6 CC12		F2CHK 	LDAA  	PIOB           	
1039	D7CB	84 10		      	ANDA  	#$10           	;PORTB BIT4 = 0?
1040	D7CD	26 F9		      	BNE   	F2CHK          	
1041	D7CF	39		      	RTS   			
1042				
1043				**** 1BYTE受信****
1044				*受信データをアキュムレータAにセットしてリターン
1045	D7D0	8D EE		RCVBYTE	BSR   	F1CHK          	;PORTB BIT4が1になるまでLOOP
1046	D7D2	B6 CC10		      	LDAA  	PIOA           	;PORTA -> A
1047	D7D5	36		      	PSHA  			
1048	D7D6	86 20		      	LDAA  	#$20           	
1049	D7D8	B7 CC12		      	STAA  	PIOB           	;PORTB BIT5 <- 1
1050	D7DB	8D EB		      	BSR   	F2CHK          	;PORTB BIT4が0になるまでLOOP
1051	D7DD	86 00		      	LDAA  	#$00           	
1052	D7DF	B7 CC12		      	STAA  	PIOB           	;PORTB BIT5 <- 0
1053	D7E2	32		      	PULA  			
1054	D7E3	39		      	RTS   			
1055				
1056				**** 1BYTE送信 ****
1057				*アキュムレータAの内容をPORTB下位4BITに4BITずつ送信
1058	D7E4			SNDBYTE				
1059	D7E4	36		      	PSHA  			
1060	D7E5	44		      	LSRA  			
1061	D7E6	44		      	LSRA  			
1062	D7E7	44		      	LSRA  			
1063	D7E8	44		      	LSRA  			
1064	D7E9	84 0F		      	ANDA  	#$0F           	
1065	D7EB	8D 06		      	BSR   	SND4BIT        	
1066	D7ED	32		      	PULA  			
1067	D7EE	84 0F		      	ANDA  	#$0F           	
1068	D7F0	8D 01		      	BSR   	SND4BIT        	
1069	D7F2	39		      	RTS   			
1070				
1071				**** 4BIT送信 ****
1072				*アキュムレータA下位4ビットを送信する
1073	D7F3			SND4BIT				
1074				;		STAA	PIOB
1075	D7F3	8A 20		      	ORAA  	#$20           	
1076	D7F5	B7 CC12		      	STAA  	PIOB           	;PORTB BIT5 <- 1
1077	D7F8	8D C6		      	BSR   	F1CHK          	;PORTB BIT4が1になるまでLOOP
1078	D7FA	84 0F		      	ANDA  	#$0F           	
1079	D7FC	B7 CC12		      	STAA  	PIOB           	;PORTB BIT5 <- 0
1080	D7FF	8D C7		      	BSR   	F2CHK          	
1081	D801	39		      	RTS   			
1082				
1083				
1084				;**** 6821初期化 ****
1085				;*PORTB下位BITをOUTPUT、PORTB BIT4をINPUT、PORTB BIT5をOUTPUT、PORTAをINPUT
1086	D802	4F		PIOINI	CLRA  			
1087	D803	B7 CC13		      	STAA  	PIOCB          	;データ方向レジスタ(B)を選択
1088	D806	86 EF		      	LDAA  	#$EF           	;PORTB下位BITをOUTPUT、PORTB BIT4をINPUT、PORTB BIT5をOUTPUTに設定
1089	D808	B7 CC12		      	STAA  	PIOB           	
1090	D80B	86 2C		      	LDAA  	#$2C           	
1091	D80D	B7 CC13		      	STAA  	PIOCB          	;PORTBに切り替え
1092	D810	4F		      	CLRA  			
1093	D811	B7 CC12		      	STAA  	PIOB           	;PORTBクリア
1094				;		CLRA
1095	D814	B7 CC11		      	STAA  	PIOCA          	;データ方向レジスタ(A)を選択
1096	D817	B7 CC10		      	STAA  	PIOA           	;PORTAをINPUTに設定
1097	D81A	86 2C		      	LDAA  	#$2C           	
1098	D81C	B7 CC11		      	STAA  	PIOCA          	;PORTAに切り替え
1099	D81F	39		      	RTS   			
1100				
1101				
1102				;---------------------- BASICコマンドテーブルを再定義 ------------------
1103	D820			BTBL  				
1104	D820	E439 		      	FDB   	$E439          	
1105				
1106	D822	4C 49 53 		      	FCC     	/LIS/   	
1107	D825	D4 		      	FCB   	'T'+$80        	
1108	D826	F3C2 		      	FDB   	$F3C2          	
1109				
1110	D828	52 55 		      	FCC     	/RU/    	
1111	D82A	CE 		      	FCB   	'N'+$80        	
1112	D82B	E6AB 		      	FDB   	$E6AB          	
1113				
1114	D82D	52 45 53 45 	      	FCC     	/RESE/  	
1115	D831	D4 		      	FCB   	'T'+$80        	
1116	D832	E400 		      	FDB   	$E400          	
1117				
1118	D834	41 55 54 		      	FCC     	/AUT/   	
1119	D837	CF 		      	FCB   	'O'+$80        	
1120	D838	E526 		      	FDB   	$E526          	
1121				
1122	D83A	4E 45 		      	FCC     	/NE/    	
1123	D83C	D7 		      	FCB   	'W'+$80        	
1124	D83D	E41E 		      	FDB   	$E41E          	
1125				
1126	D83F	4C 4C 49 53 	      	FCC     	/LLIS/  	
1127	D843	D4 		      	FCB   	'T'+$80        	
1128	D844	F3BF 		      	FDB   	$F3BF          	
1129				
1130	D846	46 49 4E 44 	      	FCC     	/FIND/  	
1131	D84A	A2 		      	FCB   	'"'+$80        	
1132	D84B	F120 		      	FDB   	$F120          	
1133				
1134	D84D	43 4F 4E 		      	FCC     	/CON/   	
1135	D850	D4 		      	FCB   	'T'+$80        	
1136	D851			CTBL  				
1137	D851	F21E 		      	FDB   	$F21E          	
1138				
1139	D853	4C 45 		      	FCC     	/LE/    	
1140	D855	D4 		      	FCB   	'T'+$80        	
1141	D856	F26E 		      	FDB   	$F26E          	
1142				
1143	D858	49 		      	FCC     	/I/     	
1144	D859	C6 		      	FCB   	'F'+$80        	
1145	D85A	E67B 		      	FDB   	$E67B          	
1146				
1147	D85C	47 4F 54 		      	FCC     	/GOT/   	
1148	D85F	CF 		      	FCB   	'O'+$80        	
1149	D860	F255 		      	FDB   	$F255          	
1150				
1151	D862	47 4F 53 55 	      	FCC     	/GOSU/  	
1152	D866	C2 		      	FCB   	'B'+$80        	
1153	D867	F256 		      	FDB   	$F256          	
1154				
1155	D869	52 45 		      	FCC     	/RE/    	
1156	D86B	D4 		      	FCB   	'T'+$80        	
1157	D86C	F22A 		      	FDB   	$F22A          	
1158				
1159	D86E	4E 45 58 		      	FCC     	/NEX/   	
1160	D871	D4 		      	FCB   	'T'+$80        	
1161	D872	F2F8 		      	FDB   	$F2F8          	
1162				
1163	D874	46 4F 		      	FCC     	/FO/    	
1164	D876	D2 		      	FCB   	'R'+$80        	
1165	D877	F294 		      	FDB   	$F294          	
1166				
1167	D879	54 48 45 		      	FCC     	/THE/   	
1168	D87C	CE 		      	FCB   	'N'+$80        	
1169	D87D	F1FD 		      	FDB   	$F1FD          	
1170				
1171	D87F	50 4F 4B 		      	FCC     	/POK/   	
1172	D882	C5 		      	FCB   	'E'+$80        	
1173	D883	EF38 		      	FDB   	$EF38          	
1174				
1175	D885	52 45 41 		      	FCC     	/REA/   	
1176	D888	C4 		      	FCB   	'D'+$80        	
1177	D889	F08B 		      	FDB   	$F08B          	
1178				
1179	D88B	44 41 54 		      	FCC     	/DAT/   	
1180	D88E	C1 		      	FCB   	'A'+$80        	
1181	D88F	F033 		      	FDB   	$F033          	
1182				
1183	D891	4C 4F 43 41 	      	FCC     	/LOCAT/ 	
    	    	54 
1184	D896	C5 		      	FCB   	'E'+$80        	
1185	D897	F19F 		      	FDB   	$F19F          	
1186				
1187	D899	50 49 43 		      	FCC     	/PIC/   	
1188	D89C	CB 		      	FCB   	'K'+$80        	
1189	D89D	EF63 		      	FDB   	$EF63          	
1190				
1191	D89F	52 45 53 54 	      	FCC     	/RESTOR/	
    	    	4F 52 
1192	D8A5	C5 		      	FCB   	'E'+$80        	
1193	D8A6	F0F3 		      	FDB   	$F0F3          	
1194				
1195	D8A8	52 45 		      	FCC     	/RE/    	
1196	D8AA	CD 		      	FCB   	'M'+$80        	
1197	D8AB	E652 		      	FDB   	$E652          	
1198				
1199	D8AD	50 52 49 4E 	      	FCC     	/PRIN/  	
1200	D8B1	D4 		      	FCB   	'T'+$80        	
1201	D8B2	E758 		      	FDB   	$E758          	
1202				
1203	D8B4	49 4E 50 55 	      	FCC     	/INPU/  	
1204	D8B8	D4 		      	FCB   	'T'+$80        	
1205	D8B9	F33A 		      	FDB   	$F33A          	
1206				
1207	D8BB	44 49 		      	FCC     	/DI/    	
1208	D8BD	CD 		      	FCB   	'M'+$80        	
1209	D8BE	EC9A 		      	FDB   	$EC9A          	
1210				
1211	D8C0	43 4C 45 41 	      	FCC     	/CLEA/  	
1212	D8C4	D2 		      	FCB   	'R'+$80        	
1213	D8C5	E426 		      	FDB   	$E426          	
1214				
1215	D8C7	53 54 4F 		      	FCC     	/STO/   	
1216	D8CA	D0 		      	FCB   	'P'+$80        	
1217	D8CB	E545 		      	FDB   	$E545          	
1218				
1219	D8CD	45 4E 		      	FCC     	/EN/    	
1220	D8CF	C4 		      	FCB   	'D'+$80        	
1221	D8D0	E5A3 		      	FDB   	$E5A3          	
1222				
1223	D8D2	4C 50 52 49 	      	FCC     	/LPRIN/ 	
    	    	4E 
1224	D8D7	D4 		      	FCB   	'T'+$80        	
1225	D8D8	E756 		      	FDB   	$E756          	
1226				
1227	D8DA	4F 50 54 49 	      	FCC     	/OPTIO/ 	
    	    	4F 
1228	D8DF	CE 		      	FCB   	'N'+$80        	
1229	D8E0	EFEA 		      	FDB   	$EFEA          	
1230				
1231	D8E2	42 45 45 50 	      	FCC     	/BEEP/  	
1232	D8E6	B0 		      	FCB   	'0'+$80        	
1233	D8E7	F021 		      	FDB   	$F021          	
1234				
1235	D8E9	42 45 45 50 	      	FCC     	/BEEP/  	
1236	D8ED	B1 		      	FCB   	'1'+$80        	
1237	D8EE	F000 		      	FDB   	$F000          	
1238				
1239	D8F0	42 45 45 		      	FCC     	/BEE/   	
1240	D8F3	D0 		      	FCB   	'P'+$80        	
1241	D8F4	F018 		      	FDB   	$F018          	
1242				
1243	D8F6	48 43 4F 50 	      	FCC     	/HCOP/  	
1244	D8FA	D9 		      	FCB   	'Y'+$80        	
1245	D8FB	E504 		      	FDB   	$E504          	
1246				
1247	D8FD	4C 4F 41 		      	FCC     	/LOA/   	
1248	D900	C4 		      	FCB   	'D'+$80        	
1249				;		FDB		$F4EF
1250	D901	D046 		      	FDB   	LOAD           	
1251				
1252	D903	4D 45 58 45 	      	FCC     	/MEXE/  	
1253	D907	C3 		      	FCB   	'C'+$80        	
1254				;		FDB		$F4E3
1255	D908	D544 		      	FDB   	MEXEC          	
1256				
1257	D90A	53 41 56 		      	FCC     	/SAV/   	
1258	D90D	C5 		      	FCB   	'E'+$80        	
1259				;		FDB		$F508
1260	D90E	D2E3 		      	FDB   	BSAVE          	
1261				
1262	D910	4D 53 41 56 	      	FCC     	/MSAVE/ 	
    	    	45 
1263	D915	A2 		      	FCB   	'"'+$80        	
1264				;		FDB		$F517
1265	D916	D3AC 		      	FDB   	MSAVE          	
1266				
1267	D918	56 45 52 49 	      	FCC     	/VERIF/ 	
    	    	46 
1268	D91D	D9 		      	FCB   	'Y'+$80        	
1269	D91E	F4FC 		      	FDB   	$F4FC          	
1270				
1271	D920	43 4C 		      	FCC     	/CL/    	
1272	D922	D3 		      	FCB   	'S'+$80        	
1273	D923	F47C 		      	FDB   	$F47C          	
1274				
1275	D925	53 44 44 49 	      	FCC     	/SDDI/  	
1276	D929	D2 		      	FCB   	'R'+$80        	
1277	D92A	D475 		      	FDB   	FILES          	
1278				
1279	D92C	FF 		      	FCB   	$FF            	
1280	D92D	F26E 		      	FDB   	$F26E          	
1281				
1282	D92F	52 4E 44 		      	FCC     	/RND/   	
1283	D932	A8 		      	FCB   	'('+$80        	
1284	D933	EB2C 		      	FDB   	$EB2C          	
1285				
1286	D935	41 42 53 		      	FCC     	/ABS/   	
1287	D938	A8 		      	FCB   	'('+$80        	
1288	D939	E95C 		      	FDB   	$E95C          	
1289				
1290	D93B	4D 4F 44 		      	FCC     	/MOD/   	
1291	D93E	A8 		      	FCB   	'('+$80        	
1292	D93F	EB0C 		      	FDB   	$EB0C          	
1293				
1294	D941	41 53 43 		      	FCC     	/ASC/   	
1295	D944	A8 		      	FCB   	'('+$80        	
1296	D945	EFB7 		      	FDB   	$EFB7          	
1297				
1298	D947	46 52 45 		      	FCC     	/FRE/   	
1299	D94A	A8 		      	FCB   	'('+$80        	
1300	D94B	EF6F 		      	FDB   	$EF6F          	
1301				
1302	D94D	50 45 45 4B 	      	FCC     	/PEEK/  	
1303	D951	A8 		      	FCB   	'('+$80        	
1304	D952	EF4D 		      	FDB   	$EF4D          	
1305				
1306	D954	53 47 4E 		      	FCC     	/SGN/   	
1307	D957	A8 		      	FCB   	'('+$80        	
1308	D958	EF74 		      	FDB   	$EF74          	
1309				
1310	D95A	4C 45 4E 		      	FCC     	/LEN/   	
1311	D95D	A8 		      	FCB   	'('+$80        	
1312	D95E	EFAB 		      	FDB   	$EFAB          	
1313				
1314	D960	56 50 4F 53 	      	FCC     	/VPOS/  	
1315	D964	A8 		      	FCB   	'('+$80        	
1316	D965	F185 		      	FDB   	$F185          	
1317				
1318	D967	48 50 4F 53 	      	FCC     	/HPOS/  	
1319	D96B	A8 		      	FCB   	'('+$80        	
1320	D96C	F175 		      	FDB   	$F175          	
1321				
1322	D96E	55 53 52 		      	FCC     	/USR/   	
1323	D971	A8 		      	FCB   	'('+$80        	
1324	D972	EB41 		      	FDB   	$EB41          	
1325				
1326	D974	56 41 4C 		      	FCC     	/VAL/   	
1327	D977	A8 		      	FCB   	'('+$80        	
1328	D978	EFBF 		      	FDB   	$EFBF          	
1329				
1330	D97A	FF 		      	FCB   	$FF            	
1331	D97B	EAA5 		      	FDB   	$EAA5          	
1332				
1333	D97D	54 		      	FCC     	/T/     	
1334	D97E	CF 		      	FCB   	'O'+$80        	
1335	D97F	1234 		      	FDB   	$1234          	
1336				
1337	D981	53 54 45 		      	FCC     	/STE/   	
1338	D984	D0 		      	FCB   	'P'+$80        	
1339	D985	ABCD 		      	FDB   	$ABCD          	
1340				
1341	D987	53 50 43 		      	FCC     	/SPC/   	
1342	D98A	A8 		      	FCB   	'('+$80        	
1343	D98B	EF95 		      	FDB   	$EF95          	
1344				
1345	D98D	54 41 42 		      	FCC     	/TAB/   	
1346	D990	A8 		      	FCB   	'('+$80        	
1347	D991	E78F 		      	FDB   	$E78F          	
1348				
1349	D993	46 4C 44 		      	FCC     	/FLD/   	
1350	D996	A8 		      	FCB   	'('+$80        	
1351	D997	EFD3 		      	FDB   	$EFD3          	
1352				
1353	D999	FF 		      	FCB   	$FF            	
1354	D99A	E7C4 		      	FDB   	$E7C4          	
1355				
1356	D99C	48 45 58 24 	      	FCC     	/HEX$/  	
1357	D9A0	A8 		      	FCB   	'('+$80        	
1358	D9A1	F147 		      	FDB   	$F147          	
1359				
1360	D9A3	43 48 52 24 	      	FCC     	/CHR$/  	
1361	D9A7	A8 		      	FCB   	'('+$80        	
1362	D9A8	F1EC 		      	FDB   	$F1EC          	
1363				
1364	D9AA	4C 45 46 54 	      	FCC     	/LEFT$/ 	
    	    	24 
1365	D9AF	A8 		      	FCB   	'('+$80        	
1366	D9B0	EE80 		      	FDB   	$EE80          	
1367				
1368	D9B2	52 49 47 48 	      	FCC     	/RIGHT$/	
    	    	54 24 
1369	D9B8	A8 		      	FCB   	'('+$80        	
1370	D9B9	EE88 		      	FDB   	$EE88          	
1371				
1372	D9BB	4D 49 44 24 	      	FCC     	/MID$/  	
1373	D9BF	A8 		      	FCB   	'('+$80        	
1374	D9C0	EEA2 		      	FDB   	$EEA2          	
1375				
1376	D9C2	FF 		      	FCB   	$FF            	
1377	D9C3	EEEF 		      	FDB   	$EEEF          	
1378				
1379	D9C5	43 4D 4F 44 	      	FCC     	/CMODE/ 	
    	    	45 
1380	D9CA	B0 		      	FCB   	'0'+$80        	
1381	D9CB	EFF7 		      	FDB   	$EFF7          	
1382				
1383	D9CD	43 4D 4F 44 	      	FCC     	/CMODE/ 	
    	    	45 
1384	D9D2	B1 		      	FCB   	'1'+$80        	
1385	D9D3	EFFA 		      	FDB   	$EFFA          	
1386				
1387	D9D5	4F 56 46 		      	FCC     	/OVF/   	
1388	D9D8	B0 		      	FCB   	'0'+$80        	
1389	D9D9	EFF0 		      	FDB   	$EFF0          	
1390				
1391	D9DB	4F 56 46 		      	FCC     	/OVF/   	
1392	D9DE	B1 		      	FCB   	'1'+$80        	
1393	D9DF	EFF3 		      	FDB   	$EFF3          	
1394				
1395	D9E1	FF 		      	FCB   	$FF            	
1396	D9E2	EAFD 		      	FDB   	$EAFD          	
1397				
1398				;------------------ MEMORY EDIT ----------------------------
1399	DD00			      	ORG   	$DD00          	
1400				
1401	DD00	DF E4		      	STX   	ADRS           	
1402	DD02	96 E4		ME8   	LDAA  	ADRS           	
1403	DD04	BD D55F		      	JSR   	PRHEX          	
1404	DD07	96 E5		      	LDAA  	ADRS+1         	
1405	DD09	BD D55F		      	JSR   	PRHEX          	
1406	DD0C	BD F3BA		      	JSR   	SPC            	
1407				
1408	DD0F	8D 2B		ME0   	BSR   	ME1            	
1409	DD11	25 4F		      	BCS   	ME6            	
1410	DD13	16		      	TAB   			
1411	DD14	58		      	ASLB  			
1412	DD15	58		      	ASLB  			
1413	DD16	58		      	ASLB  			
1414	DD17	58		      	ASLB  			;Bレジスタに送って16倍
1415	DD18	37		      	PSHB  			
1416	DD19	8D 21		      	BSR   	ME1            	
1417	DD1B	33		      	PULB  			
1418	DD1C	25 44		      	BCS   	ME6            	
1419	DD1E	1B		      	ABA   			
1420	DD1F	A7 00		      	STAA  	X              	
1421	DD21	08		      	INX   			
1422	DD22	DF E4		      	STX   	ADRS           	
1423	DD24	96 E5		      	LDAA  	ADRS+1         	
1424	DD26	84 07		      	ANDA  	#$07           	;次のアドレスが$xxx0又は$xxx8のなら改行してアドレス表示へ
1425	DD28	4D		      	TSTA  			
1426	DD29	27 07		      	BEQ   	ME7            	
1427	DD2B	BD F3BA		      	JSR   	SPC            	;次のアドレスが$xxx0又は$xxx8でないなら空白1文字表示
1428	DD2E	DE E4		      	LDX   	ADRS           	
1429	DD30	20 DD		      	BRA   	ME0            	
1430	DD32	CE D730		ME7   	LDX   	#CRLF          	
1431	DD35	BD D553		      	JSR   	STRPRN         	;改行
1432	DD38	DE E4		      	LDX   	ADRS           	
1433	DD3A	20 C6		      	BRA   	ME8            	
1434				
1435	DD3C	BD E4F2		ME1   	JSR   	INPUT          	
1436	DD3F	81 30		      	CMPA  	#$30           	
1437	DD41	25 0C		      	BCS   	ME2            	
1438	DD43	81 3A		      	CMPA  	#$3A           	
1439	DD45	25 13		      	BCS   	ME3            	
1440	DD47	81 41		      	CMPA  	#$41           	
1441	DD49	25 04		      	BCS   	ME2            	
1442	DD4B	81 47		      	CMPA  	#$47           	
1443	DD4D	25 0E		      	BCS   	ME4            	
1444	DD4F	81 0D		ME2   	CMPA  	#$0D           	
1445	DD51	27 0D		      	BEQ   	ME5            	
1446	DD53	86 08		      	LDAA  	#$08           	
1447	DD55	BD F3BC		      	JSR   	PRINT          	
1448	DD58	20 E2		      	BRA   	ME1            	
1449	DD5A	80 30		ME3   	SUBA  	#$30           	
1450	DD5C	39		      	RTS   			
1451	DD5D	80 37		ME4   	SUBA  	#$37           	
1452	DD5F	39		      	RTS   			
1453	DD60	0D		ME5   	SEC   			
1454	DD61	39		      	RTS   			
1455	DD62	39		ME6   	RTS   			
1456				
1457				;------------------ MEMORY DUMP USR関数第2パラメータ(Xレジスタ)のアドレスからダンプ -----------------
1458	DE00			      	ORG   	$DE00          	
1459				
1460	DE00	DF E4		      	STX   	ADRS           	;16進コード表示用カウンタ
1461	DE02	DF E6		      	STX   	LENG           	;ASCIIコード表示用カウンタ
1462				
1463	DE04	C6 08		DPS   	LDAB  	#$08           	;8行を表示
1464	DE06	37		DP0   	PSHB  			
1465	DE07	DE E4		      	LDX   	ADRS           	
1466	DE09	96 E4		      	LDAA  	ADRS           	;アドレスを表示
1467	DE0B	BD D55F		      	JSR   	PRHEX          	
1468	DE0E	96 E5		      	LDAA  	ADRS+1         	
1469	DE10	BD D55F		      	JSR   	PRHEX          	
1470	DE13	BD F3BA		      	JSR   	SPC            	;空白表示
1471				
1472	DE16	C6 08		      	LDAB  	#$08           	;8Byte分を1行表示
1473	DE18	A6 00		DP1   	LDAA  	X              	
1474	DE1A	BD D55F		      	JSR   	PRHEX          	;Aレジスタを16進2桁で表示
1475	DE1D	08		      	INX   			
1476	DE1E	5A		      	DECB  			
1477	DE1F	26 F7		      	BNE   	DP1            	;ループ
1478	DE21	DF E4		      	STX   	ADRS           	;1行分最終アドレスを退避
1479				
1480	DE23	BD F3BA		      	JSR   	SPC            	;空白表示
1481				
1482	DE26	DE E6		      	LDX   	LENG           	
1483	DE28	C6 08		      	LDAB  	#$08           	;8Byte分
1484	DE2A	A6 00		DP2   	LDAA  	X              	
1485	DE2C	81 20		      	CMPA  	#$20           	;$20以下なら'.'($2E)に置き換え
1486	DE2E	24 02		      	BCC   	DP3            	
1487	DE30	86 2E		      	LDAA  	#$2E           	
1488	DE32	BD F3BC		DP3   	JSR   	PRINT          	
1489	DE35	08		      	INX   			
1490	DE36	5A		      	DECB  			
1491	DE37	26 F1		      	BNE   	DP2            	
1492	DE39	DF E6		      	STX   	LENG           	;1行分最終アドレスを退避
1493				
1494	DE3B	CE D730		      	LDX   	#CRLF          	
1495	DE3E	BD D553		      	JSR   	STRPRN         	;改行
1496	DE41	33		      	PULB  			
1497	DE42	5A		      	DECB  			
1498	DE43	26 C1		      	BNE   	DP0            	;ループ
1499				
1500	DE45	CE DE71		      	LDX   	#DPMES         	;継続指示メッセージ
1501	DE48	BD D553		      	JSR   	STRPRN         	
1502	DE4B	BD D5AE		DP4   	JSR   	KSCN2          	;キー入力待ち
1503	DE4E	4D		      	TSTA  			
1504	DE4F	27 FA		      	BEQ   	DP4            	
1505	DE51	81 20		      	CMPA  	#' '           	;スペースなら次ページ
1506	DE53	27 AF		      	BEQ   	DPS            	
1507	DE55	81 4E		      	CMPA  	#'N'           	;'N'なら次ページ
1508	DE57	27 AB		      	BEQ   	DPS            	
1509	DE59	81 42		      	CMPA  	#'B'           	;'B'なら前ページ
1510	DE5B	27 01		      	BEQ   	DP6            	
1511	DE5D	39		      	RTS   			
1512				
1513	DE5E	96 E5		DP6   	LDAA  	ADRS+1         	;'B'キーが押されたら(ADRS) <- (ADRS) - $80を計算して格納
1514	DE60	80 80		      	SUBA  	#$80           	
1515	DE62	97 E5		      	STAA  	ADRS+1         	
1516	DE64	97 E7		      	STAA  	LENG+1         	
1517	DE66	24 07		      	BCC   	DP7            	
1518	DE68	96 E4		      	LDAA  	ADRS           	
1519	DE6A	4A		      	DECA  			
1520	DE6B	97 E4		      	STAA  	ADRS           	
1521	DE6D	97 E6		      	STAA  	LENG           	
1522	DE6F	20 93		DP7   	BRA   	DPS            	
1523				
1524	DE71			DPMES 				
1525	DE71	2D 20 4E 45 	      	FCC     	/- NEXT:SPACE BACK:B CANSEL:ANY -/	
    	    	58 54 3A 53 
    	    	50 41 43 45 
    	    	20 42 41 43 
    	    	4B 3A 42 20 
    	    	43 41 4E 53 
    	    	45 4C 3A 41 
    	    	4E 59 20 2D 
1526	DE91	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1527				
1528				;------------------ MEMORY TEST ----------------------------
1529	DF00			      	ORG   	$DF00          	
1530				
1531	DF00	DE 04		      	LDX   	BSTA           	;テスト開始アドレス
1532	DF02	DF E4		      	STX   	ADRS           	
1533				
1534	DF04	CE D730		MEM1  	LDX   	#CRLF          	
1535	DF07	BD D553		      	JSR   	STRPRN         	
1536				
1537	DF0A	96 E4		      	LDAA  	ADRS           	;アドレスを表示
1538	DF0C	BD D55F		      	JSR   	PRHEX          	
1539	DF0F	96 E5		      	LDAA  	ADRS+1         	
1540	DF11	BD D55F		      	JSR   	PRHEX          	
1541				
1542	DF14	BD F3BA		      	JSR   	SPC            	
1543				
1544	DF17	DE E4		      	LDX   	ADRS           	
1545	DF19	86 55		      	LDAA  	#$55           	;$55を書き込み
1546	DF1B	A7 00		      	STAA  	X              	
1547				
1548	DF1D	BD D55F		      	JSR   	PRHEX          	
1549	DF20	BD F3BA		      	JSR   	SPC            	
1550				
1551	DF23	A6 00		      	LDAA  	X              	;読み出し
1552	DF25	16		      	TAB   			
1553	DF26	BD D55F		      	JSR   	PRHEX          	
1554	DF29	17		      	TBA   			
1555				
1556	DF2A	81 55		      	CMPA  	#$55           	;読出しが$55でなければエラー
1557	DF2C	26 1D		      	BNE   	MSTP           	
1558				
1559	DF2E	BD F3BA		      	JSR   	SPC            	
1560				
1561	DF31	86 AA		      	LDAA  	#$AA           	;$AAを書き込み
1562	DF33	A7 00		      	STAA  	X              	
1563				
1564	DF35	BD D55F		      	JSR   	PRHEX          	
1565	DF38	BD F3BA		      	JSR   	SPC            	
1566				
1567	DF3B	A6 00		      	LDAA  	X              	;読出し
1568	DF3D	16		      	TAB   			
1569	DF3E	BD D55F		      	JSR   	PRHEX          	
1570	DF41	17		      	TBA   			
1571				
1572	DF42	81 AA		      	CMPA  	#$AA           	;読出しが$AAでなければエラー
1573	DF44	26 05		      	BNE   	MSTP           	
1574	DF46	08		      	INX   			
1575	DF47	DF E4		      	STX   	ADRS           	
1576	DF49	20 B9		      	BRA   	MEM1           	;ループ
1577				
1578	DF4B	CE DF52		MSTP  	LDX   	#MEMSTP        	;STOPメッセージ
1579	DF4E	BD D553		      	JSR   	STRPRN         	
1580	DF51	39		      	RTS   			
1581				
1582	DF52			MEMSTP				
1583	DF52	0D 0A 		      	FCB   	$0D,$0A        	
1584	DF54	4D 45 4D 4F 	      	FCC     	/MEMORY TEST STOP!/	
    	    	52 59 20 54 
    	    	45 53 54 20 
    	    	53 54 4F 50 
    	    	21 
1585	DF65	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1586				
1587					END   	               	

0 error(s),  0 warning(s) is detected.

Label	address
ADRS  	00E4	ADRS2 	00F2	ADRSK 	00EC	AZ1   	D552	AZLCNV	D548
BDSEND	D393	BEEP  	F018	BEND  	0006	BNMSG 	D711	BSAVE 	D2E3
BSMSG 	D708	BSTA  	0004	BSV1  	D2F2	BSV10 	D2FE	BSV2  	D313
BTBL  	D820	BTPNT 	001A	CMTMSG	D6FE	CRLF  	D730	CRTCNR	C11F
CTBL  	D851	CTPNT 	001C	DL1   	D4B1	DL2   	D4B4	DL3   	D4CE
DL33  	D4E2	DL4   	D4E4	DL5   	D510	DL6   	D51A	DL61  	D531
DL7   	D538	DL8   	D53A	DL9   	D4EA	DL91  	D4ED	DP0   	DE06
DP1   	DE18	DP2   	DE2A	DP3   	DE32	DP4   	DE4B	DP6   	DE5E
DP7   	DE6F	DPMES 	DE71	DPS   	DE04	DUMMY 	D045	ERR   	D2B1
ERR1  	D2BC	ERR3  	D2C5	ERR4  	D2CE	ERR99 	D2D7	ERRJ  	D092
ERRJ2 	D310	ERRJ3 	D3DF	ERRJ4 	D464	ERRJ5 	D472	ERRJ6 	D541
ERRR  	D2DD	ERRV  	D19C	ERRV2 	D215	F1CHK 	D7C0	F2CHK 	D7C8
FILES 	D475	FLG   	00E3	FN0   	D051	FN1   	D053	FN10  	D06D
FN11  	D071	FN12  	D07C	FN13  	D07D	FN14  	D08A	FN2   	D095
FNS3  	D352	FNS4  	D36B	FNS5  	D372	FNS6  	D37F	FNS7  	D38F
FNSEND	D34F	HEND  	0008	INI2  	D030	INI3  	D03F	INIT  	D016
INPUT 	E4F2	KBUF  	0030	KEYDAT	C800	KEYSEL	C801	KSC0  	D5B4
KSC1  	D5C7	KSC10 	D644	KSC11 	D648	KSC12 	D64C	KSC13 	D650
KSC14 	D654	KSC15 	D603	KSC2  	D5ED	KSC3  	D5F1	KSC4  	D5F9
KSC5  	D5FD	KSC6  	D601	KSC7  	D606	KSC8  	D60B	KSC9  	D61E
KSCAN 	F7A9	KSCN2 	D5AE	KTBL  	D658	KTBL2 	D6A0	LD1   	D0CD
LD2   	D119	LD3   	D15F	LDMSG 	D71B	LENG  	00E6	LOAD  	D046
LOP1  	D16E	LOP2  	D199	LV1   	D1D2	LV2   	D262	LV3   	D2A8
LV5   	D239	LVBAS 	D21A	LVBIN 	D1EF	ME0   	DD0F	ME1   	DD3C
ME2   	DD4F	ME3   	DD5A	ME4   	DD5D	ME5   	DD60	ME6   	DD62
ME7   	DD32	ME8   	DD02	MEM1  	DF04	MEMSTP	DF52	MEXEC 	D544
MSAVE 	D3AC	MSG99 	D787	MSG_AD	D790	MSG_F0	D733	MSG_F1	D74E
MSG_F3	D75E	MSG_F4	D76B	MSGKEY	D7A0	MSTP  	DF4B	MSV1  	D3BB
MSV10 	D3CD	MSV2  	D3CC	MSV3  	D3E2	MSV4  	D3E4	MSV5  	D3F4
MSV6  	D3FB	MSV8  	D410	MSV9  	D417	PH2   	D576	PH3   	D578
PIOA  	CC10	PIOB  	CC12	PIOCA 	CC11	PIOCB 	CC13	PIOINI	D802
PRGVER	00F0	PRHEX 	D55F	PRHX1 	D56E	PRINT 	F3BC	RCVBYTE	D7D0
SDIR99	D540	SDIR_PRG	D475	SDMSG 	D6E8	SDR00 	D480	SDR01 	D489
SDR1  	D48D	SDR10 	D49F	SDR2  	D49E	SEND  	000C	SH1   	D5A3
SH2   	D5A7	SH21  	D590	SH3   	D5AB	SH4   	D5AD	SHEX  	D591
SHEX2 	D57C	SND4BIT	D7F3	SNDBYTE	D7E4	SP1   	D55E	SPC   	F3BA
START 	D001	STRPRN	D553	SVMSG 	D724	V2END 	000A	VER1  	D0B4
VER2  	D0B1	VER21 	D1A1	XSAVE 	00E8	XSAVE2	00EA	XSAVEK	00EE

