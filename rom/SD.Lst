0001	CC10			PIOA  	EQU   	$CC10          	
0002	CC11			PIOB  	EQU   	$CC11          	
0003	CC12			PIOC  	EQU   	$CC12          	
0004	CC13			PIOR  	EQU   	$CC13          	
0005				
0006	0004			BSTA  	EQU   	$0004          	;BASICプログラムスタートアドレス
0007	0006			BEND  	EQU   	$0006          	;BASICプログラムエンドアドレス
0008	0008			HEND  	EQU   	$0008          	;配列エンドアドレス
0009	000A			V2END 	EQU   	$000A          	;2文字変数アドレス
0010	000C			SEND  	EQU   	$000C          	;文字列変数アドレス
0011	001A			BTPNT 	EQU   	$001A          	;BASICコマンドポインタ $F898
0012	001C			CTPNT 	EQU   	$001C          	;BASICステートメントポインタ $F8C9
0013				
0014	0030			KBUF  	EQU   	$0030          	;キーバッファ ～$0075(70Byte)
0015	00E3			FLG   	EQU   	$00E3          	;SD読込用 FLG 0:BASIC 1:マシン語
0016	00E4			ADRS  	EQU   	$00E4          	;SD読込用 開始アドレス
0017	00E6			LENG  	EQU   	$00E6          	;SD読込用 読込バイト数
0018	00E8			XSAVE 	EQU   	$00E8          	;Xレジスタ保存
0019	00EA			XSAVE2	EQU   	$00EA          	;Xレジスタ保存
0020	00EC			ADRSK 	EQU   	$00EC          	;KSCN2 KTBL算出用/SD読込用 終了アドレス計算用
0021	00EE			XSAVEK	EQU   	$00EE          	;KSCN2用 Xレジスタ保存
0022	00F0			PRGVER	EQU   	$00F0          	;PROG形式バージョン
0023	00F2			ADRS2 	EQU   	$00F2          	;SD読込用 開始アドレス退避
0024				
0025	C800			KEYDAT	EQU   	$C800          	;キーデータ取得
0026	C801			KEYSEL	EQU   	$C801          	;Bit0-Bit3に0-8を出力して$C800のBit0-Bit4のデータを取得
0027				
0028	F018			BEEP  	EQU   	$F018          	;BEEP
0029	E4F2			INPUT 	EQU   	$E4F2          	;1文字入力(カーソルブリンク、エコーバックあり) A=キーデータ Bレジスタ破壊
0030	F7A9			KSCAN 	EQU   	$F7A9          	;キー入力(エコーバックあり) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊
0031	F3BA			SPC   	EQU   	$F3BA          	;空白表示
0032	F3BC			PRINT 	EQU   	$F3BC          	;1文字出力 A=アスキーコード Aレジスタ保存
0033				
0034				;ソース内記述汎用ルーチン
0035				;AZLCNV							;大文字変換 Aレジスタのアルファベット小文字を大文字に変換
0036				;STRPRN							;文字列出力 (X)から$00までの文字列を表示
0037				;PRHEX							;Aレジスタの内容を16進数文字列として表示
0038				;SHEX2							;(X),(X+1)の2バイトアスキーコード文字列を16進数にしてAレジスタへ
0039				;								;		'0'～'9','A'～'F'以外が含まれていたらA=0 C=1
0040				;SHEX							;Aレジスタのアスキーコードを16進数にしてAレジスタへ
0041				;								;		'0'～'9','A'～'F'以外ならA=0 C=1
0042				;KSCN2							;キー入力(エコーバックなし) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊
0043				;								;		CTRLキー未対応
0044				
0045				;A=USR($xxxx,X,A) 引値 第2パラメータ:Xレジスタ 第3パラメータ:Aレジスタ  戻り値:上位バイト:Bレジスタ 下位バイト:Aレジスタ
0046				
0047	D000			      	ORG   	$D000          	
0048				
0049	D000	00 		      	FCB   	$00            	;プリンタ制御ROMの有無識別コード
0050				*
0051	D001			START 				
0052	D001	7E D016		      	JMP   	INIT           	;INITMコマンドジャンプ先
0053	D004	7E D045		      	JMP   	DUMMY          	;プリンタ一文字出力ジャンプ先
0054	D007	7E D016		      	JMP   	INIT           	;HCOPYコマンドジャンプ先
0055	D00A	7E D046		      	JMP   	LOAD           	
0056	D00D	7E D2DC		      	JMP   	BSAVE          	
0057	D010	7E D39E		      	JMP   	MSAVE          	
0058	D013	7E D467		      	JMP   	FILES          	
0059				
0060	D016	DF E8		INIT  	STX   	XSAVE          	;コマンド文字列終了位置を保存
0061	D018	BD D7F3		      	JSR   	PIOINI         	;8255初期化
0062				
0063	D01B	96 1A		      	LDAA  	BTPNT          	
0064	D01D	81 F8		      	CMPA  	#$F8           	
0065	D01F	26 0F		      	BNE   	INI2           	
0066	D021	CE D800		      	LDX   	#BTBL          	
0067	D024	DF 1A		      	STX   	BTPNT          	;BASICコマンドポインタをBTBLに変更
0068	D026	CE D831		      	LDX   	#CTBL          	
0069	D029	DF 1C		      	STX   	CTPNT          	:BASICステートメントポインタをCBTLに変更
0070	D02B	CE D6D6		      	LDX   	#SDMSG         	;'JR-100_SD READY OK!'
0071	D02E	20 0F		      	BRA   	INI3           	
0072	D030	DF E8		INI2  	STX   	XSAVE          	;コマンド文字列終了位置を保存
0073	D032	CE F898		      	LDX   	#$F898         	
0074	D035	DF 1A		      	STX   	BTPNT          	;BASICコマンドポインタを元に戻す
0075	D037	CE F8C9		      	LDX   	#$F8C9         	
0076	D03A	DF 1C		      	STX   	CTPNT          	:BASICステートメントポインタを元に戻す
0077	D03C	CE D6EC		      	LDX   	#CMTMSG        	;'CMT OK!'
0078	D03F	BD D540		INI3  	JSR   	STRPRN         	
0079	D042	DE E8		      	LDX   	XSAVE          	
0080	D044	39		      	RTS   			
0081				
0082	D045			DUMMY 				
0083	D045	39		      	RTS   			
0084				
0085				;----------------- BASICプログラム、機械語プログラム LOAD ---------------------------
0086	D046			LOAD  				
0087	D046	86 80		      	LDAA  	#$80           	;コマンド$80を送信
0088	D048	BD D7D2		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0089	D04B	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0090	D04E	4D		      	TSTA  			
0091	D04F	26 41		      	BNE   	ERRJ           	
0092				
0093	D051	C6 20		FN0   	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0094	D053	A6 00		FN1   	LDAA  	X              	
0095	D055	08		      	INX   			
0096	D056	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0097	D058	27 F9		      	BEQ   	FN1            	
0098	D05A	81 3A		      	CMPA  	#':'           	;コロンだったら32Byte以下でも終了
0099	D05C	27 0F		      	BEQ   	FN10           	
0100	D05E	4D		      	TSTA  			;$00だったら32Byte以下でも終了
0101	D05F	27 0C		      	BEQ   	FN10           	
0102	D061	BD D7D2		      	JSR   	SNDBYTE        	
0103	D064	5A		      	DECB  			
0104	D065	26 EC		      	BNE   	FN1            	
0105	D067	4F		      	CLRA  			
0106	D068	BD D7D2		      	JSR   	SNDBYTE        	;$00を送信
0107	D06B	20 0F		      	BRA   	FN12           	
0108				
0109	D06D	09		FN10  	DEX   			
0110	D06E	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0111	D070	4F		      	CLRA  			
0112	D071	BD D7D2		FN11  	JSR   	SNDBYTE        	;32Byteに満たない分を$00送信
0113	D074	5A		      	DECB  			
0114	D075	26 FA		      	BNE   	FN11           	
0115	D077	BD D7D2		      	JSR   	SNDBYTE        	;$00送信
0116	D07A	20 0E		      	BRA   	FN14           	
0117				
0118	D07C	09		FN12  	DEX   			
0119	D07D	A6 00		FN13  	LDAA  	X              	;32Byteを超えてまだ文字列があるようなら':'又は$00が出てくるまでXレジスタを進める
0120	D07F	08		      	INX   			
0121	D080	81 3A		      	CMPA  	#':'           	
0122	D082	26 F9		      	BNE   	FN13           	
0123	D084	4D		      	TSTA  			
0124	D085	26 F6		      	BNE   	FN13           	
0125	D087	09		      	DEX   			
0126	D088	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0127				
0128	D08A			FN14  				
0129	D08A	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0130	D08D	4D		      	TSTA  			
0131	D08E	26 02		      	BNE   	ERRJ           	
0132	D090	20 03		      	BRA   	FN2            	
0133				
0134	D092	7E D2AA		ERRJ  	JMP   	ERR            	
0135				
0136	D095	BD D7BE		FN2   	JSR   	RCVBYTE        	;'P'
0137	D098	BD D7BE		      	JSR   	RCVBYTE        	;'R'
0138	D09B	BD D7BE		      	JSR   	RCVBYTE        	;'O'
0139	D09E	BD D7BE		      	JSR   	RCVBYTE        	;'G'
0140	D0A1	BD D7BE		      	JSR   	RCVBYTE        	;フォーマットバージョン受信
0141	D0A4	81 01		      	CMPA  	#$01           	
0142	D0A6	27 0C		      	BEQ   	VER1           	;フォーマットバージョン1
0143	D0A8	81 02		      	CMPA  	#$02           	
0144	D0AA	27 05		      	BEQ   	VER2           	;フォーマットバージョン2
0145	D0AC	86 F4		      	LDAA  	#$F4           	
0146	D0AE	7E D092		      	JMP   	ERRJ           	;フォーマットバージョンエラー
0147				
0148	D0B1	7E D19A		VER2  	JMP   	VER21          	
0149				;------------------------- PROGフォーマットバージョン1形式LOAD ---------------------
0150	D0B4	BD D7BE		VER1  	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 2nd Byte
0151	D0B7	BD D7BE		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 3rd Byte
0152	D0BA	BD D7BE		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 4th Byte
0153	D0BD	BD D7BE		      	JSR   	RCVBYTE        	;FNAME_SIZE 1stByte
0154	D0C0	16		      	TAB   			
0155	D0C1	BD D7BE		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 2ndByte
0156	D0C4	BD D7BE		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 3rdByte
0157	D0C7	BD D7BE		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 4thByte
0158	D0CA	CE 0030		      	LDX   	#KBUF          	;SDから送られてきたファイル名を格納
0159	D0CD	BD D7BE		LD1   	JSR   	RCVBYTE        	;FNAME
0160	D0D0	A7 00		      	STAA  	X              	
0161	D0D2	08		      	INX   			
0162	D0D3	5A		      	DECB  			
0163	D0D4	26 F7		      	BNE   	LD1            	
0164	D0D6	4F		      	CLRA  			
0165	D0D7	A7 00		      	STAA  	X              	;ファイル名の最後に$00を追加
0166				
0167	D0D9	BD D7BE		      	JSR   	RCVBYTE        	;読み込みアドレス 1stByte
0168	D0DC	97 E5		      	STAA  	ADRS+1         	
0169	D0DE	97 F3		      	STAA  	ADRS2+1        	
0170	D0E0	BD D7BE		      	JSR   	RCVBYTE        	;読み込みアドレス 2ndByte
0171	D0E3	97 E4		      	STAA  	ADRS           	
0172	D0E5	97 F2		      	STAA  	ADRS2          	
0173	D0E7	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0174	D0EA	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 4thByte
0175				
0176	D0ED	BD D7BE		      	JSR   	RCVBYTE        	;読み込みByte数1st受信
0177	D0F0	97 E7		      	STAA  	LENG+1         	
0178	D0F2	BD D7BE		      	JSR   	RCVBYTE        	;読み込みByte数2nd受信
0179	D0F5	97 E6		      	STAA  	LENG           	
0180	D0F7	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 3rd
0181	D0FA	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 4th
0182				
0183	D0FD	BD D7BE		      	JSR   	RCVBYTE        	;FLAG 1stByte 0:BASIC 1:マシン語
0184	D100	97 E3		      	STAA  	FLG            	
0185				
0186	D102	4D		      	TSTA  			
0187	D103	26 14		      	BNE   	LD2            	
0188	D105	CE D6F6		      	LDX   	#BSMSG         	;BASICプログラムLOAD表示
0189	D108	BD D540		      	JSR   	STRPRN         	
0190	D10B	CE D709		      	LDX   	#LDMSG         	;'LOADING '
0191	D10E	BD D540		      	JSR   	STRPRN         	
0192	D111	CE 0030		      	LDX   	#KBUF          	;ファイル名
0193	D114	BD D540		      	JSR   	STRPRN         	
0194	D117	20 46		      	BRA   	LD3            	
0195	D119	CE D6FF		LD2   	LDX   	#BNMSG         	;マシン語LOAD表示
0196	D11C	BD D540		      	JSR   	STRPRN         	
0197	D11F	CE D709		      	LDX   	#LDMSG         	;'LOADING '
0198	D122	BD D540		      	JSR   	STRPRN         	
0199	D125	CE 0030		      	LDX   	#KBUF          	;ファイル名
0200	D128	BD D540		      	JSR   	STRPRN         	
0201	D12B	86 28		      	LDAA  	#'('           	
0202	D12D	BD F3BC		      	JSR   	PRINT          	
0203	D130	96 E4		      	LDAA  	ADRS           	;読み込み開始アドレス表示
0204	D132	BD D54D		      	JSR   	PRHEX          	
0205	D135	96 E5		      	LDAA  	ADRS+1         	
0206	D137	BD D54D		      	JSR   	PRHEX          	
0207				
0208	D13A	86 2D		      	LDAA  	#'-'           	
0209	D13C	BD F3BC		      	JSR   	PRINT          	
0210				
0211	D13F	96 E7		      	LDAA  	LENG+1         	
0212	D141	9B E5		      	ADDA  	ADRS+1         	
0213	D143	97 ED		      	STAA  	ADRSK+1        	
0214	D145	96 E6		      	LDAA  	LENG           	
0215	D147	99 E4		      	ADCA  	ADRS           	
0216	D149	97 EC		      	STAA  	ADRSK          	
0217	D14B	DE EC		      	LDX   	ADRSK          	
0218	D14D	09		      	DEX   			
0219	D14E	DF EC		      	STX   	ADRSK          	;(ADRSK) <- 読み込み開始アドレス+読み込みByte数-1
0220				
0221	D150	96 EC		      	LDAA  	ADRSK          	;読み込み終了アドレス表示
0222	D152	BD D54D		      	JSR   	PRHEX          	
0223	D155	96 ED		      	LDAA  	ADRSK+1        	
0224	D157	BD D54D		      	JSR   	PRHEX          	
0225	D15A	86 29		      	LDAA  	#')'           	
0226	D15C	BD F3BC		      	JSR   	PRINT          	
0227	D15F	CE D71E		LD3   	LDX   	#CRLF          	;CRLF
0228	D162	BD D540		      	JSR   	STRPRN         	
0229				
0230	D165	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 2ndByte
0231	D168	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0232	D16B	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 4thByte
0233				
0234				;------------------- 実データ受信 --------------------------------
0235	D16E	DE E4		LOP1  	LDX   	ADRS           	
0236	D170	BD D7BE		      	JSR   	RCVBYTE        	;1Byte受信
0237	D173	A7 00		      	STAA  	X              	;(X) <- A
0238	D175	08		      	INX   			;X <- X+1
0239	D176	DF E4		      	STX   	ADRS           	
0240				
0241	D178	DE E6		      	LDX   	LENG           	
0242	D17A	09		      	DEX   			
0243	D17B	DF E6		      	STX   	LENG           	;(LENG) <- (LENG) -1
0244	D17D	26 EF		      	BNE   	LOP1           	;(LENG)が0になるまでループ
0245				
0246	D17F	96 E3		      	LDAA  	FLG            	;FLG CHECK 1(マシン語)なら終了
0247	D181	4D		      	TSTA  			
0248	D182	26 0E		      	BNE   	LOP2           	
0249				
0250	D184	DE E4		      	LDX   	ADRS           	;0ならBASICパラメータをセット
0251	D186	09		      	DEX   			
0252	D187	DF 06		      	STX   	BEND           	;BASICプログラムエンドアドレスセット
0253	D189	08		      	INX   			
0254	D18A	DF 08		      	STX   	HEND           	;配列エンドアドレスセット
0255	D18C	08		      	INX   			
0256	D18D	DF 0A		      	STX   	V2END          	;2文字変数アドレスセット
0257	D18F	08		      	INX   			
0258	D190	DF 0C		      	STX   	SEND           	;文字列変数アドレスセット
0259				
0260	D192	DE E8		LOP2  	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0261	D194	39		      	RTS   			
0262				
0263	D195	86 F4		ERRV  	LDAA  	#$F4           	
0264	D197	7E D092		      	JMP   	ERRJ           	
0265				
0266				;------------------------- PROGフォーマットバージョン2形式LOAD ---------------------
0267	D19A	BD D7BE		VER21 	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 2nd Byte
0268	D19D	BD D7BE		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 3rd Byte
0269	D1A0	BD D7BE		      	JSR   	RCVBYTE        	;SKIP フォーマットバージョン 4th Byte
0270	D1A3	BD D7BE		      	JSR   	RCVBYTE        	;'P'
0271	D1A6	BD D7BE		      	JSR   	RCVBYTE        	;'N'
0272	D1A9	BD D7BE		      	JSR   	RCVBYTE        	;'A'
0273	D1AC	BD D7BE		      	JSR   	RCVBYTE        	;'M'
0274	D1AF	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 1stByte
0275	D1B2	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 2ndByte
0276	D1B5	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 3rdByte
0277	D1B8	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 4thByte
0278				
0279	D1BB	BD D7BE		      	JSR   	RCVBYTE        	;FNAME_SIZE 1stByte
0280	D1BE	16		      	TAB   			
0281	D1BF	BD D7BE		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 2ndByte
0282	D1C2	BD D7BE		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 3rdByte
0283	D1C5	BD D7BE		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 4thByte
0284	D1C8	CE 0030		      	LDX   	#KBUF          	;SDから送られてきたファイル名を格納
0285	D1CB	BD D7BE		LV1   	JSR   	RCVBYTE        	;FNAME
0286	D1CE	A7 00		      	STAA  	X              	
0287	D1D0	08		      	INX   			
0288	D1D1	5A		      	DECB  			
0289	D1D2	26 F7		      	BNE   	LV1            	
0290	D1D4	4F		      	CLRA  			
0291	D1D5	A7 00		      	STAA  	X              	;ファイル名の最後に$00を追加
0292				
0293	D1D7	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 'P'
0294	D1DA	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 'B'
0295	D1DD	BD D7BE		      	JSR   	RCVBYTE        	;'I' or 'A'
0296	D1E0	16		      	TAB   			
0297	D1E1	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 'N' or 'S'
0298	D1E4	C1 49		      	CMPB  	#'I'           	
0299	D1E6	26 2B		      	BNE   	LVBAS          	
0300				;------------ PROGフォーマットバージョン2形式 BINARY LOAD ---------------------
0301	D1E8	86 01		LVBIN 	LDAA  	#$01           	
0302	D1EA	97 E3		      	STAA  	FLG            	
0303	D1EC	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 1stByte
0304	D1EF	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 2ndByte
0305	D1F2	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 3rdByte
0306	D1F5	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 4thByte
0307	D1F8	BD D7BE		      	JSR   	RCVBYTE        	;読み込みアドレス 1stByte
0308	D1FB	97 E5		      	STAA  	ADRS+1         	
0309	D1FD	97 F3		      	STAA  	ADRS2+1        	
0310	D1FF	BD D7BE		      	JSR   	RCVBYTE        	;読み込みアドレス 2ndByte
0311	D202	97 E4		      	STAA  	ADRS           	
0312	D204	97 F2		      	STAA  	ADRS2          	
0313	D206	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0314	D209	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 4thByte
0315	D20C	20 24		      	BRA   	LV5            	
0316				
0317	D20E	86 F4		ERRV2 	LDAA  	#$F4           	
0318	D210	7E D092		      	JMP   	ERRJ           	
0319				
0320				;------------ PROGフォーマットバージョン2形式 BASIC LOAD ---------------------
0321	D213	C1 41		LVBAS 	CMPB  	#'A'           	
0322	D215	26 F7		      	BNE   	ERRV2          	
0323	D217	4F		      	CLRA  			
0324	D218	97 E3		      	STAA  	FLG            	
0325	D21A	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 1stByte
0326	D21D	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 2ndByte
0327	D220	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 3rdByte
0328	D223	BD D7BE		      	JSR   	RCVBYTE        	;セクションSIZE 4thByte
0329	D226	86 46		      	LDAA  	#$46           	;BASICなら読込開始アドレスは$0246固定
0330	D228	97 E5		      	STAA  	ADRS+1         	
0331	D22A	97 F3		      	STAA  	ADRS2+1        	
0332	D22C	86 02		      	LDAA  	#$02           	
0333	D22E	97 E4		      	STAA  	ADRS           	
0334	D230	97 F2		      	STAA  	ADRS2          	
0335				
0336	D232	BD D7BE		LV5   	JSR   	RCVBYTE        	;読み込みByte数1st受信
0337	D235	97 E7		      	STAA  	LENG+1         	
0338	D237	BD D7BE		      	JSR   	RCVBYTE        	;読み込みByte数2nd受信
0339	D23A	97 E6		      	STAA  	LENG           	
0340	D23C	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 3rd
0341	D23F	BD D7BE		      	JSR   	RCVBYTE        	;SKIP 4th
0342				
0343	D242	96 E3		      	LDAA  	FLG            	
0344	D244	4D		      	TSTA  			
0345	D245	26 14		      	BNE   	LV2            	
0346	D247	CE D6F6		      	LDX   	#BSMSG         	;BASICプログラムLOAD表示
0347	D24A	BD D540		      	JSR   	STRPRN         	
0348	D24D	CE D709		      	LDX   	#LDMSG         	;'LOADING '
0349	D250	BD D540		      	JSR   	STRPRN         	
0350	D253	CE 0030		      	LDX   	#KBUF          	;ファイル名
0351	D256	BD D540		      	JSR   	STRPRN         	
0352	D259	20 46		      	BRA   	LV3            	
0353	D25B	CE D6FF		LV2   	LDX   	#BNMSG         	;マシン語LOAD表示
0354	D25E	BD D540		      	JSR   	STRPRN         	
0355	D261	CE D709		      	LDX   	#LDMSG         	;'LOADING '
0356	D264	BD D540		      	JSR   	STRPRN         	
0357	D267	CE 0030		      	LDX   	#KBUF          	;ファイル名
0358	D26A	BD D540		      	JSR   	STRPRN         	
0359	D26D	86 28		      	LDAA  	#'('           	
0360	D26F	BD F3BC		      	JSR   	PRINT          	
0361	D272	96 E4		      	LDAA  	ADRS           	;読み込み開始アドレス表示
0362	D274	BD D54D		      	JSR   	PRHEX          	
0363	D277	96 E5		      	LDAA  	ADRS+1         	
0364	D279	BD D54D		      	JSR   	PRHEX          	
0365				
0366	D27C	86 2D		      	LDAA  	#'-'           	
0367	D27E	BD F3BC		      	JSR   	PRINT          	
0368				
0369	D281	96 E7		      	LDAA  	LENG+1         	
0370	D283	9B E5		      	ADDA  	ADRS+1         	
0371	D285	97 ED		      	STAA  	ADRSK+1        	
0372	D287	96 E6		      	LDAA  	LENG           	
0373	D289	99 E4		      	ADCA  	ADRS           	
0374	D28B	97 EC		      	STAA  	ADRSK          	
0375	D28D	DE EC		      	LDX   	ADRSK          	
0376	D28F	09		      	DEX   			
0377	D290	DF EC		      	STX   	ADRSK          	;(ADRSK) <- 読み込み開始アドレス+読み込みByte数-1
0378				
0379	D292	96 EC		      	LDAA  	ADRSK          	;読み込み終了アドレス表示
0380	D294	BD D54D		      	JSR   	PRHEX          	
0381	D297	96 ED		      	LDAA  	ADRSK+1        	
0382	D299	BD D54D		      	JSR   	PRHEX          	
0383	D29C	86 29		      	LDAA  	#')'           	
0384	D29E	BD F3BC		      	JSR   	PRINT          	
0385	D2A1	CE D71E		LV3   	LDX   	#CRLF          	;CRLF
0386	D2A4	BD D540		      	JSR   	STRPRN         	
0387	D2A7	7E D16E		      	JMP   	LOP1           	
0388				
0389	D2AA			ERR   				
0390	D2AA	DF E8		      	STX   	XSAVE          	
0391	D2AC	81 F0		      	CMPA  	#$F0           	
0392	D2AE	26 05		      	BNE   	ERR1           	
0393	D2B0	CE D721		      	LDX   	#MSG_F0        	
0394	D2B3	20 21		      	BRA   	ERRR           	
0395	D2B5	81 F1		ERR1  	CMPA  	#$F1           	
0396	D2B7	26 05		      	BNE   	ERR3           	
0397	D2B9	CE D73C		      	LDX   	#MSG_F1        	
0398	D2BC	20 18		      	BRA   	ERRR           	
0399	D2BE	81 F3		ERR3  	CMPA  	#$F3           	
0400	D2C0	26 05		      	BNE   	ERR4           	
0401	D2C2	CE D74C		      	LDX   	#MSG_F3        	
0402	D2C5	20 0F		      	BRA   	ERRR           	
0403	D2C7	81 F4		ERR4  	CMPA  	#$F4           	
0404	D2C9	26 05		      	BNE   	ERR99          	
0405	D2CB	CE D759		      	LDX   	#MSG_F4        	
0406	D2CE	20 06		      	BRA   	ERRR           	
0407	D2D0			ERR99 				
0408	D2D0	BD D54D		      	JSR   	PRHEX          	
0409	D2D3	CE D775		      	LDX   	#MSG99         	
0410				
0411	D2D6	BD D540		ERRR  	JSR   	STRPRN         	
0412	D2D9	DE E8		      	LDX   	XSAVE          	
0413	D2DB	39		      	RTS   			
0414				
0415				;--------------------- BASICプログラム SAVE ------------------------------------------
0416	D2DC			BSAVE 				
0417	D2DC	86 81		      	LDAA  	#$81           	;コマンド$81を送信
0418	D2DE	BD D7D2		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0419	D2E1	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0420	D2E4	4D		      	TSTA  			
0421	D2E5	26 22		      	BNE   	ERRJ2          	
0422				
0423	D2E7	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0424	D2E9	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0425	D2EB	A6 00		BSV1  	LDAA  	X              	
0426	D2ED	08		      	INX   			
0427	D2EE	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0428	D2F0	27 F9		      	BEQ   	BSV1           	
0429	D2F2	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0430	D2F4	26 01		      	BNE   	BSV10          	
0431	D2F6	4F		      	CLRA  			
0432	D2F7	BD D7D2		BSV10 	JSR   	SNDBYTE        	
0433	D2FA	5A		      	DECB  			
0434	D2FB	26 EE		      	BNE   	BSV1           	
0435	D2FD	4F		      	CLRA  			
0436	D2FE	BD D7D2		      	JSR   	SNDBYTE        	;$00送信
0437				
0438	D301	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0439	D304	4D		      	TSTA  			
0440	D305	26 02		      	BNE   	ERRJ2          	;$00以外ならエラー
0441	D307	20 03		      	BRA   	BSV2           	
0442				
0443	D309	7E D2AA		ERRJ2 	JMP   	ERR            	
0444				
0445	D30C	4F		BSV2  	CLRA  			
0446	D30D	BD D7D2		      	JSR   	SNDBYTE        	;継続コード$00を送信
0447	D310	8D 36		      	BSR   	FNSEND         	;ファイルネームをPROG形式用に送信
0448				
0449	D312	96 05		      	LDAA  	BSTA+1         	;BASICスタートアドレス下位バイトを送信
0450	D314	BD D7D2		      	JSR   	SNDBYTE        	
0451	D317	96 04		      	LDAA  	BSTA           	;BASICスタートアドレス上位バイトを送信
0452	D319	BD D7D2		      	JSR   	SNDBYTE        	
0453				
0454	D31C	DE 04		      	LDX   	BSTA           	
0455	D31E	DF E4		      	STX   	ADRS           	;BASICスタートアドレスを(ADRS)にコピー
0456	D320	96 07		      	LDAA  	BEND+1         	
0457	D322	90 05		      	SUBA  	BSTA+1         	
0458	D324	97 E7		      	STAA  	LENG+1         	
0459	D326	96 06		      	LDAA  	BEND           	
0460	D328	92 04		      	SBCA  	BSTA           	
0461	D32A	97 E6		      	STAA  	LENG           	;BASICエンドアドレス-BASICスタートアドレスを計算して(LENG)に格納
0462	D32C	DE E6		      	LDX   	LENG           	
0463	D32E	08		      	INX   			;BEND - BSTART +1
0464	D32F	DF E6		      	STX   	LENG           	
0465				
0466	D331	96 E7		      	LDAA  	LENG+1         	;ファイルサイズ下位バイトを送信
0467	D333	BD D7D2		      	JSR   	SNDBYTE        	
0468	D336	96 E6		      	LDAA  	LENG           	;ファイルサイズ上位バイトを送信
0469	D338	BD D7D2		      	JSR   	SNDBYTE        	
0470				
0471	D33B	4F		      	CLRA  			;BASICプログラムであること(0)を送信
0472	D33C	BD D7D2		      	JSR   	SNDBYTE        	
0473				
0474	D33F	CE D712		      	LDX   	#SVMSG         	;SAVE表示
0475	D342	BD D540		      	JSR   	STRPRN         	
0476				
0477	D345	8D 45		      	BSR   	BDSEND         	;BASICプログラムを送信
0478	D347	39		      	RTS   			
0479				
0480				;------------------- ファイルネームをPROG形式用に送信 ----------------------
0481	D348	DE E8		FNSEND	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0482	D34A	5F		      	CLRB  			
0483	D34B	A6 00		FNS3  	LDAA  	X              	;ファイルネーム文字数をカウント
0484	D34D	08		      	INX   			
0485	D34E	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは飛ばす
0486	D350	27 F9		      	BEQ   	FNS3           	
0487	D352	5C		      	INCB  			
0488	D353	81 3A		      	CMPA  	#':'           	;コロンが見つかったら終了
0489	D355	27 0D		      	BEQ   	FNS4           	
0490	D357	81 2C		      	CMPA  	#','           	;コンマが見つかったら終了
0491	D359	27 09		      	BEQ   	FNS4           	
0492	D35B	4D		      	TSTA  			;$00が見つかったら終了
0493	D35C	27 06		      	BEQ   	FNS4           	
0494	D35E	C1 11		      	CMPB  	#$11           	;ファイルネームが16文字以上だったら終了
0495	D360	27 02		      	BEQ   	FNS4           	
0496	D362	20 E7		      	BRA   	FNS3           	
0497	D364	5A		FNS4  	DECB  			
0498	D365	17		      	TBA   			
0499				
0500	D366	BD D7D2		      	JSR   	SNDBYTE        	;FNAME_SIZE 1stByte
0501	D369	DE E8		      	LDX   	XSAVE          	
0502	D36B	A6 00		FNS5  	LDAA  	X              	;ファイルネーム文字数分のファイルネームを送信
0503	D36D	08		      	INX   			
0504	D36E	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは飛ばす
0505	D370	27 F9		      	BEQ   	FNS5           	
0506	D372	BD D7D2		      	JSR   	SNDBYTE        	;ファイルネーム文字数分を送信
0507	D375	5A		      	DECB  			
0508	D376	26 F3		      	BNE   	FNS5           	
0509				
0510	D378	A6 00		FNS6  	LDAA  	X              	;ファイルネームが16文字以上だった場合、コンマ、コロン又は$00が見つかるまでコマンド文字列終了位置を修正
0511	D37A	08		      	INX   			
0512	D37B	81 3A		      	CMPA  	#':'           	
0513	D37D	27 09		      	BEQ   	FNS7           	
0514	D37F	81 2C		      	CMPA  	#','           	
0515	D381	27 05		      	BEQ   	FNS7           	
0516	D383	4D		      	TSTA  			
0517	D384	27 02		      	BEQ   	FNS7           	
0518	D386	20 F0		      	BRA   	FNS6           	
0519	D388	09		FNS7  	DEX   			
0520	D389	DF E8		      	STX   	XSAVE          	
0521	D38B	39		      	RTS   			
0522				
0523				;----------- (ADRS)から(LENG)バイトを送信 -----------------------
0524	D38C	DE E4		BDSEND	LDX   	ADRS           	;ファイルサイズ分を送信
0525	D38E	A6 00		      	LDAA  	X              	;A <- (ADRS)
0526	D390	BD D7D2		      	JSR   	SNDBYTE        	;1Byte送信
0527	D393	08		      	INX   			;X <- X+1
0528	D394	DF E4		      	STX   	ADRS           	;(ADRS) <- (ADRS)+1
0529				
0530	D396	DE E6		      	LDX   	LENG           	;X <- (LENG)
0531	D398	09		      	DEX   			;X <- X-1
0532	D399	DF E6		      	STX   	LENG           	;(LENG) <- (LENG)-1
0533	D39B	26 EF		      	BNE   	BDSEND         	;(LENG)が0になるまでループ
0534	D39D	39		      	RTS   			
0535				
0536				;------------------ 機械語プログラムをSAVE ------------------------
0537	D39E			MSAVE 				
0538	D39E	86 81		      	LDAA  	#$81           	;コマンド$81を送信
0539	D3A0	BD D7D2		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0540	D3A3	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0541	D3A6	4D		      	TSTA  			
0542	D3A7	26 28		      	BNE   	ERRJ3          	
0543				
0544	D3A9	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0545	D3AB	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0546	D3AD	A6 00		MSV1  	LDAA  	X              	
0547	D3AF	08		      	INX   			
0548	D3B0	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0549	D3B2	27 F9		      	BEQ   	MSV1           	
0550	D3B4	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0551	D3B6	27 06		      	BEQ   	MSV2           	
0552	D3B8	81 2C		      	CMPA  	#','           	;コンマなら$00にして送信
0553	D3BA	27 02		      	BEQ   	MSV2           	
0554	D3BC	20 01		      	BRA   	MSV10          	
0555	D3BE	4F		MSV2  	CLRA  			
0556	D3BF	BD D7D2		MSV10 	JSR   	SNDBYTE        	
0557	D3C2	5A		      	DECB  			
0558	D3C3	26 E8		      	BNE   	MSV1           	
0559	D3C5	4F		      	CLRA  			
0560	D3C6	BD D7D2		      	JSR   	SNDBYTE        	;$00送信
0561				
0562	D3C9	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0563	D3CC	4D		      	TSTA  			
0564	D3CD	26 02		      	BNE   	ERRJ3          	;$00以外ならエラー
0565	D3CF	20 03		      	BRA   	MSV3           	
0566				
0567	D3D1	7E D2AA		ERRJ3 	JMP   	ERR            	
0568				
0569	D3D4	DE E8		MSV3  	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0570	D3D6	A6 00		MSV4  	LDAA  	X              	;ファイルネーム部分を読み飛ばし
0571	D3D8	08		      	INX   			
0572	D3D9	81 3A		      	CMPA  	#':'           	;コロンが見つかったら終了
0573	D3DB	27 09		      	BEQ   	MSV5           	
0574	D3DD	81 2C		      	CMPA  	#','           	;コンマが見つかったら終了
0575	D3DF	27 05		      	BEQ   	MSV5           	
0576	D3E1	4D		      	TSTA  			;$00が見つかったら終了
0577	D3E2	27 02		      	BEQ   	MSV5           	
0578	D3E4	20 F0		      	BRA   	MSV4           	
0579	D3E6	A6 00		MSV5  	LDAA  	X              	
0580	D3E8	81 24		      	CMPA  	#'$'           	;'$'は読み飛ばす
0581	D3EA	26 01		      	BNE   	MSV6           	
0582	D3EC	08		      	INX   			
0583	D3ED	BD D56A		MSV6  	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0584	D3F0	25 64		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0585	D3F2	97 E4		      	STAA  	ADRS           	;開始アドレス上位バイトにセット
0586	D3F4	BD D56A		      	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0587	D3F7	25 5D		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0588	D3F9	97 E5		      	STAA  	ADRS+1         	;開始アドレス下位バイトにセット
0589	D3FB	A6 00		      	LDAA  	X              	
0590	D3FD	81 2C		      	CMPA  	#','           	;コンマは読み飛ばす
0591	D3FF	26 01		      	BNE   	MSV8           	
0592	D401	08		      	INX   			
0593	D402	A6 00		MSV8  	LDAA  	X              	
0594	D404	81 24		      	CMPA  	#'$'           	;'$'は読み飛ばす
0595	D406	26 01		      	BNE   	MSV9           	
0596	D408	08		      	INX   			
0597	D409	BD D56A		MSV9  	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0598	D40C	25 48		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0599	D40E	97 E6		      	STAA  	LENG           	;終了アドレス上位バイトにセット
0600	D410	BD D56A		      	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0601	D413	25 41		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0602	D415	97 E7		      	STAA  	LENG+1         	;終了アドレス下位バイトにセット
0603	D417	DF EA		      	STX   	XSAVE2         	;コマンド文字列終了位置を保存
0604				
0605	D419	96 E7		      	LDAA  	LENG+1         	
0606	D41B	90 E5		      	SUBA  	ADRS+1         	
0607	D41D	97 E7		      	STAA  	LENG+1         	
0608	D41F	96 E6		      	LDAA  	LENG           	
0609	D421	92 E4		      	SBCA  	ADRS           	
0610	D423	25 31		      	BCS   	ERRJ4          	
0611	D425	97 E6		      	STAA  	LENG           	;終了アドレス-開始アドレスを計算して(LENG)に格納
0612	D427	DE E6		      	LDX   	LENG           	
0613	D429	08		      	INX   			;LENG - ADRS +1
0614	D42A	DF E6		      	STX   	LENG           	
0615				
0616	D42C	4F		      	CLRA  			
0617	D42D	BD D7D2		      	JSR   	SNDBYTE        	;継続コード$00を送信
0618	D430	BD D348		      	JSR   	FNSEND         	;ファイルネームをPROG形式用に送信
0619				
0620	D433	96 E5		      	LDAA  	ADRS+1         	;BASICスタートアドレス下位バイトを送信
0621	D435	BD D7D2		      	JSR   	SNDBYTE        	
0622	D438	96 E4		      	LDAA  	ADRS           	;BASICスタートアドレス上位バイトを送信
0623	D43A	BD D7D2		      	JSR   	SNDBYTE        	
0624				
0625	D43D	96 E7		      	LDAA  	LENG+1         	;ファイルサイズ下位バイトを送信
0626	D43F	BD D7D2		      	JSR   	SNDBYTE        	
0627	D442	96 E6		      	LDAA  	LENG           	;ファイルサイズ上位バイトを送信
0628	D444	BD D7D2		      	JSR   	SNDBYTE        	
0629				
0630	D447	86 01		      	LDAA  	#$01           	;機械語プログラムであること(1)を送信
0631	D449	BD D7D2		      	JSR   	SNDBYTE        	
0632				
0633	D44C	CE D712		      	LDX   	#SVMSG         	;SAVE表示
0634	D44F	BD D540		      	JSR   	STRPRN         	
0635				
0636	D452	BD D38C		      	JSR   	BDSEND         	;機械語データを送信
0637	D455	39		      	RTS   			
0638				
0639	D456			ERRJ4 				
0640	D456	86 FF		      	LDAA  	#$FF           	;打ち切りコードを送信
0641	D458	BD D7D2		      	JSR   	SNDBYTE        	
0642	D45B	CE D77E		      	LDX   	#MSG_AD        	;アドレスエラー表示
0643	D45E	BD D540		      	JSR   	STRPRN         	
0644	D461	DE E8		      	LDX   	XSAVE          	
0645	D463	39		      	RTS   			
0646				
0647				;------------------ SDファイル一覧表示 ---------------------------
0648	D464	7E D2AA		ERRJ5 	JMP   	ERR            	;ERROR処理へジャンプ
0649				
0650	D467			FILES 				
0651				*「SDIR」処理
0652	D467			SDIR_PRG				
0653	D467	86 82		      	LDAA  	#$82           	;コマンド$82を送信
0654	D469	BD D7D2		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0655	D46C	BD D7BE		      	JSR   	RCVBYTE        	;状態取得(00H=OK)
0656	D46F	4D		      	TSTA  			
0657	D470	26 F2		      	BNE   	ERRJ5          	;ERROR
0658				
0659	D472	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0660	D474	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0661	D476	A6 00		SDR1  	LDAA  	X              	
0662	D478	08		      	INX   			
0663	D479	81 20		      	CMPA  	#' '           	;空白は除去
0664	D47B	27 F9		      	BEQ   	SDR1           	
0665	D47D	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0666	D47F	27 F5		      	BEQ   	SDR1           	
0667	D481	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0668	D483	27 06		      	BEQ   	SDR2           	
0669	D485	81 2C		      	CMPA  	#','           	;コンマなら$00にして送信
0670	D487	27 02		      	BEQ   	SDR2           	
0671	D489	20 01		      	BRA   	SDR10          	
0672	D48B	4F		SDR2  	CLRA  			
0673	D48C	BD D7D2		SDR10 	JSR   	SNDBYTE        	;1文字送信
0674	D48F	5A		      	DECB  			
0675	D490	26 E4		      	BNE   	SDR1           	
0676	D492	4F		      	CLRA  			
0677	D493	BD D7D2		      	JSR   	SNDBYTE        	;$00送信
0678	D496	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0679				
0680	D498	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0681	D49B	4D		      	TSTA  			
0682	D49C	26 C6		      	BNE   	ERRJ5          	;$00以外ならエラー
0683				
0684	D49E	CE 0030		DL1   	LDX   	#KBUF          	;Arduinoから送られてくる文字列を#KBUFへ格納
0685	D4A1	BD D7BE		DL2   	JSR   	RCVBYTE        	
0686	D4A4	BD D535		      	JSR   	AZLCNV         	;大文字に変換
0687	D4A7	4D		      	TSTA  			
0688	D4A8	27 11		      	BEQ   	DL3            	;$00を受信するまでを一行とする
0689	D4AA	81 FF		      	CMPA  	#$FF           	
0690	D4AC	27 23		      	BEQ   	DL4            	;$FFを受信したら終了
0691	D4AE	81 FD		      	CMPA  	#$FD           	
0692	D4B0	27 25		      	BEQ   	DL9            	;$FD受信で文字列を取得してSETLしたことを表示
0693	D4B2	81 FE		      	CMPA  	#$FE           	
0694	D4B4	27 47		      	BEQ   	DL5            	;$FEを受信したら一時停止して一文字入力待ち
0695	D4B6	A7 00		      	STAA  	X              	
0696	D4B8	08		      	INX   			
0697	D4B9	20 E6		      	BRA   	DL2            	
0698				
0699	D4BB			DL3   				
0700	D4BB	86 0D		      	LDAA  	#$0D           	;$00を受信したら一行分を表示して改行
0701	D4BD	A7 00		      	STAA  	X              	
0702	D4BF	08		      	INX   			
0703	D4C0	86 0A		      	LDAA  	#$0A           	
0704	D4C2	A7 00		      	STAA  	X              	
0705	D4C4	08		      	INX   			
0706				
0707	D4C5	4F		      	CLRA  			
0708	D4C6	A7 00		      	STAA  	X              	
0709	D4C8	08		      	INX   			
0710	D4C9	CE 0030		      	LDX   	#KBUF          	
0711	D4CC	BD D540		      	JSR   	STRPRN         	;1行表示
0712	D4CF	20 CD		DL33  	BRA   	DL1            	
0713				
0714	D4D1	BD D7BE		DL4   	JSR   	RCVBYTE        	;状態取得(00H=OK)して終了
0715	D4D4	DE E8		      	LDX   	XSAVE          	
0716	D4D6	39		      	RTS   			
0717				
0718	D4D7	CE 0030		DL9   	LDX   	#KBUF          	;文字列を取得
0719	D4DA	BD D7BE		DL91  	JSR   	RCVBYTE        	;#KBUFへ文字列格納
0720	D4DD	BD D535		      	JSR   	AZLCNV         	;大文字に変換
0721	D4E0	A7 00		      	STAA  	X              	
0722	D4E2	08		      	INX   			
0723	D4E3	4D		      	TSTA  			;$00を受信するまで受信処理
0724	D4E4	26 F4		      	BNE   	DL91           	
0725				;		LDX		#KBUF
0726				;		JSR		STRPRN
0727	D4E6	BD D7BE		      	JSR   	RCVBYTE        	;$FF終了コード読み飛ばし
0728	D4E9	BD D7BE		      	JSR   	RCVBYTE        	;状態取得読み飛ばし
0729	D4EC	CE 0030		      	LDX   	#KBUF          	
0730	D4EF	86 80		      	LDAA  	#$80           	;コマンド$80を送信、そのままLOADコマンド実行
0731	D4F1	BD D7D2		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0732	D4F4	BD D7BE		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0733	D4F7	4D		      	TSTA  			
0734	D4F8	26 34		      	BNE   	ERRJ6          	;ERRORになるはずはないが念のため
0735	D4FA	7E D051		      	JMP   	FN0            	
0736				
0737	D4FD	DF EA		DL5   	STX   	XSAVE2         	
0738	D4FF	CE D78E		      	LDX   	#MSGKEY        	;SEL:0-9 NXT:ANY BCK:B BRK:RET
0739	D502	BD D540		      	JSR   	STRPRN         	;文字列表示
0740	D505	DE EA		      	LDX   	XSAVE2         	
0741	D507	BD D59C		DL6   	JSR   	KSCN2          	;キーボートスキャン
0742	D50A	4D		      	TSTA  			
0743	D50B	27 FA		      	BEQ   	DL6            	;何か入力されるまでループ
0744	D50D	36		      	PSHA  			
0745	D50E	BD F018		      	JSR   	BEEP           	
0746	D511	32		      	PULA  			
0747	D512	81 0D		      	CMPA  	#$0D           	
0748	D514	27 0F		      	BEQ   	DL7            	;RETURNで打ち切り
0749	D516	81 30		      	CMPA  	#$30           	;数字0～9ならそのままArduinoへ送信してSETL処理へ
0750	D518	25 04		      	BCS   	DL61           	
0751	D51A	81 3A		      	CMPA  	#$3A           	
0752	D51C	25 09		      	BCS   	DL8            	
0753	D51E	81 42		DL61  	CMPA  	#$42           	
0754	D520	27 05		      	BEQ   	DL8            	;「B」で前ページ
0755	D522	4F		      	CLRA  			
0756	D523	20 02		      	BRA   	DL8            	;それ以外で継続
0757	D525	86 FF		DL7   	LDAA  	#$FF           	
0758	D527	BD D7D2		DL8   	JSR   	SNDBYTE        	
0759	D52A	7E D4A1		      	JMP   	DL2            	
0760				
0761	D52D	39		SDIR99	RTS   			
0762	D52E	7E D2AA		ERRJ6 	JMP   	ERR            	
0763				
0764				;--------------- MEXECUTE 機械語読み込みアドレスを実行アドレスとしてジャンプ -------
0765	D531	DE F2		MEXEC 	LDX   	ADRS2          	
0766	D533	6E 00		      	JMP   	X              	
0767				
0768				;--------------- Aレジスタのアルファベット小文字を大文字に変換 ----------------
0769	D535	81 61		AZLCNV	CMPA  	#$61           	;a～zなら$20を引いてA～Zに変換
0770	D537	25 06		      	BCS   	AZ1            	
0771	D539	81 7B		      	CMPA  	#$7B           	
0772	D53B	24 02		      	BCC   	AZ1            	
0773	D53D	80 20		      	SUBA  	#$20           	
0774	D53F	39		AZ1   	RTS   			
0775				
0776				;--------------- 文字列出力 ----------------------
0777				;(X)から$00までの文字列を表示
0778	D540			STRPRN				
0779	D540	A6 00		      	LDAA  	X              	;A <- (X)
0780	D542	81 00		      	CMPA  	#$00           	;$00なら終了
0781	D544	27 06		      	BEQ   	SP1            	
0782	D546	BD F3BC		      	JSR   	PRINT          	;1文字出力
0783	D549	08		      	INX   			
0784	D54A	20 F4		      	BRA   	STRPRN         	
0785	D54C	39		SP1   	RTS   			
0786				
0787				;------------------- Aレジスタの内容を16進数文字列として表示 -------------------------
0788	D54D	36		PRHEX 	PSHA  			
0789	D54E	84 F0		      	ANDA  	#$F0           	;上位4ビットを変換
0790	D550	44		      	LSRA  			
0791	D551	44		      	LSRA  			
0792	D552	44		      	LSRA  			
0793	D553	44		      	LSRA  			
0794	D554	8D 06		      	BSR   	PRHX1          	
0795	D556	32		      	PULA  			
0796	D557	84 0F		      	ANDA  	#$0F           	;下位4ビットを変換
0797	D559	8D 01		      	BSR   	PRHX1          	
0798	D55B	39		      	RTS   			
0799				
0800	D55C	81 0A		PRHX1 	CMPA  	#$0A           	
0801	D55E	25 04		      	BCS   	PH2            	
0802	D560	8B 37		      	ADDA  	#$37           	;A～F
0803	D562	20 02		      	BRA   	PH3            	
0804	D564	8B 30		PH2   	ADDA  	#$30           	;0～9
0805	D566	BD F3BC		PH3   	JSR   	PRINT          	
0806	D569	39		      	RTS   			
0807				
0808				
0809				;----- (X),(X+1)の2バイトアスキーコード文字列を16進数にしてAレジスタへ -----------------
0810				;                          '0'～'9','A'～'F'以外が含まれていたらA=0 C=1
0811	D56A	A6 00		SHEX2 	LDAA  	X              	
0812	D56C	8D 11		      	BSR   	SHEX           	
0813	D56E	25 0E		      	BCS   	SH21           	;ERRORなら中断
0814	D570	16		      	TAB   			
0815	D571	58		      	ASLB  			
0816	D572	58		      	ASLB  			
0817	D573	58		      	ASLB  			
0818	D574	58		      	ASLB  			;Bレジスタに送って16倍
0819	D575	08		      	INX   			
0820	D576	A6 00		      	LDAA  	X              	
0821	D578	8D 05		      	BSR   	SHEX           	
0822	D57A	25 02		      	BCS   	SH21           	;ERRORなら中断
0823	D57C	1B		      	ABA   			;Bレジスタを加算
0824	D57D	08		      	INX   			
0825	D57E	39		SH21  	RTS   			
0826				
0827				;----------------- Aレジスタのアスキーコードを16進数にしてAレジスタへ  --------------------
0828				;                          '0'～'9','A'～'F'以外ならA=0 C=1
0829	D57F	81 30		SHEX  	CMPA  	#'0'           	
0830	D581	25 12		      	BCS   	SH2            	
0831	D583	81 3A		      	CMPA  	#':'           	
0832	D585	25 0A		      	BCS   	SH1            	
0833	D587	81 41		      	CMPA  	#'A'           	
0834	D589	25 0A		      	BCS   	SH2            	
0835	D58B	81 47		      	CMPA  	#'G'           	
0836	D58D	25 0A		      	BCS   	SH3            	
0837	D58F	20 04		      	BRA   	SH2            	
0838				
0839	D591	80 30		SH1   	SUBA  	#$30           	;0～9
0840	D593	20 06		      	BRA   	SH4            	
0841	D595	4F		SH2   	CLRA  			;ERROR
0842	D596	0D		      	SEC   			
0843	D597	20 02		      	BRA   	SH4            	
0844	D599	80 37		SH3   	SUBA  	#$37           	;A～F
0845	D59B	39		SH4   	RTS   			
0846				
0847				;--------- キー入力(エコーバックなし) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊 CTRLキー未対応 --------
0848	D59C	DF EE		KSCN2 	STX   	XSAVEK         	
0849	D59E	CE C800		      	LDX   	#KEYDAT        	
0850	D5A1	5F		      	CLRB  			
0851	D5A2	17		KSC0  	TBA   			
0852	D5A3	A7 01		      	STAA  	1,X            	;KEYSEL($C801)に出力
0853	D5A5	A6 00		      	LDAA  	X              	;KEYDAT($C800)のデータを取得
0854	D5A7	84 1F		      	ANDA  	#$1F           	
0855	D5A9	81 1F		      	CMPA  	#$1F           	;何か押されている？
0856	D5AB	26 08		      	BNE   	KSC1           	
0857	D5AD	5C		      	INCB  			;押されていなければ次のスキャン
0858	D5AE	C1 09		      	CMPB  	#$09           	;$00～$08まで検査
0859	D5B0	26 F0		      	BNE   	KSC0           	
0860	D5B2	4F		      	CLRA  			;何も押されていなければ$00でリターン
0861	D5B3	20 3C		      	BRA   	KSC15          	
0862				
0863	D5B5	36		KSC1  	PSHA  			;何か押されていた時の処理
0864	D5B6	58		      	ASLB  			;B <- B*8
0865	D5B7	58		      	ASLB  			
0866	D5B8	58		      	ASLB  			
0867	D5B9	CE D646		      	LDX   	#KTBL          	
0868	D5BC	DF EC		      	STX   	ADRSK          	;(ADRSK) <- KTBL
0869	D5BE	96 ED		      	LDAA  	ADRSK+1        	
0870	D5C0	1B		      	ABA   			
0871	D5C1	97 ED		      	STAA  	ADRSK+1        	
0872	D5C3	96 EC		      	LDAA  	ADRSK          	
0873	D5C5	89 00		      	ADCA  	#$00           	
0874	D5C7	97 EC		      	STAA  	ADRSK          	;(ADRSK) <- (ADRSK) + B
0875	D5C9	32		      	PULA  			
0876	D5CA	DE EC		      	LDX   	ADRSK          	
0877	D5CC	47		      	ASRA  			
0878	D5CD	24 0C		      	BCC   	KSC2           	
0879	D5CF	47		      	ASRA  			
0880	D5D0	24 0D		      	BCC   	KSC3           	
0881	D5D2	47		      	ASRA  			
0882	D5D3	24 12		      	BCC   	KSC4           	
0883	D5D5	47		      	ASRA  			
0884	D5D6	24 13		      	BCC   	KSC5           	
0885	D5D8	47		      	ASRA  			
0886	D5D9	24 14		      	BCC   	KSC6           	
0887	D5DB	A6 00		KSC2  	LDAA  	X              	;D0列を取得
0888	D5DD	20 12		      	BRA   	KSC15          	
0889	D5DF	A6 01		KSC3  	LDAA  	1,X            	;D1列を取得
0890	D5E1	81 FF		      	CMPA  	#$FF           	;SHIFTキーが押されていたらもう一度スキャン
0891	D5E3	27 0F		      	BEQ   	KSC7           	
0892	D5E5	20 0A		      	BRA   	KSC15          	
0893	D5E7	A6 02		KSC4  	LDAA  	2,X            	;D2列を取得
0894	D5E9	20 06		      	BRA   	KSC15          	
0895	D5EB	A6 03		KSC5  	LDAA  	3,X            	;D3列を取得
0896	D5ED	20 02		      	BRA   	KSC15          	
0897	D5EF	A6 04		KSC6  	LDAA  	4,X            	;D4列を取得
0898				
0899	D5F1	DE EE		KSC15 	LDX   	XSAVEK         	
0900	D5F3	39		      	RTS   			
0901				
0902	D5F4	CE C800		KSC7  	LDX   	#KEYDAT        	;SHIFTキーが押されていた時のスキャン
0903	D5F7	C6 01		      	LDAB  	#$01           	
0904	D5F9	17		KSC8  	TBA   			
0905	D5FA	A7 01		      	STAA  	1,X            	;KEYSEL($C801)に出力
0906	D5FC	A6 00		      	LDAA  	X              	;KEYDAT($C800)のデータを取得
0907	D5FE	84 1F		      	ANDA  	#$1F           	
0908	D600	81 1F		      	CMPA  	#$1F           	;何か押されている？
0909	D602	26 08		      	BNE   	KSC9           	
0910	D604	5C		      	INCB  			;押されていなければ次のスキャン
0911	D605	C1 09		      	CMPB  	#$09           	;$00～$08まで検査
0912	D607	26 F0		      	BNE   	KSC8           	
0913	D609	4F		      	CLRA  			;SHIFTキー以外押されていなければ$00でリターン
0914	D60A	20 E5		      	BRA   	KSC15          	
0915	D60C	36		KSC9  	PSHA  			;SHIFTキー以外押されていた時の処理
0916	D60D	58		      	ASLB  			;B <- B*8
0917	D60E	58		      	ASLB  			
0918	D60F	58		      	ASLB  			
0919	D610	CE D68E		      	LDX   	#KTBL2         	
0920	D613	DF EC		      	STX   	ADRSK          	;(ADRSK) <- KTBL2
0921	D615	96 ED		      	LDAA  	ADRSK+1        	
0922	D617	1B		      	ABA   			
0923	D618	97 ED		      	STAA  	ADRSK+1        	
0924	D61A	96 EC		      	LDAA  	ADRSK          	
0925	D61C	89 00		      	ADCA  	#$00           	
0926	D61E	97 EC		      	STAA  	ADRSK          	;(ADRSK) <- (ADRSK) + B
0927	D620	32		      	PULA  			
0928	D621	DE EC		      	LDX   	ADRSK          	
0929	D623	47		      	ASRA  			
0930	D624	24 0C		      	BCC   	KSC10          	
0931	D626	47		      	ASRA  			
0932	D627	24 0D		      	BCC   	KSC11          	
0933	D629	47		      	ASRA  			
0934	D62A	24 0E		      	BCC   	KSC12          	
0935	D62C	47		      	ASRA  			
0936	D62D	24 0F		      	BCC   	KSC13          	
0937	D62F	47		      	ASRA  			
0938	D630	24 10		      	BCC   	KSC14          	
0939	D632	A6 00		KSC10 	LDAA  	X              	;D1列を取得
0940	D634	20 BB		      	BRA   	KSC15          	
0941	D636	A6 01		KSC11 	LDAA  	1,X            	;D1列を取得
0942	D638	20 B7		      	BRA   	KSC15          	
0943	D63A	A6 02		KSC12 	LDAA  	2,X            	;D2列を取得
0944	D63C	20 B3		      	BRA   	KSC15          	
0945	D63E	A6 03		KSC13 	LDAA  	3,X            	;D3列を取得
0946	D640	20 AF		      	BRA   	KSC15          	
0947	D642	A6 04		KSC14 	LDAA  	4,X            	;D4列を取得
0948	D644	20 AB		      	BRA   	KSC15          	
0949				
0950				;--------------- KEY TABLE -------------------------
0951	D646	00 FF 5A 58 	KTBL  	FCB   	$00,$FF,'Z','X','C',$00,$00,$00	
		43 00 00 00 
0952	D64E	41 53 44 46 	      	FCB   	'A','S','D','F','G',$00,$00,$00	
		47 00 00 00 
0953	D656	51 57 45 52 	      	FCB   	'Q','W','E','R','T',$00,$00,$00	
		54 00 00 00 
0954	D65E	31 32 33 34 	      	FCB   	'1','2','3','4','5',$00,$00,$00	
		35 00 00 00 
0955	D666	36 37 38 39 	      	FCB   	'6','7','8','9','0',$00,$00,$00	
		30 00 00 00 
0956	D66E	59 55 49 4F 	      	FCB   	'Y','U','I','O','P',$00,$00,$00	
		50 00 00 00 
0957	D676	48 4A 4B 4C 	      	FCB   	'H','J','K','L',';',$00,$00,$00	
		3B 00 00 00 
0958	D67E	56 42 4E 4D 	      	FCB   	'V','B','N','M',$2C,$00,$00,$00	
		2C 00 00 00 
0959	D686	2E 20 3A 0D 	      	FCB   	'.',' ',':',$0D,'-',$00,$00,$00	
		2D 00 00 00 
0960				
0961				;--------------- SHIFT用 KEY TABLE ------------------
0962	D68E	00 00 00 00 	KTBL2 	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0963	D696	00 00 00 00 	      	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0964	D69E	00 00 00 00 	      	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0965	D6A6	21 22 23 24 	      	FCB   	'!','"','#','$','%',$00,$00,$00	
		25 00 00 00 
0966	D6AE	26 27 29 28 	      	FCB   	'&',$27,')','(','^',$00,$00,$00	
		5E 00 00 00 
0967	D6B6	00 40 5C 5B 	      	FCB   	$00,'@','\','[',']',$00,$00,$00	
		5D 00 00 00 
0968	D6BE	00 00 3F 2F 	      	FCB   	$00,$00,'?','/','+',$00,$00,$00	
		2B 00 00 00 
0969	D6C6	00 00 00 2D 	      	FCB   	$00,$00,$00,'-','<',$00,$00,$00	
		3C 00 00 00 
0970	D6CE	3E 20 2A 0D 	      	FCB   	'>',' ','*',$0D,'=',$00,$00,$00	
		3D 00 00 00 
0971				
0972				;--------------- MESSAGE -------------------------
0973	D6D6	4A 52 2D 31 	SDMSG 	FCC     	/JR-100_SD READY OK!/	
    	    	30 30 5F 53 
    	    	44 20 52 45 
    	    	41 44 59 20 
    	    	4F 4B 21 
0974	D6E9	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0975				
0976	D6EC	43 4D 54 20 	CMTMSG	FCC     	/CMT OK!/	
    	    	4F 4B 21 
0977	D6F3	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0978				
0979	D6F6	0A 0D 		BSMSG 	FCB   	$0A,$0D        	
0980	D6F8	42 41 53 49 	      	FCC     	/BASIC /	
    	    	43 20 
0981	D6FE	00 		      	FCB   	$00            	
0982				
0983	D6FF	0A 0D 		BNMSG 	FCB   	$0A,$0D        	
0984	D701	42 49 4E 41 	      	FCC     	/BINARY /	
    	    	52 59 20 
0985	D708	00 		      	FCB   	$00            	
0986				
0987	D709	4C 4F 41 44 	LDMSG 	FCC     	/LOADING /	
    	    	49 4E 47 20 
0988	D711	00 		      	FCB   	$00            	
0989				
0990	D712	0A 0D 		SVMSG 	FCB   	$0A,$0D        	
0991	D714	53 41 56 45 	      	FCC     	/SAVEING/	
    	    	49 4E 47 
0992	D71B	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0993				
0994	D71E	0A 0D 00 		CRLF  	FCB   	$0A,$0D,$00    	
0995				
0996	D721			MSG_F0				
0997	D721	53 44 2D 43 	      	FCC     	/SD-CARD INITIALIZE ERROR/	
    	    	41 52 44 20 
    	    	49 4E 49 54 
    	    	49 41 4C 49 
    	    	5A 45 20 45 
    	    	52 52 4F 52 
0998	D739	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0999				
1000	D73C			MSG_F1				
1001	D73C	4E 4F 54 20 	      	FCC     	/NOT FIND FILE/	
    	    	46 49 4E 44 
    	    	20 46 49 4C 
    	    	45 
1002	D749	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1003				
1004	D74C			MSG_F3				
1005	D74C	46 49 4C 45 	      	FCC     	/FILE EXIST/	
    	    	20 45 58 49 
    	    	53 54 
1006	D756	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1007				
1008	D759			MSG_F4				
1009	D759	50 52 4F 47 	      	FCC     	/PROG FORMAT VERSION ERROR/	
    	    	20 46 4F 52 
    	    	4D 41 54 20 
    	    	56 45 52 53 
    	    	49 4F 4E 20 
    	    	45 52 52 4F 
    	    	52 
1010	D772	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1011				
1012	D775			MSG99 				
1013	D775	20 45 52 52 	      	FCC     	/ ERROR/	
    	    	4F 52 
1014	D77B	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1015				
1016	D77E			MSG_AD				
1017	D77E	41 44 44 52 	      	FCC     	/ADDRESS ERROR/	
    	    	45 53 53 20 
    	    	45 52 52 4F 
    	    	52 
1018	D78B	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1019				
1020	D78E	53 45 4C 3A 	MSGKEY	FCC     	/SEL:0-9 NXT:ANY BCK:B BRK:RET/	
    	    	30 2D 39 20 
    	    	4E 58 54 3A 
    	    	41 4E 59 20 
    	    	42 43 4B 3A 
    	    	42 20 42 52 
    	    	4B 3A 52 45 
    	    	54 
1021	D7AB	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1022				
1023				**** BUSYをCHECK(1) ****
1024				;PORTC BIT7が1になるまでLOOP
1025	D7AE	B6 CC12		F1CHK 	LDAA  	PIOC           	
1026	D7B1	84 80		      	ANDA  	#$80           	;PORTC BIT7 = 1?
1027	D7B3	27 F9		      	BEQ   	F1CHK          	
1028	D7B5	39		      	RTS   			
1029				
1030				**** BUSYをCHECK(0) ****
1031				;PORTC BIT7が0になるまでLOOP
1032	D7B6	B6 CC12		F2CHK 	LDAA  	PIOC           	
1033	D7B9	84 80		      	ANDA  	#$80           	;PORTC BIT7 = 0?
1034	D7BB	26 F9		      	BNE   	F2CHK          	
1035	D7BD	39		      	RTS   			
1036				
1037				**** 1BYTE受信****
1038				*受信データをアキュムレータAにセットしてリターン
1039	D7BE	8D EE		RCVBYTE	BSR   	F1CHK          	;PORTC BIT7が1になるまでLOOP
1040	D7C0	B6 CC11		      	LDAA  	PIOB           	;PORTB -> A
1041	D7C3	36		      	PSHA  			
1042	D7C4	86 05		      	LDAA  	#$05           	
1043	D7C6	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 1
1044	D7C9	8D EB		      	BSR   	F2CHK          	;PORTC BIT7が0になるまでLOOP
1045	D7CB	86 04		      	LDAA  	#$04           	
1046	D7CD	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 0
1047	D7D0	32		      	PULA  			
1048	D7D1	39		      	RTS   			
1049				
1050				**** 1BYTE送信 ****
1051				*アキュムレータAの内容をPORTA下位4BITに4BITずつ送信
1052	D7D2			SNDBYTE				
1053	D7D2	36		      	PSHA  			
1054	D7D3	44		      	LSRA  			
1055	D7D4	44		      	LSRA  			
1056	D7D5	44		      	LSRA  			
1057	D7D6	44		      	LSRA  			
1058	D7D7	84 0F		      	ANDA  	#$0F           	
1059	D7D9	8D 06		      	BSR   	SND4BIT        	
1060	D7DB	32		      	PULA  			
1061	D7DC	84 0F		      	ANDA  	#$0F           	
1062	D7DE	8D 01		      	BSR   	SND4BIT        	
1063	D7E0	39		      	RTS   			
1064				
1065				**** 4BIT送信 ****
1066				*アキュムレータA下位4ビットを送信する
1067	D7E1			SND4BIT				
1068	D7E1	B7 CC10		      	STAA  	PIOA           	
1069	D7E4	86 05		      	LDAA  	#$05           	
1070	D7E6	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 1
1071	D7E9	8D C3		      	BSR   	F1CHK          	;PORTC BIT7が1になるまでLOOP
1072	D7EB	86 04		      	LDAA  	#$04           	
1073	D7ED	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 0
1074	D7F0	8D C4		      	BSR   	F2CHK          	
1075	D7F2	39		      	RTS   			
1076				
1077				
1078				**** 8255初期化 ****
1079				*PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
1080	D7F3	86 8A		PIOINI	LDAA  	#$8A           	
1081	D7F5	B7 CC13		      	STAA  	PIOR           	;PIOR <- $8A
1082	D7F8	4F		      	CLRA  			
1083	D7F9	B7 CC10		      	STAA  	PIOA           	;PIOA <- $00
1084	D7FC	B7 CC12		      	STAA  	PIOC           	;PIOC <- $00
1085	D7FF	39		      	RTS   			
1086				
1087				
1088				;---------------------- BASICコマンドテーブルを再定義 ------------------
1089	D800			BTBL  				
1090	D800	E439 		      	FDB   	$E439          	
1091				
1092	D802	4C 49 53 		      	FCC     	/LIS/   	
1093	D805	D4 		      	FCB   	'T'+$80        	
1094	D806	F3C2 		      	FDB   	$F3C2          	
1095				
1096	D808	52 55 		      	FCC     	/RU/    	
1097	D80A	CE 		      	FCB   	'N'+$80        	
1098	D80B	E6AB 		      	FDB   	$E6AB          	
1099				
1100	D80D	52 45 53 45 	      	FCC     	/RESE/  	
1101	D811	D4 		      	FCB   	'T'+$80        	
1102	D812	E400 		      	FDB   	$E400          	
1103				
1104	D814	41 55 54 		      	FCC     	/AUT/   	
1105	D817	CF 		      	FCB   	'O'+$80        	
1106	D818	E526 		      	FDB   	$E526          	
1107				
1108	D81A	4E 45 		      	FCC     	/NE/    	
1109	D81C	D7 		      	FCB   	'W'+$80        	
1110	D81D	E41E 		      	FDB   	$E41E          	
1111				
1112	D81F	4C 4C 49 53 	      	FCC     	/LLIS/  	
1113	D823	D4 		      	FCB   	'T'+$80        	
1114	D824	F3BF 		      	FDB   	$F3BF          	
1115				
1116	D826	46 49 4E 44 	      	FCC     	/FIND/  	
1117	D82A	A2 		      	FCB   	'"'+$80        	
1118	D82B	F120 		      	FDB   	$F120          	
1119				
1120	D82D	43 4F 4E 		      	FCC     	/CON/   	
1121	D830	D4 		      	FCB   	'T'+$80        	
1122	D831			CTBL  				
1123	D831	F21E 		      	FDB   	$F21E          	
1124				
1125	D833	4C 45 		      	FCC     	/LE/    	
1126	D835	D4 		      	FCB   	'T'+$80        	
1127	D836	F26E 		      	FDB   	$F26E          	
1128				
1129	D838	49 		      	FCC     	/I/     	
1130	D839	C6 		      	FCB   	'F'+$80        	
1131	D83A	E67B 		      	FDB   	$E67B          	
1132				
1133	D83C	47 4F 54 		      	FCC     	/GOT/   	
1134	D83F	CF 		      	FCB   	'O'+$80        	
1135	D840	F255 		      	FDB   	$F255          	
1136				
1137	D842	47 4F 53 55 	      	FCC     	/GOSU/  	
1138	D846	C2 		      	FCB   	'B'+$80        	
1139	D847	F256 		      	FDB   	$F256          	
1140				
1141	D849	52 45 		      	FCC     	/RE/    	
1142	D84B	D4 		      	FCB   	'T'+$80        	
1143	D84C	F22A 		      	FDB   	$F22A          	
1144				
1145	D84E	4E 45 58 		      	FCC     	/NEX/   	
1146	D851	D4 		      	FCB   	'T'+$80        	
1147	D852	F2F8 		      	FDB   	$F2F8          	
1148				
1149	D854	46 4F 		      	FCC     	/FO/    	
1150	D856	D2 		      	FCB   	'R'+$80        	
1151	D857	F294 		      	FDB   	$F294          	
1152				
1153	D859	54 48 45 		      	FCC     	/THE/   	
1154	D85C	CE 		      	FCB   	'N'+$80        	
1155	D85D	F1FD 		      	FDB   	$F1FD          	
1156				
1157	D85F	50 4F 4B 		      	FCC     	/POK/   	
1158	D862	C5 		      	FCB   	'E'+$80        	
1159	D863	EF38 		      	FDB   	$EF38          	
1160				
1161	D865	52 45 41 		      	FCC     	/REA/   	
1162	D868	C4 		      	FCB   	'D'+$80        	
1163	D869	F08B 		      	FDB   	$F08B          	
1164				
1165	D86B	44 41 54 		      	FCC     	/DAT/   	
1166	D86E	C1 		      	FCB   	'A'+$80        	
1167	D86F	F033 		      	FDB   	$F033          	
1168				
1169	D871	4C 4F 43 41 	      	FCC     	/LOCAT/ 	
    	    	54 
1170	D876	C5 		      	FCB   	'E'+$80        	
1171	D877	F19F 		      	FDB   	$F19F          	
1172				
1173	D879	50 49 43 		      	FCC     	/PIC/   	
1174	D87C	CB 		      	FCB   	'K'+$80        	
1175	D87D	EF63 		      	FDB   	$EF63          	
1176				
1177	D87F	52 45 53 54 	      	FCC     	/RESTOR/	
    	    	4F 52 
1178	D885	C5 		      	FCB   	'E'+$80        	
1179	D886	F0F3 		      	FDB   	$F0F3          	
1180				
1181	D888	52 45 		      	FCC     	/RE/    	
1182	D88A	CD 		      	FCB   	'M'+$80        	
1183	D88B	E652 		      	FDB   	$E652          	
1184				
1185	D88D	50 52 49 4E 	      	FCC     	/PRIN/  	
1186	D891	D4 		      	FCB   	'T'+$80        	
1187	D892	E758 		      	FDB   	$E758          	
1188				
1189	D894	49 4E 50 55 	      	FCC     	/INPU/  	
1190	D898	D4 		      	FCB   	'T'+$80        	
1191	D899	F33A 		      	FDB   	$F33A          	
1192				
1193	D89B	44 49 		      	FCC     	/DI/    	
1194	D89D	CD 		      	FCB   	'M'+$80        	
1195	D89E	EC9A 		      	FDB   	$EC9A          	
1196				
1197	D8A0	43 4C 45 41 	      	FCC     	/CLEA/  	
1198	D8A4	D2 		      	FCB   	'R'+$80        	
1199	D8A5	E426 		      	FDB   	$E426          	
1200				
1201	D8A7	53 54 4F 		      	FCC     	/STO/   	
1202	D8AA	D0 		      	FCB   	'P'+$80        	
1203	D8AB	E545 		      	FDB   	$E545          	
1204				
1205	D8AD	45 4E 		      	FCC     	/EN/    	
1206	D8AF	C4 		      	FCB   	'D'+$80        	
1207	D8B0	E5A3 		      	FDB   	$E5A3          	
1208				
1209	D8B2	4C 50 52 49 	      	FCC     	/LPRIN/ 	
    	    	4E 
1210	D8B7	D4 		      	FCB   	'T'+$80        	
1211	D8B8	E756 		      	FDB   	$E756          	
1212				
1213	D8BA	4F 50 54 49 	      	FCC     	/OPTIO/ 	
    	    	4F 
1214	D8BF	CE 		      	FCB   	'N'+$80        	
1215	D8C0	EFEA 		      	FDB   	$EFEA          	
1216				
1217	D8C2	42 45 45 50 	      	FCC     	/BEEP/  	
1218	D8C6	B0 		      	FCB   	'0'+$80        	
1219	D8C7	F021 		      	FDB   	$F021          	
1220				
1221	D8C9	42 45 45 50 	      	FCC     	/BEEP/  	
1222	D8CD	B1 		      	FCB   	'1'+$80        	
1223	D8CE	F000 		      	FDB   	$F000          	
1224				
1225	D8D0	42 45 45 		      	FCC     	/BEE/   	
1226	D8D3	D0 		      	FCB   	'P'+$80        	
1227	D8D4	F018 		      	FDB   	$F018          	
1228				
1229	D8D6	48 43 4F 50 	      	FCC     	/HCOP/  	
1230	D8DA	D9 		      	FCB   	'Y'+$80        	
1231	D8DB	E504 		      	FDB   	$E504          	
1232				
1233	D8DD	4C 4F 41 		      	FCC     	/LOA/   	
1234	D8E0	C4 		      	FCB   	'D'+$80        	
1235				;		FDB		$F4EF
1236	D8E1	D046 		      	FDB   	LOAD           	
1237				
1238	D8E3	4D 45 58 45 	      	FCC     	/MEXE/  	
1239	D8E7	C3 		      	FCB   	'C'+$80        	
1240				;		FDB		$F4E3
1241	D8E8	D531 		      	FDB   	MEXEC          	
1242				
1243	D8EA	53 41 56 		      	FCC     	/SAV/   	
1244	D8ED	C5 		      	FCB   	'E'+$80        	
1245				;		FDB		$F508
1246	D8EE	D2DC 		      	FDB   	BSAVE          	
1247				
1248	D8F0	4D 53 41 56 	      	FCC     	/MSAVE/ 	
    	    	45 
1249	D8F5	A2 		      	FCB   	'"'+$80        	
1250				;		FDB		$F517
1251	D8F6	D39E 		      	FDB   	MSAVE          	
1252				
1253	D8F8	56 45 52 49 	      	FCC     	/VERIF/ 	
    	    	46 
1254	D8FD	D9 		      	FCB   	'Y'+$80        	
1255	D8FE	F4FC 		      	FDB   	$F4FC          	
1256				
1257	D900	43 4C 		      	FCC     	/CL/    	
1258	D902	D3 		      	FCB   	'S'+$80        	
1259	D903	F47C 		      	FDB   	$F47C          	
1260				
1261	D905	53 44 44 49 	      	FCC     	/SDDI/  	
1262	D909	D2 		      	FCB   	'R'+$80        	
1263	D90A	D467 		      	FDB   	FILES          	
1264				
1265	D90C	FF 		      	FCB   	$FF            	
1266	D90D	F26E 		      	FDB   	$F26E          	
1267				
1268	D90F	52 4E 44 		      	FCC     	/RND/   	
1269	D912	A8 		      	FCB   	'('+$80        	
1270	D913	EB2C 		      	FDB   	$EB2C          	
1271				
1272	D915	41 42 53 		      	FCC     	/ABS/   	
1273	D918	A8 		      	FCB   	'('+$80        	
1274	D919	E95C 		      	FDB   	$E95C          	
1275				
1276	D91B	4D 4F 44 		      	FCC     	/MOD/   	
1277	D91E	A8 		      	FCB   	'('+$80        	
1278	D91F	EB0C 		      	FDB   	$EB0C          	
1279				
1280	D921	41 53 43 		      	FCC     	/ASC/   	
1281	D924	A8 		      	FCB   	'('+$80        	
1282	D925	EFB7 		      	FDB   	$EFB7          	
1283				
1284	D927	46 52 45 		      	FCC     	/FRE/   	
1285	D92A	A8 		      	FCB   	'('+$80        	
1286	D92B	EF6F 		      	FDB   	$EF6F          	
1287				
1288	D92D	50 45 45 4B 	      	FCC     	/PEEK/  	
1289	D931	A8 		      	FCB   	'('+$80        	
1290	D932	EF4D 		      	FDB   	$EF4D          	
1291				
1292	D934	53 47 4E 		      	FCC     	/SGN/   	
1293	D937	A8 		      	FCB   	'('+$80        	
1294	D938	EF74 		      	FDB   	$EF74          	
1295				
1296	D93A	4C 45 4E 		      	FCC     	/LEN/   	
1297	D93D	A8 		      	FCB   	'('+$80        	
1298	D93E	EFAB 		      	FDB   	$EFAB          	
1299				
1300	D940	56 50 4F 53 	      	FCC     	/VPOS/  	
1301	D944	A8 		      	FCB   	'('+$80        	
1302	D945	F185 		      	FDB   	$F185          	
1303				
1304	D947	48 50 4F 53 	      	FCC     	/HPOS/  	
1305	D94B	A8 		      	FCB   	'('+$80        	
1306	D94C	F175 		      	FDB   	$F175          	
1307				
1308	D94E	55 53 52 		      	FCC     	/USR/   	
1309	D951	A8 		      	FCB   	'('+$80        	
1310	D952	EB41 		      	FDB   	$EB41          	
1311				
1312	D954	56 41 4C 		      	FCC     	/VAL/   	
1313	D957	A8 		      	FCB   	'('+$80        	
1314	D958	EFBF 		      	FDB   	$EFBF          	
1315				
1316	D95A	FF 		      	FCB   	$FF            	
1317	D95B	EAA5 		      	FDB   	$EAA5          	
1318				
1319	D95D	54 		      	FCC     	/T/     	
1320	D95E	CF 		      	FCB   	'O'+$80        	
1321	D95F	1234 		      	FDB   	$1234          	
1322				
1323	D961	53 54 45 		      	FCC     	/STE/   	
1324	D964	D0 		      	FCB   	'P'+$80        	
1325	D965	ABCD 		      	FDB   	$ABCD          	
1326				
1327	D967	53 50 43 		      	FCC     	/SPC/   	
1328	D96A	A8 		      	FCB   	'('+$80        	
1329	D96B	EF95 		      	FDB   	$EF95          	
1330				
1331	D96D	54 41 42 		      	FCC     	/TAB/   	
1332	D970	A8 		      	FCB   	'('+$80        	
1333	D971	E78F 		      	FDB   	$E78F          	
1334				
1335	D973	46 4C 44 		      	FCC     	/FLD/   	
1336	D976	A8 		      	FCB   	'('+$80        	
1337	D977	EFD3 		      	FDB   	$EFD3          	
1338				
1339	D979	FF 		      	FCB   	$FF            	
1340	D97A	E7C4 		      	FDB   	$E7C4          	
1341				
1342	D97C	48 45 58 24 	      	FCC     	/HEX$/  	
1343	D980	A8 		      	FCB   	'('+$80        	
1344	D981	F147 		      	FDB   	$F147          	
1345				
1346	D983	43 48 52 24 	      	FCC     	/CHR$/  	
1347	D987	A8 		      	FCB   	'('+$80        	
1348	D988	F1EC 		      	FDB   	$F1EC          	
1349				
1350	D98A	4C 45 46 54 	      	FCC     	/LEFT$/ 	
    	    	24 
1351	D98F	A8 		      	FCB   	'('+$80        	
1352	D990	EE80 		      	FDB   	$EE80          	
1353				
1354	D992	52 49 47 48 	      	FCC     	/RIGHT$/	
    	    	54 24 
1355	D998	A8 		      	FCB   	'('+$80        	
1356	D999	EE88 		      	FDB   	$EE88          	
1357				
1358	D99B	4D 49 44 24 	      	FCC     	/MID$/  	
1359	D99F	A8 		      	FCB   	'('+$80        	
1360	D9A0	EEA2 		      	FDB   	$EEA2          	
1361				
1362	D9A2	FF 		      	FCB   	$FF            	
1363	D9A3	EEEF 		      	FDB   	$EEEF          	
1364				
1365	D9A5	43 4D 4F 44 	      	FCC     	/CMODE/ 	
    	    	45 
1366	D9AA	B0 		      	FCB   	'0'+$80        	
1367	D9AB	EFF7 		      	FDB   	$EFF7          	
1368				
1369	D9AD	43 4D 4F 44 	      	FCC     	/CMODE/ 	
    	    	45 
1370	D9B2	B1 		      	FCB   	'1'+$80        	
1371	D9B3	EFFA 		      	FDB   	$EFFA          	
1372				
1373	D9B5	4F 56 46 		      	FCC     	/OVF/   	
1374	D9B8	B0 		      	FCB   	'0'+$80        	
1375	D9B9	EFF0 		      	FDB   	$EFF0          	
1376				
1377	D9BB	4F 56 46 		      	FCC     	/OVF/   	
1378	D9BE	B1 		      	FCB   	'1'+$80        	
1379	D9BF	EFF3 		      	FDB   	$EFF3          	
1380				
1381	D9C1	FF 		      	FCB   	$FF            	
1382	D9C2	EAFD 		      	FDB   	$EAFD          	
1383				
1384				;------------------ MEMORY EDIT ----------------------------
1385	DD00			      	ORG   	$DD00          	
1386				
1387	DD00	DF E4		      	STX   	ADRS           	
1388	DD02	96 E4		ME8   	LDAA  	ADRS           	
1389	DD04	BD D54D		      	JSR   	PRHEX          	
1390	DD07	96 E5		      	LDAA  	ADRS+1         	
1391	DD09	BD D54D		      	JSR   	PRHEX          	
1392	DD0C	BD F3BA		      	JSR   	SPC            	
1393				
1394	DD0F	8D 2B		ME0   	BSR   	ME1            	
1395	DD11	25 4F		      	BCS   	ME6            	
1396	DD13	16		      	TAB   			
1397	DD14	58		      	ASLB  			
1398	DD15	58		      	ASLB  			
1399	DD16	58		      	ASLB  			
1400	DD17	58		      	ASLB  			;Bレジスタに送って16倍
1401	DD18	37		      	PSHB  			
1402	DD19	8D 21		      	BSR   	ME1            	
1403	DD1B	33		      	PULB  			
1404	DD1C	25 44		      	BCS   	ME6            	
1405	DD1E	1B		      	ABA   			
1406	DD1F	A7 00		      	STAA  	X              	
1407	DD21	08		      	INX   			
1408	DD22	DF E4		      	STX   	ADRS           	
1409	DD24	96 E5		      	LDAA  	ADRS+1         	
1410	DD26	84 07		      	ANDA  	#$07           	;次のアドレスが$xxx0又は$xxx8のなら改行してアドレス表示へ
1411	DD28	4D		      	TSTA  			
1412	DD29	27 07		      	BEQ   	ME7            	
1413	DD2B	BD F3BA		      	JSR   	SPC            	;次のアドレスが$xxx0又は$xxx8でないなら空白1文字表示
1414	DD2E	DE E4		      	LDX   	ADRS           	
1415	DD30	20 DD		      	BRA   	ME0            	
1416	DD32	CE D71E		ME7   	LDX   	#CRLF          	
1417	DD35	BD D540		      	JSR   	STRPRN         	;改行
1418	DD38	DE E4		      	LDX   	ADRS           	
1419	DD3A	20 C6		      	BRA   	ME8            	
1420				
1421	DD3C	BD E4F2		ME1   	JSR   	INPUT          	
1422	DD3F	81 30		      	CMPA  	#$30           	
1423	DD41	25 0C		      	BCS   	ME2            	
1424	DD43	81 3A		      	CMPA  	#$3A           	
1425	DD45	25 13		      	BCS   	ME3            	
1426	DD47	81 41		      	CMPA  	#$41           	
1427	DD49	25 04		      	BCS   	ME2            	
1428	DD4B	81 47		      	CMPA  	#$47           	
1429	DD4D	25 0E		      	BCS   	ME4            	
1430	DD4F	81 0D		ME2   	CMPA  	#$0D           	
1431	DD51	27 0D		      	BEQ   	ME5            	
1432	DD53	86 08		      	LDAA  	#$08           	
1433	DD55	BD F3BC		      	JSR   	PRINT          	
1434	DD58	20 E2		      	BRA   	ME1            	
1435	DD5A	80 30		ME3   	SUBA  	#$30           	
1436	DD5C	39		      	RTS   			
1437	DD5D	80 37		ME4   	SUBA  	#$37           	
1438	DD5F	39		      	RTS   			
1439	DD60	0D		ME5   	SEC   			
1440	DD61	39		      	RTS   			
1441	DD62	39		ME6   	RTS   			
1442				
1443				;------------------ MEMORY DUMP USR関数第2パラメータ(Xレジスタ)のアドレスからダンプ -----------------
1444	DE00			      	ORG   	$DE00          	
1445				
1446	DE00	DF E4		      	STX   	ADRS           	;16進コード表示用カウンタ
1447	DE02	DF E6		      	STX   	LENG           	;ASCIIコード表示用カウンタ
1448				
1449	DE04	C6 08		DPS   	LDAB  	#$08           	;8行を表示
1450	DE06	37		DP0   	PSHB  			
1451	DE07	DE E4		      	LDX   	ADRS           	
1452	DE09	96 E4		      	LDAA  	ADRS           	;アドレスを表示
1453	DE0B	BD D54D		      	JSR   	PRHEX          	
1454	DE0E	96 E5		      	LDAA  	ADRS+1         	
1455	DE10	BD D54D		      	JSR   	PRHEX          	
1456	DE13	BD F3BA		      	JSR   	SPC            	;空白表示
1457				
1458	DE16	C6 08		      	LDAB  	#$08           	;8Byte分を1行表示
1459	DE18	A6 00		DP1   	LDAA  	X              	
1460	DE1A	BD D54D		      	JSR   	PRHEX          	;Aレジスタを16進2桁で表示
1461	DE1D	08		      	INX   			
1462	DE1E	5A		      	DECB  			
1463	DE1F	26 F7		      	BNE   	DP1            	;ループ
1464	DE21	DF E4		      	STX   	ADRS           	;1行分最終アドレスを退避
1465				
1466	DE23	BD F3BA		      	JSR   	SPC            	;空白表示
1467				
1468	DE26	DE E6		      	LDX   	LENG           	
1469	DE28	C6 08		      	LDAB  	#$08           	;8Byte分
1470	DE2A	A6 00		DP2   	LDAA  	X              	
1471	DE2C	81 20		      	CMPA  	#$20           	;$20以下なら'.'($2E)に置き換え
1472	DE2E	24 02		      	BCC   	DP3            	
1473	DE30	86 2E		      	LDAA  	#$2E           	
1474	DE32	BD F3BC		DP3   	JSR   	PRINT          	
1475	DE35	08		      	INX   			
1476	DE36	5A		      	DECB  			
1477	DE37	26 F1		      	BNE   	DP2            	
1478	DE39	DF E6		      	STX   	LENG           	;1行分最終アドレスを退避
1479				
1480	DE3B	CE D71E		      	LDX   	#CRLF          	
1481	DE3E	BD D540		      	JSR   	STRPRN         	;改行
1482	DE41	33		      	PULB  			
1483	DE42	5A		      	DECB  			
1484	DE43	26 C1		      	BNE   	DP0            	;ループ
1485				
1486	DE45	CE DE71		      	LDX   	#DPMES         	;継続指示メッセージ
1487	DE48	BD D540		      	JSR   	STRPRN         	
1488	DE4B	BD D59C		DP4   	JSR   	KSCN2          	;キー入力待ち
1489	DE4E	4D		      	TSTA  			
1490	DE4F	27 FA		      	BEQ   	DP4            	
1491	DE51	81 20		      	CMPA  	#' '           	;スペースなら次ページ
1492	DE53	27 AF		      	BEQ   	DPS            	
1493	DE55	81 4E		      	CMPA  	#'N'           	;'N'なら次ページ
1494	DE57	27 AB		      	BEQ   	DPS            	
1495	DE59	81 42		      	CMPA  	#'B'           	;'B'なら前ページ
1496	DE5B	27 01		      	BEQ   	DP6            	
1497	DE5D	39		      	RTS   			
1498				
1499	DE5E	96 E5		DP6   	LDAA  	ADRS+1         	;'B'キーが押されたら(ADRS) <- (ADRS) - $80を計算して格納
1500	DE60	80 80		      	SUBA  	#$80           	
1501	DE62	97 E5		      	STAA  	ADRS+1         	
1502	DE64	97 E7		      	STAA  	LENG+1         	
1503	DE66	24 07		      	BCC   	DP7            	
1504	DE68	96 E4		      	LDAA  	ADRS           	
1505	DE6A	4A		      	DECA  			
1506	DE6B	97 E4		      	STAA  	ADRS           	
1507	DE6D	97 E6		      	STAA  	LENG           	
1508	DE6F	20 93		DP7   	BRA   	DPS            	
1509				
1510	DE71			DPMES 				
1511	DE71	2D 20 4E 45 	      	FCC     	/- NEXT:SPACE BACK:B CANSEL:ANY -/	
    	    	58 54 3A 53 
    	    	50 41 43 45 
    	    	20 42 41 43 
    	    	4B 3A 42 20 
    	    	43 41 4E 53 
    	    	45 4C 3A 41 
    	    	4E 59 20 2D 
1512	DE91	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1513				
1514				;------------------ MEMORY TEST ----------------------------
1515	DF00			      	ORG   	$DF00          	
1516				
1517	DF00	DE 04		      	LDX   	BSTA           	;テスト開始アドレス
1518	DF02	DF E4		      	STX   	ADRS           	
1519				
1520	DF04	CE D71E		MEM1  	LDX   	#CRLF          	
1521	DF07	BD D540		      	JSR   	STRPRN         	
1522				
1523	DF0A	96 E4		      	LDAA  	ADRS           	;アドレスを表示
1524	DF0C	BD D54D		      	JSR   	PRHEX          	
1525	DF0F	96 E5		      	LDAA  	ADRS+1         	
1526	DF11	BD D54D		      	JSR   	PRHEX          	
1527				
1528	DF14	BD F3BA		      	JSR   	SPC            	
1529				
1530	DF17	DE E4		      	LDX   	ADRS           	
1531	DF19	86 55		      	LDAA  	#$55           	;$55を書き込み
1532	DF1B	A7 00		      	STAA  	X              	
1533				
1534	DF1D	BD D54D		      	JSR   	PRHEX          	
1535	DF20	BD F3BA		      	JSR   	SPC            	
1536				
1537	DF23	A6 00		      	LDAA  	X              	;読み出し
1538	DF25	16		      	TAB   			
1539	DF26	BD D54D		      	JSR   	PRHEX          	
1540	DF29	17		      	TBA   			
1541				
1542	DF2A	81 55		      	CMPA  	#$55           	;読出しが$55でなければエラー
1543	DF2C	26 1D		      	BNE   	MSTP           	
1544				
1545	DF2E	BD F3BA		      	JSR   	SPC            	
1546				
1547	DF31	86 AA		      	LDAA  	#$AA           	;$AAを書き込み
1548	DF33	A7 00		      	STAA  	X              	
1549				
1550	DF35	BD D54D		      	JSR   	PRHEX          	
1551	DF38	BD F3BA		      	JSR   	SPC            	
1552				
1553	DF3B	A6 00		      	LDAA  	X              	;読出し
1554	DF3D	16		      	TAB   			
1555	DF3E	BD D54D		      	JSR   	PRHEX          	
1556	DF41	17		      	TBA   			
1557				
1558	DF42	81 AA		      	CMPA  	#$AA           	;読出しが$AAでなければエラー
1559	DF44	26 05		      	BNE   	MSTP           	
1560	DF46	08		      	INX   			
1561	DF47	DF E4		      	STX   	ADRS           	
1562	DF49	20 B9		      	BRA   	MEM1           	;ループ
1563				
1564	DF4B	CE DF52		MSTP  	LDX   	#MEMSTP        	;STOPメッセージ
1565	DF4E	BD D540		      	JSR   	STRPRN         	
1566	DF51	39		      	RTS   			
1567				
1568	DF52			MEMSTP				
1569	DF52	0D 0A 		      	FCB   	$0D,$0A        	
1570	DF54	4D 45 4D 4F 	      	FCC     	/MEMORY TEST STOP!/	
    	    	52 59 20 54 
    	    	45 53 54 20 
    	    	53 54 4F 50 
    	    	21 
1571	DF65	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1572				
1573					END   	               	

0 error(s),  0 warning(s) is detected.

Label	address
ADRS  	00E4	ADRS2 	00F2	ADRSK 	00EC	AZ1   	D53F	AZLCNV	D535
BDSEND	D38C	BEEP  	F018	BEND  	0006	BNMSG 	D6FF	BSAVE 	D2DC
BSMSG 	D6F6	BSTA  	0004	BSV1  	D2EB	BSV10 	D2F7	BSV2  	D30C
BTBL  	D800	BTPNT 	001A	CMTMSG	D6EC	CRLF  	D71E	CTBL  	D831
CTPNT 	001C	DL1   	D49E	DL2   	D4A1	DL3   	D4BB	DL33  	D4CF
DL4   	D4D1	DL5   	D4FD	DL6   	D507	DL61  	D51E	DL7   	D525
DL8   	D527	DL9   	D4D7	DL91  	D4DA	DP0   	DE06	DP1   	DE18
DP2   	DE2A	DP3   	DE32	DP4   	DE4B	DP6   	DE5E	DP7   	DE6F
DPMES 	DE71	DPS   	DE04	DUMMY 	D045	ERR   	D2AA	ERR1  	D2B5
ERR3  	D2BE	ERR4  	D2C7	ERR99 	D2D0	ERRJ  	D092	ERRJ2 	D309
ERRJ3 	D3D1	ERRJ4 	D456	ERRJ5 	D464	ERRJ6 	D52E	ERRR  	D2D6
ERRV  	D195	ERRV2 	D20E	F1CHK 	D7AE	F2CHK 	D7B6	FILES 	D467
FLG   	00E3	FN0   	D051	FN1   	D053	FN10  	D06D	FN11  	D071
FN12  	D07C	FN13  	D07D	FN14  	D08A	FN2   	D095	FNS3  	D34B
FNS4  	D364	FNS5  	D36B	FNS6  	D378	FNS7  	D388	FNSEND	D348
HEND  	0008	INI2  	D030	INI3  	D03F	INIT  	D016	INPUT 	E4F2
KBUF  	0030	KEYDAT	C800	KEYSEL	C801	KSC0  	D5A2	KSC1  	D5B5
KSC10 	D632	KSC11 	D636	KSC12 	D63A	KSC13 	D63E	KSC14 	D642
KSC15 	D5F1	KSC2  	D5DB	KSC3  	D5DF	KSC4  	D5E7	KSC5  	D5EB
KSC6  	D5EF	KSC7  	D5F4	KSC8  	D5F9	KSC9  	D60C	KSCAN 	F7A9
KSCN2 	D59C	KTBL  	D646	KTBL2 	D68E	LD1   	D0CD	LD2   	D119
LD3   	D15F	LDMSG 	D709	LENG  	00E6	LOAD  	D046	LOP1  	D16E
LOP2  	D192	LV1   	D1CB	LV2   	D25B	LV3   	D2A1	LV5   	D232
LVBAS 	D213	LVBIN 	D1E8	ME0   	DD0F	ME1   	DD3C	ME2   	DD4F
ME3   	DD5A	ME4   	DD5D	ME5   	DD60	ME6   	DD62	ME7   	DD32
ME8   	DD02	MEM1  	DF04	MEMSTP	DF52	MEXEC 	D531	MSAVE 	D39E
MSG99 	D775	MSG_AD	D77E	MSG_F0	D721	MSG_F1	D73C	MSG_F3	D74C
MSG_F4	D759	MSGKEY	D78E	MSTP  	DF4B	MSV1  	D3AD	MSV10 	D3BF
MSV2  	D3BE	MSV3  	D3D4	MSV4  	D3D6	MSV5  	D3E6	MSV6  	D3ED
MSV8  	D402	MSV9  	D409	PH2   	D564	PH3   	D566	PIOA  	CC10
PIOB  	CC11	PIOC  	CC12	PIOINI	D7F3	PIOR  	CC13	PRGVER	00F0
PRHEX 	D54D	PRHX1 	D55C	PRINT 	F3BC	RCVBYTE	D7BE	SDIR99	D52D
SDIR_PRG	D467	SDMSG 	D6D6	SDR1  	D476	SDR10 	D48C	SDR2  	D48B
SEND  	000C	SH1   	D591	SH2   	D595	SH21  	D57E	SH3   	D599
SH4   	D59B	SHEX  	D57F	SHEX2 	D56A	SND4BIT	D7E1	SNDBYTE	D7D2
SP1   	D54C	SPC   	F3BA	START 	D001	STRPRN	D540	SVMSG 	D712
V2END 	000A	VER1  	D0B4	VER2  	D0B1	VER21 	D19A	XSAVE 	00E8
XSAVE2	00EA	XSAVEK	00EE	
