0001	CC10			PIOA  	EQU   	$CC10          	
0002	CC11			PIOB  	EQU   	$CC11          	
0003	CC12			PIOC  	EQU   	$CC12          	
0004	CC13			PIOR  	EQU   	$CC13          	
0005				
0006	0004			BSTA  	EQU   	$0004          	;BASICプログラムスタートアドレス
0007	0006			BEND  	EQU   	$0006          	;BASICプログラムエンドアドレス
0008	0008			HEND  	EQU   	$0008          	;配列エンドアドレス
0009	000A			V2END 	EQU   	$000A          	;2文字変数アドレス
0010	000C			SEND  	EQU   	$000C          	;文字列変数アドレス
0011	001A			BTPNT 	EQU   	$001A          	;BASICコマンドポインタ $F898
0012	001C			CTPNT 	EQU   	$001C          	;BASICステートメントポインタ $F8C9
0013				
0014	0030			KBUF  	EQU   	$0030          	;キーバッファ ～$0075(70Byte)
0015	00E3			FLG   	EQU   	$00E3          	;SD読込用 FLG 0:BASIC 1:マシン語
0016	00E4			ADRS  	EQU   	$00E4          	;SD読込用 開始アドレス
0017	00E6			LENG  	EQU   	$00E6          	;SD読込用 読込バイト数
0018	00E8			XSAVE 	EQU   	$00E8          	;Xレジスタ保存
0019	00EA			XSAVE2	EQU   	$00EA          	;Xレジスタ保存
0020	00EC			ADRSK 	EQU   	$00EC          	;KSCN2 KTBL算出用/SD読込用 終了アドレス計算用
0021	00EE			XSAVEK	EQU   	$00EE          	;KSCN2用 Xレジスタ保存
0022	00F0			FNSIZ 	EQU   	$00F0          	;ファイルネーム文字数
0023	00F2			ADRS2 	EQU   	$00F2          	;SD読込用 開始アドレス退避
0024				
0025	C800			KEYDAT	EQU   	$C800          	;キーデータ取得
0026	C801			KEYSEL	EQU   	$C801          	;Bit0-Bit3に0-8を出力して$C800のBit0-Bit4のデータを取得
0027				
0028	F018			BEEP  	EQU   	$F018          	;BEEP
0029	E4F2			INPUT 	EQU   	$E4F2          	;1文字入力(カーソルブリンク、エコーバックあり) A=キーデータ Bレジスタ破壊
0030	F7A9			KSCAN 	EQU   	$F7A9          	;キー入力(エコーバックあり) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊
0031	F3BA			SPC   	EQU   	$F3BA          	;空白表示
0032	F3BC			PRINT 	EQU   	$F3BC          	;1文字出力 A=アスキーコード Aレジスタ保存
0033				
0034				;ソース内記述汎用ルーチン
0035				;AZLCNV							;大文字変換 Aレジスタのアルファベット小文字を大文字に変換
0036				;STRPRN							;文字列出力 (X)から$00までの文字列を表示
0037				;PRHEX							;Aレジスタの内容を16進数文字列として表示
0038				;SHEX2							;(X),(X+1)の2バイトアスキーコード文字列を16進数にしてAレジスタへ
0039				;								;		'0'～'9','A'～'F'以外が含まれていたらA=0 C=1
0040				;SHEX							;Aレジスタのアスキーコードを16進数にしてAレジスタへ
0041				;								;		'0'～'9','A'～'F'以外ならA=0 C=1
0042				;KSCN2							;キー入力(エコーバックなし) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊
0043				;								;		CTRLキー未対応
0044				
0045				;A=USR($xxxx,X,A) 引値 第2パラメータ:Xレジスタ 第3パラメータ:Aレジスタ  戻り値:上位バイト:Bレジスタ 下位バイト:Aレジスタ
0046				
0047	D000			      	ORG   	$D000          	
0048				
0049	D000	00 		      	FCB   	$00            	;プリンタ制御ROMの有無識別コード
0050				*
0051	D001			START 				
0052	D001	7E D016		      	JMP   	INIT           	;INITMコマンドジャンプ先
0053	D004	7E D045		      	JMP   	DUMMY          	;プリンタ一文字出力ジャンプ先
0054	D007	7E D016		      	JMP   	INIT           	;HCOPYコマンドジャンプ先
0055	D00A	7E D046		      	JMP   	LOAD           	
0056	D00D	7E D1A2		      	JMP   	BSAVE          	
0057	D010	7E D264		      	JMP   	MSAVE          	
0058	D013	7E D32D		      	JMP   	FILES          	
0059				
0060	D016	DF E8		INIT  	STX   	XSAVE          	;コマンド文字列終了位置を保存
0061	D018	BD D699		      	JSR   	PIOINI         	;8255初期化
0062				
0063	D01B	96 1A		      	LDAA  	BTPNT          	
0064	D01D	81 F8		      	CMPA  	#$F8           	
0065	D01F	26 0F		      	BNE   	INI2           	
0066	D021	CE D6A6		      	LDX   	#BTBL          	
0067	D024	DF 1A		      	STX   	BTPNT          	;BASICコマンドポインタをBTBLに変更
0068	D026	CE D6D7		      	LDX   	#CTBL          	
0069	D029	DF 1C		      	STX   	CTPNT          	:BASICステートメントポインタをCBTLに変更
0070	D02B	CE D598		      	LDX   	#SDMSG         	;'JR-100_SD READY OK!'
0071	D02E	20 0F		      	BRA   	INI3           	
0072	D030	DF E8		INI2  	STX   	XSAVE          	;コマンド文字列終了位置を保存
0073	D032	CE F898		      	LDX   	#$F898         	
0074	D035	DF 1A		      	STX   	BTPNT          	;BASICコマンドポインタを元に戻す
0075	D037	CE F8C9		      	LDX   	#$F8C9         	
0076	D03A	DF 1C		      	STX   	CTPNT          	:BASICステートメントポインタを元に戻す
0077	D03C	CE D5AE		      	LDX   	#CMTMSG        	;'CMT OK!'
0078	D03F	BD D402		INI3  	JSR   	STRPRN         	
0079	D042	DE E8		      	LDX   	XSAVE          	
0080	D044	39		      	RTS   			
0081				
0082	D045			DUMMY 				
0083	D045	39		      	RTS   			
0084				
0085				;----------------- BASICプログラム、機械語プログラム LOAD ---------------------------
0086	D046			LOAD  				
0087	D046	86 80		      	LDAA  	#$80           	;コマンド$80を送信
0088	D048	BD D678		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0089	D04B	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0090	D04E	4D		      	TSTA  			
0091	D04F	26 41		      	BNE   	ERRJ           	
0092				
0093	D051	C6 20		FN0   	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0094	D053	A6 00		FN1   	LDAA  	X              	
0095	D055	08		      	INX   			
0096	D056	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0097	D058	27 F9		      	BEQ   	FN1            	
0098	D05A	81 3A		      	CMPA  	#':'           	;コロンだったら32Byte以下でも終了
0099	D05C	27 0F		      	BEQ   	FN10           	
0100	D05E	4D		      	TSTA  			;$00だったら32Byte以下でも終了
0101	D05F	27 0C		      	BEQ   	FN10           	
0102	D061	BD D678		      	JSR   	SNDBYTE        	
0103	D064	5A		      	DECB  			
0104	D065	26 EC		      	BNE   	FN1            	
0105	D067	4F		      	CLRA  			
0106	D068	BD D678		      	JSR   	SNDBYTE        	;$00を送信
0107	D06B	20 0F		      	BRA   	FN12           	
0108				
0109	D06D	09		FN10  	DEX   			
0110	D06E	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0111	D070	4F		      	CLRA  			
0112	D071	BD D678		FN11  	JSR   	SNDBYTE        	;32Byteに満たない分を$00送信
0113	D074	5A		      	DECB  			
0114	D075	26 FA		      	BNE   	FN11           	
0115	D077	BD D678		      	JSR   	SNDBYTE        	;$00送信
0116	D07A	20 0E		      	BRA   	FN14           	
0117				
0118	D07C	09		FN12  	DEX   			
0119	D07D	A6 00		FN13  	LDAA  	X              	;32Byteを超えてまだ文字列があるようなら':'又は$00が出てくるまでXレジスタを進める
0120	D07F	08		      	INX   			
0121	D080	81 3A		      	CMPA  	#':'           	
0122	D082	26 F9		      	BNE   	FN13           	
0123	D084	4D		      	TSTA  			
0124	D085	26 F6		      	BNE   	FN13           	
0125	D087	09		      	DEX   			
0126	D088	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0127				
0128	D08A			FN14  				
0129	D08A	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0130	D08D	4D		      	TSTA  			
0131	D08E	26 02		      	BNE   	ERRJ           	
0132	D090	20 03		      	BRA   	FN2            	
0133				
0134	D092	7E D179		ERRJ  	JMP   	ERR            	
0135				
0136	D095	BD D664		FN2   	JSR   	RCVBYTE        	;'P'
0137	D098	BD D664		      	JSR   	RCVBYTE        	;'R'
0138	D09B	BD D664		      	JSR   	RCVBYTE        	;'O'
0139	D09E	BD D664		      	JSR   	RCVBYTE        	;'G'
0140	D0A1	BD D664		      	JSR   	RCVBYTE        	;#$01 フォーマットバージョン
0141	D0A4	BD D664		      	JSR   	RCVBYTE        	;#$00
0142	D0A7	BD D664		      	JSR   	RCVBYTE        	;#$00
0143	D0AA	BD D664		      	JSR   	RCVBYTE        	;#$00
0144	D0AD	BD D664		      	JSR   	RCVBYTE        	;FNAME_SIZE 1stByte
0145	D0B0	16		      	TAB   			
0146	D0B1	BD D664		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 2ndByte
0147	D0B4	BD D664		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 3rdByte
0148	D0B7	BD D664		      	JSR   	RCVBYTE        	;SKIP FNAME_SIZE 4thByte
0149	D0BA	CE 0030		      	LDX   	#KBUF          	;SDから送られてきたファイル名を格納
0150	D0BD	BD D664		LD1   	JSR   	RCVBYTE        	;FNAME
0151	D0C0	A7 00		      	STAA  	X              	
0152	D0C2	08		      	INX   			
0153	D0C3	5A		      	DECB  			
0154	D0C4	26 F7		      	BNE   	LD1            	
0155	D0C6	4F		      	CLRA  			
0156	D0C7	A7 00		      	STAA  	X              	;ファイル名の最後に$00を追加
0157				
0158	D0C9	BD D664		      	JSR   	RCVBYTE        	;読み込みアドレス 1stByte
0159	D0CC	97 E5		      	STAA  	ADRS+1         	
0160	D0CE	97 F3		      	STAA  	ADRS2+1        	
0161	D0D0	BD D664		      	JSR   	RCVBYTE        	;読み込みアドレス 2ndByte
0162	D0D3	97 E4		      	STAA  	ADRS           	
0163	D0D5	97 F2		      	STAA  	ADRS2          	
0164	D0D7	BD D664		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0165	D0DA	BD D664		      	JSR   	RCVBYTE        	;SKIP 4thByte
0166				
0167	D0DD	BD D664		      	JSR   	RCVBYTE        	;読み込みByte数1st受信
0168	D0E0	97 E7		      	STAA  	LENG+1         	
0169	D0E2	BD D664		      	JSR   	RCVBYTE        	;読み込みByte数2nd受信
0170	D0E5	97 E6		      	STAA  	LENG           	
0171	D0E7	BD D664		      	JSR   	RCVBYTE        	;SKIP 3rd
0172	D0EA	BD D664		      	JSR   	RCVBYTE        	;SKIP 4th
0173				
0174	D0ED	BD D664		      	JSR   	RCVBYTE        	;FLAG 1stByte 0:BASIC 1:マシン語
0175	D0F0	97 E3		      	STAA  	FLG            	
0176				
0177	D0F2	4D		      	TSTA  			
0178	D0F3	26 08		      	BNE   	LD2            	
0179	D0F5	CE D5B8		      	LDX   	#BSMSG         	;BASICプログラムLOAD表示
0180	D0F8	BD D402		      	JSR   	STRPRN         	
0181	D0FB	20 06		      	BRA   	LD3            	
0182	D0FD	CE D5C1		LD2   	LDX   	#BNMSG         	;マシン語LOAD表示
0183	D100	BD D402		      	JSR   	STRPRN         	
0184	D103	CE D5CB		LD3   	LDX   	#LDMSG         	;'LOADING '
0185	D106	BD D402		      	JSR   	STRPRN         	
0186	D109	CE 0030		      	LDX   	#KBUF          	;ファイル名
0187	D10C	BD D402		      	JSR   	STRPRN         	
0188	D10F	86 28		      	LDAA  	#'('           	
0189	D111	BD F3BC		      	JSR   	PRINT          	
0190	D114	96 E4		      	LDAA  	ADRS           	;読み込み開始アドレス表示
0191	D116	BD D40F		      	JSR   	PRHEX          	
0192	D119	96 E5		      	LDAA  	ADRS+1         	
0193	D11B	BD D40F		      	JSR   	PRHEX          	
0194				
0195	D11E	86 2D		      	LDAA  	#'-'           	
0196	D120	BD F3BC		      	JSR   	PRINT          	
0197				
0198	D123	96 E7		      	LDAA  	LENG+1         	
0199	D125	9B E5		      	ADDA  	ADRS+1         	
0200	D127	97 ED		      	STAA  	ADRSK+1        	
0201	D129	96 E6		      	LDAA  	LENG           	
0202	D12B	99 E4		      	ADCA  	ADRS           	
0203	D12D	97 EC		      	STAA  	ADRSK          	
0204	D12F	DE EC		      	LDX   	ADRSK          	
0205	D131	09		      	DEX   			
0206	D132	DF EC		      	STX   	ADRSK          	;(ADRSK) <- 読み込み開始アドレス+読み込みByte数-1
0207				
0208	D134	96 EC		      	LDAA  	ADRSK          	;読み込み終了アドレス表示
0209	D136	BD D40F		      	JSR   	PRHEX          	
0210	D139	96 ED		      	LDAA  	ADRSK+1        	
0211	D13B	BD D40F		      	JSR   	PRHEX          	
0212	D13E	86 29		      	LDAA  	#')'           	
0213	D140	BD F3BC		      	JSR   	PRINT          	
0214	D143	CE D5E0		      	LDX   	#CRLF          	;CRLF
0215	D146	BD D402		      	JSR   	STRPRN         	
0216				
0217	D149	BD D664		      	JSR   	RCVBYTE        	;SKIP 2ndByte
0218	D14C	BD D664		      	JSR   	RCVBYTE        	;SKIP 3rdByte
0219	D14F	BD D664		      	JSR   	RCVBYTE        	;SKIP 4thByte
0220				
0221	D152	DE E4		LOP1  	LDX   	ADRS           	
0222	D154	BD D664		      	JSR   	RCVBYTE        	;1Byte受信
0223	D157	A7 00		      	STAA  	X              	;(X) <- A
0224	D159	08		      	INX   			;X <- X+1
0225	D15A	DF E4		      	STX   	ADRS           	
0226				
0227	D15C	DE E6		      	LDX   	LENG           	
0228	D15E	09		      	DEX   			
0229	D15F	DF E6		      	STX   	LENG           	;(LENG) <- (LENG) -1
0230	D161	26 EF		      	BNE   	LOP1           	;(LENG)が0になるまでループ
0231				
0232	D163	96 E3		      	LDAA  	FLG            	;FLG CHECK 1(マシン語)なら終了
0233	D165	4D		      	TSTA  			
0234	D166	26 0E		      	BNE   	LOP2           	
0235				
0236	D168	DE E4		      	LDX   	ADRS           	;0ならBASICパラメータをセット
0237	D16A	09		      	DEX   			
0238	D16B	DF 06		      	STX   	BEND           	;BASICプログラムエンドアドレスセット
0239	D16D	08		      	INX   			
0240	D16E	DF 08		      	STX   	HEND           	;配列エンドアドレスセット
0241	D170	08		      	INX   			
0242	D171	DF 0A		      	STX   	V2END          	;2文字変数アドレスセット
0243	D173	08		      	INX   			
0244	D174	DF 0C		      	STX   	SEND           	;文字列変数アドレスセット
0245				
0246	D176	DE E8		LOP2  	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0247	D178	39		      	RTS   			
0248				
0249	D179			ERR   				
0250	D179	DF E8		      	STX   	XSAVE          	
0251	D17B	81 F0		      	CMPA  	#$F0           	
0252	D17D	26 05		      	BNE   	ERR1           	
0253	D17F	CE D5E3		      	LDX   	#MSG_F0        	
0254	D182	20 18		      	BRA   	ERRR           	
0255	D184	81 F1		ERR1  	CMPA  	#$F1           	
0256	D186	26 05		      	BNE   	ERR3           	
0257	D188	CE D5FE		      	LDX   	#MSG_F1        	
0258	D18B	20 0F		      	BRA   	ERRR           	
0259	D18D	81 F3		ERR3  	CMPA  	#$F3           	
0260	D18F	26 05		      	BNE   	ERR99          	
0261	D191	CE D60E		      	LDX   	#MSG_F3        	
0262	D194	20 06		      	BRA   	ERRR           	
0263	D196			ERR99 				
0264	D196	BD D40F		      	JSR   	PRHEX          	
0265	D199	CE D61B		      	LDX   	#MSG99         	
0266				
0267	D19C	BD D402		ERRR  	JSR   	STRPRN         	
0268	D19F	DE E8		      	LDX   	XSAVE          	
0269	D1A1	39		      	RTS   			
0270				
0271				;--------------------- BASICプログラム SAVE ------------------------------------------
0272	D1A2			BSAVE 				
0273	D1A2	86 81		      	LDAA  	#$81           	;コマンド$81を送信
0274	D1A4	BD D678		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0275	D1A7	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0276	D1AA	4D		      	TSTA  			
0277	D1AB	26 22		      	BNE   	ERRJ2          	
0278				
0279	D1AD	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0280	D1AF	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0281	D1B1	A6 00		BSV1  	LDAA  	X              	
0282	D1B3	08		      	INX   			
0283	D1B4	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0284	D1B6	27 F9		      	BEQ   	BSV1           	
0285	D1B8	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0286	D1BA	26 01		      	BNE   	BSV10          	
0287	D1BC	4F		      	CLRA  			
0288	D1BD	BD D678		BSV10 	JSR   	SNDBYTE        	
0289	D1C0	5A		      	DECB  			
0290	D1C1	26 EE		      	BNE   	BSV1           	
0291	D1C3	4F		      	CLRA  			
0292	D1C4	BD D678		      	JSR   	SNDBYTE        	;$00送信
0293				
0294	D1C7	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0295	D1CA	4D		      	TSTA  			
0296	D1CB	26 02		      	BNE   	ERRJ2          	;$00以外ならエラー
0297	D1CD	20 03		      	BRA   	BSV2           	
0298				
0299	D1CF	7E D179		ERRJ2 	JMP   	ERR            	
0300				
0301	D1D2	4F		BSV2  	CLRA  			
0302	D1D3	BD D678		      	JSR   	SNDBYTE        	;継続コード$00を送信
0303	D1D6	8D 36		      	BSR   	FNSEND         	;ファイルネームをPROG形式用に送信
0304				
0305	D1D8	96 05		      	LDAA  	BSTA+1         	;BASICスタートアドレス下位バイトを送信
0306	D1DA	BD D678		      	JSR   	SNDBYTE        	
0307	D1DD	96 04		      	LDAA  	BSTA           	;BASICスタートアドレス上位バイトを送信
0308	D1DF	BD D678		      	JSR   	SNDBYTE        	
0309				
0310	D1E2	DE 04		      	LDX   	BSTA           	
0311	D1E4	DF E4		      	STX   	ADRS           	;BASICスタートアドレスを(ADRS)にコピー
0312	D1E6	96 07		      	LDAA  	BEND+1         	
0313	D1E8	90 05		      	SUBA  	BSTA+1         	
0314	D1EA	97 E7		      	STAA  	LENG+1         	
0315	D1EC	96 06		      	LDAA  	BEND           	
0316	D1EE	92 04		      	SBCA  	BSTA           	
0317	D1F0	97 E6		      	STAA  	LENG           	;BASICエンドアドレス-BASICスタートアドレスを計算して(LENG)に格納
0318	D1F2	DE E6		      	LDX   	LENG           	
0319	D1F4	08		      	INX   			;BEND - BSTART +1
0320	D1F5	DF E6		      	STX   	LENG           	
0321				
0322	D1F7	96 E7		      	LDAA  	LENG+1         	;ファイルサイズ下位バイトを送信
0323	D1F9	BD D678		      	JSR   	SNDBYTE        	
0324	D1FC	96 E6		      	LDAA  	LENG           	;ファイルサイズ上位バイトを送信
0325	D1FE	BD D678		      	JSR   	SNDBYTE        	
0326				
0327	D201	4F		      	CLRA  			;BASICプログラムであること(0)を送信
0328	D202	BD D678		      	JSR   	SNDBYTE        	
0329				
0330	D205	CE D5D4		      	LDX   	#SVMSG         	;SAVE表示
0331	D208	BD D402		      	JSR   	STRPRN         	
0332				
0333	D20B	8D 45		      	BSR   	BDSEND         	;BASICプログラムを送信
0334	D20D	39		      	RTS   			
0335				
0336				;------------------- ファイルネームをPROG形式用に送信 ----------------------
0337	D20E	DE E8		FNSEND	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0338	D210	5F		      	CLRB  			
0339	D211	A6 00		FNS3  	LDAA  	X              	;ファイルネーム文字数をカウント
0340	D213	08		      	INX   			
0341	D214	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは飛ばす
0342	D216	27 F9		      	BEQ   	FNS3           	
0343	D218	5C		      	INCB  			
0344	D219	81 3A		      	CMPA  	#':'           	;コロンが見つかったら終了
0345	D21B	27 0D		      	BEQ   	FNS4           	
0346	D21D	81 2C		      	CMPA  	#','           	;コンマが見つかったら終了
0347	D21F	27 09		      	BEQ   	FNS4           	
0348	D221	4D		      	TSTA  			;$00が見つかったら終了
0349	D222	27 06		      	BEQ   	FNS4           	
0350	D224	C1 11		      	CMPB  	#$11           	;ファイルネームが16文字以上だったら終了
0351	D226	27 02		      	BEQ   	FNS4           	
0352	D228	20 E7		      	BRA   	FNS3           	
0353	D22A	5A		FNS4  	DECB  			
0354	D22B	17		      	TBA   			
0355				
0356	D22C	BD D678		      	JSR   	SNDBYTE        	;FNAME_SIZE 1stByte
0357	D22F	DE E8		      	LDX   	XSAVE          	
0358	D231	A6 00		FNS5  	LDAA  	X              	;ファイルネーム文字数分のファイルネームを送信
0359	D233	08		      	INX   			
0360	D234	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは飛ばす
0361	D236	27 F9		      	BEQ   	FNS5           	
0362	D238	BD D678		      	JSR   	SNDBYTE        	;ファイルネーム文字数分を送信
0363	D23B	5A		      	DECB  			
0364	D23C	26 F3		      	BNE   	FNS5           	
0365				
0366	D23E	A6 00		FNS6  	LDAA  	X              	;ファイルネームが16文字以上だった場合、コンマ、コロン又は$00が見つかるまでコマンド文字列終了位置を修正
0367	D240	08		      	INX   			
0368	D241	81 3A		      	CMPA  	#':'           	
0369	D243	27 09		      	BEQ   	FNS7           	
0370	D245	81 2C		      	CMPA  	#','           	
0371	D247	27 05		      	BEQ   	FNS7           	
0372	D249	4D		      	TSTA  			
0373	D24A	27 02		      	BEQ   	FNS7           	
0374	D24C	20 F0		      	BRA   	FNS6           	
0375	D24E	09		FNS7  	DEX   			
0376	D24F	DF E8		      	STX   	XSAVE          	
0377	D251	39		      	RTS   			
0378				
0379				;----------- (ADRS)から(LENG)バイトを送信 -----------------------
0380	D252	DE E4		BDSEND	LDX   	ADRS           	;ファイルサイズ分を送信
0381	D254	A6 00		      	LDAA  	X              	;A <- (ADRS)
0382	D256	BD D678		      	JSR   	SNDBYTE        	;1Byte送信
0383	D259	08		      	INX   			;X <- X+1
0384	D25A	DF E4		      	STX   	ADRS           	;(ADRS) <- (ADRS)+1
0385				
0386	D25C	DE E6		      	LDX   	LENG           	;X <- (LENG)
0387	D25E	09		      	DEX   			;X <- X-1
0388	D25F	DF E6		      	STX   	LENG           	;(LENG) <- (LENG)-1
0389	D261	26 EF		      	BNE   	BDSEND         	;(LENG)が0になるまでループ
0390	D263	39		      	RTS   			
0391				
0392				;------------------ 機械語プログラムをSAVE ------------------------
0393	D264			MSAVE 				
0394	D264	86 81		      	LDAA  	#$81           	;コマンド$81を送信
0395	D266	BD D678		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0396	D269	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0397	D26C	4D		      	TSTA  			
0398	D26D	26 28		      	BNE   	ERRJ3          	
0399				
0400	D26F	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0401	D271	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0402	D273	A6 00		MSV1  	LDAA  	X              	
0403	D275	08		      	INX   			
0404	D276	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0405	D278	27 F9		      	BEQ   	MSV1           	
0406	D27A	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0407	D27C	27 06		      	BEQ   	MSV2           	
0408	D27E	81 2C		      	CMPA  	#','           	;コンマなら$00にして送信
0409	D280	27 02		      	BEQ   	MSV2           	
0410	D282	20 01		      	BRA   	MSV10          	
0411	D284	4F		MSV2  	CLRA  			
0412	D285	BD D678		MSV10 	JSR   	SNDBYTE        	
0413	D288	5A		      	DECB  			
0414	D289	26 E8		      	BNE   	MSV1           	
0415	D28B	4F		      	CLRA  			
0416	D28C	BD D678		      	JSR   	SNDBYTE        	;$00送信
0417				
0418	D28F	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0419	D292	4D		      	TSTA  			
0420	D293	26 02		      	BNE   	ERRJ3          	;$00以外ならエラー
0421	D295	20 03		      	BRA   	MSV3           	
0422				
0423	D297	7E D179		ERRJ3 	JMP   	ERR            	
0424				
0425	D29A	DE E8		MSV3  	LDX   	XSAVE          	;コマンド文字列終了位置を復帰
0426	D29C	A6 00		MSV4  	LDAA  	X              	;ファイルネーム部分を読み飛ばし
0427	D29E	08		      	INX   			
0428	D29F	81 3A		      	CMPA  	#':'           	;コロンが見つかったら終了
0429	D2A1	27 09		      	BEQ   	MSV5           	
0430	D2A3	81 2C		      	CMPA  	#','           	;コンマが見つかったら終了
0431	D2A5	27 05		      	BEQ   	MSV5           	
0432	D2A7	4D		      	TSTA  			;$00が見つかったら終了
0433	D2A8	27 02		      	BEQ   	MSV5           	
0434	D2AA	20 F0		      	BRA   	MSV4           	
0435	D2AC	A6 00		MSV5  	LDAA  	X              	
0436	D2AE	81 24		      	CMPA  	#'$'           	;'$'は読み飛ばす
0437	D2B0	26 01		      	BNE   	MSV6           	
0438	D2B2	08		      	INX   			
0439	D2B3	BD D42C		MSV6  	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0440	D2B6	25 64		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0441	D2B8	97 E4		      	STAA  	ADRS           	;開始アドレス上位バイトにセット
0442	D2BA	BD D42C		      	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0443	D2BD	25 5D		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0444	D2BF	97 E5		      	STAA  	ADRS+1         	;開始アドレス下位バイトにセット
0445	D2C1	A6 00		      	LDAA  	X              	
0446	D2C3	81 2C		      	CMPA  	#','           	;コンマは読み飛ばす
0447	D2C5	26 01		      	BNE   	MSV8           	
0448	D2C7	08		      	INX   			
0449	D2C8	A6 00		MSV8  	LDAA  	X              	
0450	D2CA	81 24		      	CMPA  	#'$'           	;'$'は読み飛ばす
0451	D2CC	26 01		      	BNE   	MSV9           	
0452	D2CE	08		      	INX   			
0453	D2CF	BD D42C		MSV9  	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0454	D2D2	25 48		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0455	D2D4	97 E6		      	STAA  	LENG           	;終了アドレス上位バイトにセット
0456	D2D6	BD D42C		      	JSR   	SHEX2          	;16進数2桁のアスキーコードを16進数に変換
0457	D2D9	25 41		      	BCS   	ERRJ4          	;16進数2桁を表すアスキーコードで無ければエラー
0458	D2DB	97 E7		      	STAA  	LENG+1         	;終了アドレス下位バイトにセット
0459	D2DD	DF EA		      	STX   	XSAVE2         	;コマンド文字列終了位置を保存
0460				
0461	D2DF	96 E7		      	LDAA  	LENG+1         	
0462	D2E1	90 E5		      	SUBA  	ADRS+1         	
0463	D2E3	97 E7		      	STAA  	LENG+1         	
0464	D2E5	96 E6		      	LDAA  	LENG           	
0465	D2E7	92 E4		      	SBCA  	ADRS           	
0466	D2E9	25 31		      	BCS   	ERRJ4          	
0467	D2EB	97 E6		      	STAA  	LENG           	;終了アドレス-開始アドレスを計算して(LENG)に格納
0468	D2ED	DE E6		      	LDX   	LENG           	
0469	D2EF	08		      	INX   			;LENG - ADRS +1
0470	D2F0	DF E6		      	STX   	LENG           	
0471				
0472	D2F2	4F		      	CLRA  			
0473	D2F3	BD D678		      	JSR   	SNDBYTE        	;継続コード$00を送信
0474	D2F6	BD D20E		      	JSR   	FNSEND         	;ファイルネームをPROG形式用に送信
0475				
0476	D2F9	96 E5		      	LDAA  	ADRS+1         	;BASICスタートアドレス下位バイトを送信
0477	D2FB	BD D678		      	JSR   	SNDBYTE        	
0478	D2FE	96 E4		      	LDAA  	ADRS           	;BASICスタートアドレス上位バイトを送信
0479	D300	BD D678		      	JSR   	SNDBYTE        	
0480				
0481	D303	96 E7		      	LDAA  	LENG+1         	;ファイルサイズ下位バイトを送信
0482	D305	BD D678		      	JSR   	SNDBYTE        	
0483	D308	96 E6		      	LDAA  	LENG           	;ファイルサイズ上位バイトを送信
0484	D30A	BD D678		      	JSR   	SNDBYTE        	
0485				
0486	D30D	86 01		      	LDAA  	#$01           	;機械語プログラムであること(1)を送信
0487	D30F	BD D678		      	JSR   	SNDBYTE        	
0488				
0489	D312	CE D5D4		      	LDX   	#SVMSG         	;SAVE表示
0490	D315	BD D402		      	JSR   	STRPRN         	
0491				
0492	D318	BD D252		      	JSR   	BDSEND         	;機械語データを送信
0493	D31B	39		      	RTS   			
0494				
0495	D31C			ERRJ4 				
0496	D31C	86 FF		      	LDAA  	#$FF           	;打ち切りコードを送信
0497	D31E	BD D678		      	JSR   	SNDBYTE        	
0498	D321	CE D624		      	LDX   	#MSG_AD        	;アドレスエラー表示
0499	D324	BD D402		      	JSR   	STRPRN         	
0500	D327	DE E8		      	LDX   	XSAVE          	
0501	D329	39		      	RTS   			
0502				
0503				;------------------ SDファイル一覧表示 ---------------------------
0504	D32A	7E D179		ERRJ5 	JMP   	ERR            	;ERROR処理へジャンプ
0505				
0506	D32D			FILES 				
0507				*「SDIR」処理
0508	D32D			SDIR_PRG				
0509	D32D	86 82		      	LDAA  	#$82           	;コマンド$82を送信
0510	D32F	BD D678		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0511	D332	BD D664		      	JSR   	RCVBYTE        	;状態取得(00H=OK)
0512	D335	4D		      	TSTA  			
0513	D336	26 F2		      	BNE   	ERRJ5          	;ERROR
0514				
0515	D338	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0516	D33A	C6 20		      	LDAB  	#$20           	;(X)からのファイル名32Byteを送信
0517	D33C	A6 00		SDR1  	LDAA  	X              	
0518	D33E	08		      	INX   			
0519	D33F	81 22		      	CMPA  	#'"'           	;ダブルコーテーションは除去
0520	D341	27 F9		      	BEQ   	SDR1           	
0521	D343	81 3A		      	CMPA  	#':'           	;コロンなら$00にして送信
0522	D345	27 06		      	BEQ   	SDR2           	
0523	D347	81 2C		      	CMPA  	#','           	;コンマなら$00にして送信
0524	D349	27 02		      	BEQ   	SDR2           	
0525	D34B	20 01		      	BRA   	SDR10          	
0526	D34D	4F		SDR2  	CLRA  			
0527	D34E	BD D678		SDR10 	JSR   	SNDBYTE        	;1文字送信
0528	D351	5A		      	DECB  			
0529	D352	26 E8		      	BNE   	SDR1           	
0530	D354	4F		      	CLRA  			
0531	D355	BD D678		      	JSR   	SNDBYTE        	;$00送信
0532	D358	DF E8		      	STX   	XSAVE          	;コマンド文字列終了位置を保存
0533				
0534	D35A	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0535	D35D	4D		      	TSTA  			
0536	D35E	26 CA		      	BNE   	ERRJ5          	;$00以外ならエラー
0537				
0538	D360	CE 0030		DL1   	LDX   	#KBUF          	;Arduinoから送られてくる文字列を#KBUFへ格納
0539	D363	BD D664		DL2   	JSR   	RCVBYTE        	
0540	D366	BD D3F7		      	JSR   	AZLCNV         	;大文字に変換
0541	D369	4D		      	TSTA  			
0542	D36A	27 11		      	BEQ   	DL3            	;$00を受信するまでを一行とする
0543	D36C	81 FF		      	CMPA  	#$FF           	
0544	D36E	27 23		      	BEQ   	DL4            	;$FFを受信したら終了
0545	D370	81 FD		      	CMPA  	#$FD           	
0546	D372	27 25		      	BEQ   	DL9            	;$FD受信で文字列を取得してSETLしたことを表示
0547	D374	81 FE		      	CMPA  	#$FE           	
0548	D376	27 47		      	BEQ   	DL5            	;$FEを受信したら一時停止して一文字入力待ち
0549	D378	A7 00		      	STAA  	X              	
0550	D37A	08		      	INX   			
0551	D37B	20 E6		      	BRA   	DL2            	
0552				
0553	D37D			DL3   				
0554	D37D	86 0D		      	LDAA  	#$0D           	;$00を受信したら一行分を表示して改行
0555	D37F	A7 00		      	STAA  	X              	
0556	D381	08		      	INX   			
0557	D382	86 0A		      	LDAA  	#$0A           	
0558	D384	A7 00		      	STAA  	X              	
0559	D386	08		      	INX   			
0560				
0561	D387	4F		      	CLRA  			
0562	D388	A7 00		      	STAA  	X              	
0563	D38A	08		      	INX   			
0564	D38B	CE 0030		      	LDX   	#KBUF          	
0565	D38E	BD D402		      	JSR   	STRPRN         	;1行表示
0566	D391	20 CD		DL33  	BRA   	DL1            	
0567				
0568	D393	BD D664		DL4   	JSR   	RCVBYTE        	;状態取得(00H=OK)して終了
0569	D396	DE E8		      	LDX   	XSAVE          	
0570	D398	39		      	RTS   			
0571				
0572	D399	CE 0030		DL9   	LDX   	#KBUF          	;文字列を取得
0573	D39C	BD D664		DL91  	JSR   	RCVBYTE        	;#KBUFへ文字列格納
0574	D39F	BD D3F7		      	JSR   	AZLCNV         	;大文字に変換
0575	D3A2	A7 00		      	STAA  	X              	
0576	D3A4	08		      	INX   			
0577	D3A5	4D		      	TSTA  			;$00を受信するまで受信処理
0578	D3A6	26 F4		      	BNE   	DL91           	
0579				;		LDX		#KBUF
0580				;		JSR		STRPRN
0581	D3A8	BD D664		      	JSR   	RCVBYTE        	;$FF終了コード読み飛ばし
0582	D3AB	BD D664		      	JSR   	RCVBYTE        	;状態取得読み飛ばし
0583	D3AE	CE 0030		      	LDX   	#KBUF          	
0584	D3B1	86 80		      	LDAA  	#$80           	;コマンド$80を送信、そのままLOADコマンド実行
0585	D3B3	BD D678		      	JSR   	SNDBYTE        	;Aレジスタのコマンドコードを送信
0586	D3B6	BD D664		      	JSR   	RCVBYTE        	;状態取得($00=OK)
0587	D3B9	4D		      	TSTA  			
0588	D3BA	26 34		      	BNE   	ERRJ6          	;ERRORになるはずはないが念のため
0589	D3BC	7E D051		      	JMP   	FN0            	
0590				
0591	D3BF	DF EA		DL5   	STX   	XSAVE2         	
0592	D3C1	CE D634		      	LDX   	#MSGKEY        	;SEL:0-9 NXT:ANY BCK:B BRK:RET
0593	D3C4	BD D402		      	JSR   	STRPRN         	;文字列表示
0594	D3C7	DE EA		      	LDX   	XSAVE2         	
0595	D3C9	BD D45E		DL6   	JSR   	KSCN2          	;キーボートスキャン
0596	D3CC	4D		      	TSTA  			
0597	D3CD	27 FA		      	BEQ   	DL6            	;何か入力されるまでループ
0598	D3CF	36		      	PSHA  			
0599	D3D0	BD F018		      	JSR   	BEEP           	
0600	D3D3	32		      	PULA  			
0601	D3D4	81 0D		      	CMPA  	#$0D           	
0602	D3D6	27 0F		      	BEQ   	DL7            	;RETURNで打ち切り
0603	D3D8	81 30		      	CMPA  	#$30           	;数字0～9ならそのままArduinoへ送信してSETL処理へ
0604	D3DA	25 04		      	BCS   	DL61           	
0605	D3DC	81 3A		      	CMPA  	#$3A           	
0606	D3DE	25 09		      	BCS   	DL8            	
0607	D3E0	81 42		DL61  	CMPA  	#$42           	
0608	D3E2	27 05		      	BEQ   	DL8            	;「B」で前ページ
0609	D3E4	4F		      	CLRA  			
0610	D3E5	20 02		      	BRA   	DL8            	;それ以外で継続
0611	D3E7	86 FF		DL7   	LDAA  	#$FF           	
0612	D3E9	BD D678		DL8   	JSR   	SNDBYTE        	
0613	D3EC	7E D363		      	JMP   	DL2            	
0614				
0615	D3EF	39		SDIR99	RTS   			
0616	D3F0	7E D179		ERRJ6 	JMP   	ERR            	
0617				
0618				;--------------- MEXECUTE 機械語読み込みアドレスを実行アドレスとしてジャンプ -------
0619	D3F3	DE F2		MEXEC 	LDX   	ADRS2          	
0620	D3F5	6E 00		      	JMP   	X              	
0621				
0622				;--------------- Aレジスタのアルファベット小文字を大文字に変換 ----------------
0623	D3F7	81 61		AZLCNV	CMPA  	#$61           	;a～zなら$20を引いてA～Zに変換
0624	D3F9	25 06		      	BCS   	AZ1            	
0625	D3FB	81 7B		      	CMPA  	#$7B           	
0626	D3FD	24 02		      	BCC   	AZ1            	
0627	D3FF	80 20		      	SUBA  	#$20           	
0628	D401	39		AZ1   	RTS   			
0629				
0630				;--------------- 文字列出力 ----------------------
0631				;(X)から$00までの文字列を表示
0632	D402			STRPRN				
0633	D402	A6 00		      	LDAA  	X              	;A <- (X)
0634	D404	81 00		      	CMPA  	#$00           	;$00なら終了
0635	D406	27 06		      	BEQ   	SP1            	
0636	D408	BD F3BC		      	JSR   	PRINT          	;1文字出力
0637	D40B	08		      	INX   			
0638	D40C	20 F4		      	BRA   	STRPRN         	
0639	D40E	39		SP1   	RTS   			
0640				
0641				;------------------- Aレジスタの内容を16進数文字列として表示 -------------------------
0642	D40F	36		PRHEX 	PSHA  			
0643	D410	84 F0		      	ANDA  	#$F0           	;上位4ビットを変換
0644	D412	44		      	LSRA  			
0645	D413	44		      	LSRA  			
0646	D414	44		      	LSRA  			
0647	D415	44		      	LSRA  			
0648	D416	8D 06		      	BSR   	PRHX1          	
0649	D418	32		      	PULA  			
0650	D419	84 0F		      	ANDA  	#$0F           	;下位4ビットを変換
0651	D41B	8D 01		      	BSR   	PRHX1          	
0652	D41D	39		      	RTS   			
0653				
0654	D41E	81 0A		PRHX1 	CMPA  	#$0A           	
0655	D420	25 04		      	BCS   	PH2            	
0656	D422	8B 37		      	ADDA  	#$37           	;A～F
0657	D424	20 02		      	BRA   	PH3            	
0658	D426	8B 30		PH2   	ADDA  	#$30           	;0～9
0659	D428	BD F3BC		PH3   	JSR   	PRINT          	
0660	D42B	39		      	RTS   			
0661				
0662				
0663				;----- (X),(X+1)の2バイトアスキーコード文字列を16進数にしてAレジスタへ -----------------
0664				;                          '0'～'9','A'～'F'以外が含まれていたらA=0 C=1
0665	D42C	A6 00		SHEX2 	LDAA  	X              	
0666	D42E	8D 11		      	BSR   	SHEX           	
0667	D430	25 0E		      	BCS   	SH21           	;ERRORなら中断
0668	D432	16		      	TAB   			
0669	D433	58		      	ASLB  			
0670	D434	58		      	ASLB  			
0671	D435	58		      	ASLB  			
0672	D436	58		      	ASLB  			;Bレジスタに送って16倍
0673	D437	08		      	INX   			
0674	D438	A6 00		      	LDAA  	X              	
0675	D43A	8D 05		      	BSR   	SHEX           	
0676	D43C	25 02		      	BCS   	SH21           	;ERRORなら中断
0677	D43E	1B		      	ABA   			;Bレジスタを加算
0678	D43F	08		      	INX   			
0679	D440	39		SH21  	RTS   			
0680				
0681				;----------------- Aレジスタのアスキーコードを16進数にしてAレジスタへ  --------------------
0682				;                          '0'～'9','A'～'F'以外ならA=0 C=1
0683	D441	81 30		SHEX  	CMPA  	#'0'           	
0684	D443	25 12		      	BCS   	SH2            	
0685	D445	81 3A		      	CMPA  	#':'           	
0686	D447	25 0A		      	BCS   	SH1            	
0687	D449	81 41		      	CMPA  	#'A'           	
0688	D44B	25 0A		      	BCS   	SH2            	
0689	D44D	81 47		      	CMPA  	#'G'           	
0690	D44F	25 0A		      	BCS   	SH3            	
0691	D451	20 04		      	BRA   	SH2            	
0692				
0693	D453	80 30		SH1   	SUBA  	#$30           	;0～9
0694	D455	20 06		      	BRA   	SH4            	
0695	D457	4F		SH2   	CLRA  			;ERROR
0696	D458	0D		      	SEC   			
0697	D459	20 02		      	BRA   	SH4            	
0698	D45B	80 37		SH3   	SUBA  	#$37           	;A～F
0699	D45D	39		SH4   	RTS   			
0700				
0701				;--------- キー入力(エコーバックなし) A=キーデータ(何も押されていなければ$00) Bレジスタ破壊 CTRLキー未対応 --------
0702	D45E	DF EE		KSCN2 	STX   	XSAVEK         	
0703	D460	CE C800		      	LDX   	#KEYDAT        	
0704	D463	5F		      	CLRB  			
0705	D464	17		KSC0  	TBA   			
0706	D465	A7 01		      	STAA  	1,X            	;KEYSEL($C801)に出力
0707	D467	A6 00		      	LDAA  	X              	;KEYDAT($C800)のデータを取得
0708	D469	84 1F		      	ANDA  	#$1F           	
0709	D46B	81 1F		      	CMPA  	#$1F           	;何か押されている？
0710	D46D	26 08		      	BNE   	KSC1           	
0711	D46F	5C		      	INCB  			;押されていなければ次のスキャン
0712	D470	C1 09		      	CMPB  	#$09           	;$00～$08まで検査
0713	D472	26 F0		      	BNE   	KSC0           	
0714	D474	4F		      	CLRA  			;何も押されていなければ$00でリターン
0715	D475	20 3C		      	BRA   	KSC15          	
0716				
0717	D477	36		KSC1  	PSHA  			;何か押されていた時の処理
0718	D478	58		      	ASLB  			;B <- B*8
0719	D479	58		      	ASLB  			
0720	D47A	58		      	ASLB  			
0721	D47B	CE D508		      	LDX   	#KTBL          	
0722	D47E	DF EC		      	STX   	ADRSK          	;(ADRSK) <- KTBL
0723	D480	96 ED		      	LDAA  	ADRSK+1        	
0724	D482	1B		      	ABA   			
0725	D483	97 ED		      	STAA  	ADRSK+1        	
0726	D485	96 EC		      	LDAA  	ADRSK          	
0727	D487	89 00		      	ADCA  	#$00           	
0728	D489	97 EC		      	STAA  	ADRSK          	;(ADRSK) <- (ADRSK) + B
0729	D48B	32		      	PULA  			
0730	D48C	DE EC		      	LDX   	ADRSK          	
0731	D48E	47		      	ASRA  			
0732	D48F	24 0C		      	BCC   	KSC2           	
0733	D491	47		      	ASRA  			
0734	D492	24 0D		      	BCC   	KSC3           	
0735	D494	47		      	ASRA  			
0736	D495	24 12		      	BCC   	KSC4           	
0737	D497	47		      	ASRA  			
0738	D498	24 13		      	BCC   	KSC5           	
0739	D49A	47		      	ASRA  			
0740	D49B	24 14		      	BCC   	KSC6           	
0741	D49D	A6 00		KSC2  	LDAA  	X              	;D0列を取得
0742	D49F	20 12		      	BRA   	KSC15          	
0743	D4A1	A6 01		KSC3  	LDAA  	1,X            	;D1列を取得
0744	D4A3	81 FF		      	CMPA  	#$FF           	;SHIFTキーが押されていたらもう一度スキャン
0745	D4A5	27 0F		      	BEQ   	KSC7           	
0746	D4A7	20 0A		      	BRA   	KSC15          	
0747	D4A9	A6 02		KSC4  	LDAA  	2,X            	;D2列を取得
0748	D4AB	20 06		      	BRA   	KSC15          	
0749	D4AD	A6 03		KSC5  	LDAA  	3,X            	;D3列を取得
0750	D4AF	20 02		      	BRA   	KSC15          	
0751	D4B1	A6 04		KSC6  	LDAA  	4,X            	;D4列を取得
0752				
0753	D4B3	DE EE		KSC15 	LDX   	XSAVEK         	
0754	D4B5	39		      	RTS   			
0755				
0756	D4B6	CE C800		KSC7  	LDX   	#KEYDAT        	;SHIFTキーが押されていた時のスキャン
0757	D4B9	C6 01		      	LDAB  	#$01           	
0758	D4BB	17		KSC8  	TBA   			
0759	D4BC	A7 01		      	STAA  	1,X            	;KEYSEL($C801)に出力
0760	D4BE	A6 00		      	LDAA  	X              	;KEYDAT($C800)のデータを取得
0761	D4C0	84 1F		      	ANDA  	#$1F           	
0762	D4C2	81 1F		      	CMPA  	#$1F           	;何か押されている？
0763	D4C4	26 08		      	BNE   	KSC9           	
0764	D4C6	5C		      	INCB  			;押されていなければ次のスキャン
0765	D4C7	C1 09		      	CMPB  	#$09           	;$00～$08まで検査
0766	D4C9	26 F0		      	BNE   	KSC8           	
0767	D4CB	4F		      	CLRA  			;SHIFTキー以外押されていなければ$00でリターン
0768	D4CC	20 E5		      	BRA   	KSC15          	
0769	D4CE	36		KSC9  	PSHA  			;SHIFTキー以外押されていた時の処理
0770	D4CF	58		      	ASLB  			;B <- B*8
0771	D4D0	58		      	ASLB  			
0772	D4D1	58		      	ASLB  			
0773	D4D2	CE D550		      	LDX   	#KTBL2         	
0774	D4D5	DF EC		      	STX   	ADRSK          	;(ADRSK) <- KTBL2
0775	D4D7	96 ED		      	LDAA  	ADRSK+1        	
0776	D4D9	1B		      	ABA   			
0777	D4DA	97 ED		      	STAA  	ADRSK+1        	
0778	D4DC	96 EC		      	LDAA  	ADRSK          	
0779	D4DE	89 00		      	ADCA  	#$00           	
0780	D4E0	97 EC		      	STAA  	ADRSK          	;(ADRSK) <- (ADRSK) + B
0781	D4E2	32		      	PULA  			
0782	D4E3	DE EC		      	LDX   	ADRSK          	
0783	D4E5	47		      	ASRA  			
0784	D4E6	24 0C		      	BCC   	KSC10          	
0785	D4E8	47		      	ASRA  			
0786	D4E9	24 0D		      	BCC   	KSC11          	
0787	D4EB	47		      	ASRA  			
0788	D4EC	24 0E		      	BCC   	KSC12          	
0789	D4EE	47		      	ASRA  			
0790	D4EF	24 0F		      	BCC   	KSC13          	
0791	D4F1	47		      	ASRA  			
0792	D4F2	24 10		      	BCC   	KSC14          	
0793	D4F4	A6 00		KSC10 	LDAA  	X              	;D1列を取得
0794	D4F6	20 BB		      	BRA   	KSC15          	
0795	D4F8	A6 01		KSC11 	LDAA  	1,X            	;D1列を取得
0796	D4FA	20 B7		      	BRA   	KSC15          	
0797	D4FC	A6 02		KSC12 	LDAA  	2,X            	;D2列を取得
0798	D4FE	20 B3		      	BRA   	KSC15          	
0799	D500	A6 03		KSC13 	LDAA  	3,X            	;D3列を取得
0800	D502	20 AF		      	BRA   	KSC15          	
0801	D504	A6 04		KSC14 	LDAA  	4,X            	;D4列を取得
0802	D506	20 AB		      	BRA   	KSC15          	
0803				
0804				;--------------- KEY TABLE -------------------------
0805	D508	00 FF 5A 58 	KTBL  	FCB   	$00,$FF,'Z','X','C',$00,$00,$00	
		43 00 00 00 
0806	D510	41 53 44 46 	      	FCB   	'A','S','D','F','G',$00,$00,$00	
		47 00 00 00 
0807	D518	51 57 45 52 	      	FCB   	'Q','W','E','R','T',$00,$00,$00	
		54 00 00 00 
0808	D520	31 32 33 34 	      	FCB   	'1','2','3','4','5',$00,$00,$00	
		35 00 00 00 
0809	D528	36 37 38 39 	      	FCB   	'6','7','8','9','0',$00,$00,$00	
		30 00 00 00 
0810	D530	59 55 49 4F 	      	FCB   	'Y','U','I','O','P',$00,$00,$00	
		50 00 00 00 
0811	D538	48 4A 4B 4C 	      	FCB   	'H','J','K','L',';',$00,$00,$00	
		3B 00 00 00 
0812	D540	56 42 4E 4D 	      	FCB   	'V','B','N','M',$2C,$00,$00,$00	
		2C 00 00 00 
0813	D548	2E 20 3A 0D 	      	FCB   	'.',' ',':',$0D,'-',$00,$00,$00	
		2D 00 00 00 
0814				
0815				;--------------- SHIFT用 KEY TABLE ------------------
0816	D550	00 00 00 00 	KTBL2 	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0817	D558	00 00 00 00 	      	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0818	D560	00 00 00 00 	      	FCB   	$00,$00,$00,$00,$00,$00,$00,$00	
		00 00 00 00 
0819	D568	21 22 23 24 	      	FCB   	'!','"','#','$','%',$00,$00,$00	
		25 00 00 00 
0820	D570	26 27 29 28 	      	FCB   	'&',$27,')','(','^',$00,$00,$00	
		5E 00 00 00 
0821	D578	00 40 5C 5B 	      	FCB   	$00,'@','\','[',']',$00,$00,$00	
		5D 00 00 00 
0822	D580	00 00 3F 2F 	      	FCB   	$00,$00,'?','/','+',$00,$00,$00	
		2B 00 00 00 
0823	D588	00 00 00 2D 	      	FCB   	$00,$00,$00,'-','<',$00,$00,$00	
		3C 00 00 00 
0824	D590	3E 20 2A 0D 	      	FCB   	'>',' ','*',$0D,'=',$00,$00,$00	
		3D 00 00 00 
0825				
0826				;--------------- MESSAGE -------------------------
0827	D598	4A 52 2D 31 	SDMSG 	FCC     	/JR-100_SD READY OK!/	
    	    	30 30 5F 53 
    	    	44 20 52 45 
    	    	41 44 59 20 
    	    	4F 4B 21 
0828	D5AB	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0829				
0830	D5AE	43 4D 54 20 	CMTMSG	FCC     	/CMT OK!/	
    	    	4F 4B 21 
0831	D5B5	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0832				
0833	D5B8	0A 0D 		BSMSG 	FCB   	$0A,$0D        	
0834	D5BA	42 41 53 49 	      	FCC     	/BASIC /	
    	    	43 20 
0835	D5C0	00 		      	FCB   	$00            	
0836				
0837	D5C1	0A 0D 		BNMSG 	FCB   	$0A,$0D        	
0838	D5C3	42 49 4E 41 	      	FCC     	/BINARY /	
    	    	52 59 20 
0839	D5CA	00 		      	FCB   	$00            	
0840				
0841	D5CB	4C 4F 41 44 	LDMSG 	FCC     	/LOADING /	
    	    	49 4E 47 20 
0842	D5D3	00 		      	FCB   	$00            	
0843				
0844	D5D4	0A 0D 		SVMSG 	FCB   	$0A,$0D        	
0845	D5D6	53 41 56 45 	      	FCC     	/SAVEING/	
    	    	49 4E 47 
0846	D5DD	0A 0D 00 		      	FCB   	$0A,$0D,$00    	
0847				
0848	D5E0	0A 0D 00 		CRLF  	FCB   	$0A,$0D,$00    	
0849				
0850	D5E3			MSG_F0				
0851	D5E3	53 44 2D 43 	      	FCC     	/SD-CARD INITIALIZE ERROR/	
    	    	41 52 44 20 
    	    	49 4E 49 54 
    	    	49 41 4C 49 
    	    	5A 45 20 45 
    	    	52 52 4F 52 
0852	D5FB	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0853				
0854	D5FE			MSG_F1				
0855	D5FE	4E 4F 54 20 	      	FCC     	/NOT FIND FILE/	
    	    	46 49 4E 44 
    	    	20 46 49 4C 
    	    	45 
0856	D60B	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0857				
0858	D60E			MSG_F3				
0859	D60E	46 49 4C 45 	      	FCC     	/FILE EXIST/	
    	    	20 45 58 49 
    	    	53 54 
0860	D618	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0861				
0862	D61B			MSG99 				
0863	D61B	20 45 52 52 	      	FCC     	/ ERROR/	
    	    	4F 52 
0864	D621	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0865				
0866	D624			MSG_AD				
0867	D624	41 44 44 52 	      	FCC     	/ADDRESS ERROR/	
    	    	45 53 53 20 
    	    	45 52 52 4F 
    	    	52 
0868	D631	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0869				
0870	D634	53 45 4C 3A 	MSGKEY	FCC     	/SEL:0-9 NXT:ANY BCK:B BRK:RET/	
    	    	30 2D 39 20 
    	    	4E 58 54 3A 
    	    	41 4E 59 20 
    	    	42 43 4B 3A 
    	    	42 20 42 52 
    	    	4B 3A 52 45 
    	    	54 
0871	D651	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
0872				
0873				**** BUSYをCHECK(1) ****
0874				;PORTC BIT7が1になるまでLOOP
0875	D654	B6 CC12		F1CHK 	LDAA  	PIOC           	
0876	D657	84 80		      	ANDA  	#$80           	;PORTC BIT7 = 1?
0877	D659	27 F9		      	BEQ   	F1CHK          	
0878	D65B	39		      	RTS   			
0879				
0880				**** BUSYをCHECK(0) ****
0881				;PORTC BIT7が0になるまでLOOP
0882	D65C	B6 CC12		F2CHK 	LDAA  	PIOC           	
0883	D65F	84 80		      	ANDA  	#$80           	;PORTC BIT7 = 0?
0884	D661	26 F9		      	BNE   	F2CHK          	
0885	D663	39		      	RTS   			
0886				
0887				**** 1BYTE受信****
0888				*受信データをアキュムレータAにセットしてリターン
0889	D664	8D EE		RCVBYTE	BSR   	F1CHK          	;PORTC BIT7が1になるまでLOOP
0890	D666	B6 CC11		      	LDAA  	PIOB           	;PORTB -> A
0891	D669	36		      	PSHA  			
0892	D66A	86 05		      	LDAA  	#$05           	
0893	D66C	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 1
0894	D66F	8D EB		      	BSR   	F2CHK          	;PORTC BIT7が0になるまでLOOP
0895	D671	86 04		      	LDAA  	#$04           	
0896	D673	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 0
0897	D676	32		      	PULA  			
0898	D677	39		      	RTS   			
0899				
0900				**** 1BYTE送信 ****
0901				*アキュムレータAの内容をPORTA下位4BITに4BITずつ送信
0902	D678			SNDBYTE				
0903	D678	36		      	PSHA  			
0904	D679	44		      	LSRA  			
0905	D67A	44		      	LSRA  			
0906	D67B	44		      	LSRA  			
0907	D67C	44		      	LSRA  			
0908	D67D	84 0F		      	ANDA  	#$0F           	
0909	D67F	8D 06		      	BSR   	SND4BIT        	
0910	D681	32		      	PULA  			
0911	D682	84 0F		      	ANDA  	#$0F           	
0912	D684	8D 01		      	BSR   	SND4BIT        	
0913	D686	39		      	RTS   			
0914				
0915				**** 4BIT送信 ****
0916				*アキュムレータA下位4ビットを送信する
0917	D687			SND4BIT				
0918	D687	B7 CC10		      	STAA  	PIOA           	
0919	D68A	86 05		      	LDAA  	#$05           	
0920	D68C	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 1
0921	D68F	8D C3		      	BSR   	F1CHK          	;PORTC BIT7が1になるまでLOOP
0922	D691	86 04		      	LDAA  	#$04           	
0923	D693	B7 CC13		      	STAA  	PIOR           	;PORTC BIT2 <- 0
0924	D696	8D C4		      	BSR   	F2CHK          	
0925	D698	39		      	RTS   			
0926				
0927				
0928				**** 8255初期化 ****
0929				*PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
0930	D699	86 8A		PIOINI	LDAA  	#$8A           	
0931	D69B	B7 CC13		      	STAA  	PIOR           	;PIOR <- $8A
0932	D69E	4F		      	CLRA  			
0933	D69F	B7 CC10		      	STAA  	PIOA           	;PIOA <- $00
0934	D6A2	B7 CC12		      	STAA  	PIOC           	;PIOC <- $00
0935	D6A5	39		      	RTS   			
0936				
0937				
0938				;---------------------- BASICコマンドテーブルを再定義 ------------------
0939	D6A6			BTBL  				
0940	D6A6	E439 		      	FDB   	$E439          	
0941				
0942	D6A8	4C 49 53 		      	FCC     	/LIS/   	
0943	D6AB	D4 		      	FCB   	'T'+$80        	
0944	D6AC	F3C2 		      	FDB   	$F3C2          	
0945				
0946	D6AE	52 55 		      	FCC     	/RU/    	
0947	D6B0	CE 		      	FCB   	'N'+$80        	
0948	D6B1	E6AB 		      	FDB   	$E6AB          	
0949				
0950	D6B3	52 45 53 45 	      	FCC     	/RESE/  	
0951	D6B7	D4 		      	FCB   	'T'+$80        	
0952	D6B8	E400 		      	FDB   	$E400          	
0953				
0954	D6BA	41 55 54 		      	FCC     	/AUT/   	
0955	D6BD	CF 		      	FCB   	'O'+$80        	
0956	D6BE	E526 		      	FDB   	$E526          	
0957				
0958	D6C0	4E 45 		      	FCC     	/NE/    	
0959	D6C2	D7 		      	FCB   	'W'+$80        	
0960	D6C3	E41E 		      	FDB   	$E41E          	
0961				
0962	D6C5	4C 4C 49 53 	      	FCC     	/LLIS/  	
0963	D6C9	D4 		      	FCB   	'T'+$80        	
0964	D6CA	F3BF 		      	FDB   	$F3BF          	
0965				
0966	D6CC	46 49 4E 44 	      	FCC     	/FIND/  	
0967	D6D0	A2 		      	FCB   	'"'+$80        	
0968	D6D1	F120 		      	FDB   	$F120          	
0969				
0970	D6D3	43 4F 4E 		      	FCC     	/CON/   	
0971	D6D6	D4 		      	FCB   	'T'+$80        	
0972	D6D7			CTBL  				
0973	D6D7	F21E 		      	FDB   	$F21E          	
0974				
0975	D6D9	4C 45 		      	FCC     	/LE/    	
0976	D6DB	D4 		      	FCB   	'T'+$80        	
0977	D6DC	F26E 		      	FDB   	$F26E          	
0978				
0979	D6DE	49 		      	FCC     	/I/     	
0980	D6DF	C6 		      	FCB   	'F'+$80        	
0981	D6E0	E67B 		      	FDB   	$E67B          	
0982				
0983	D6E2	47 4F 54 		      	FCC     	/GOT/   	
0984	D6E5	CF 		      	FCB   	'O'+$80        	
0985	D6E6	F255 		      	FDB   	$F255          	
0986				
0987	D6E8	47 4F 53 55 	      	FCC     	/GOSU/  	
0988	D6EC	C2 		      	FCB   	'B'+$80        	
0989	D6ED	F256 		      	FDB   	$F256          	
0990				
0991	D6EF	52 45 		      	FCC     	/RE/    	
0992	D6F1	D4 		      	FCB   	'T'+$80        	
0993	D6F2	F22A 		      	FDB   	$F22A          	
0994				
0995	D6F4	4E 45 58 		      	FCC     	/NEX/   	
0996	D6F7	D4 		      	FCB   	'T'+$80        	
0997	D6F8	F2F8 		      	FDB   	$F2F8          	
0998				
0999	D6FA	46 4F 		      	FCC     	/FO/    	
1000	D6FC	D2 		      	FCB   	'R'+$80        	
1001	D6FD	F294 		      	FDB   	$F294          	
1002				
1003	D6FF	54 48 45 		      	FCC     	/THE/   	
1004	D702	CE 		      	FCB   	'N'+$80        	
1005	D703	F1FD 		      	FDB   	$F1FD          	
1006				
1007	D705	50 4F 4B 		      	FCC     	/POK/   	
1008	D708	C5 		      	FCB   	'E'+$80        	
1009	D709	EF38 		      	FDB   	$EF38          	
1010				
1011	D70B	52 45 41 		      	FCC     	/REA/   	
1012	D70E	C4 		      	FCB   	'D'+$80        	
1013	D70F	F08B 		      	FDB   	$F08B          	
1014				
1015	D711	44 41 54 		      	FCC     	/DAT/   	
1016	D714	C1 		      	FCB   	'A'+$80        	
1017	D715	F033 		      	FDB   	$F033          	
1018				
1019	D717	4C 4F 43 41 	      	FCC     	/LOCAT/ 	
    	    	54 
1020	D71C	C5 		      	FCB   	'E'+$80        	
1021	D71D	F19F 		      	FDB   	$F19F          	
1022				
1023	D71F	50 49 43 		      	FCC     	/PIC/   	
1024	D722	CB 		      	FCB   	'K'+$80        	
1025	D723	EF63 		      	FDB   	$EF63          	
1026				
1027	D725	52 45 53 54 	      	FCC     	/RESTOR/	
    	    	4F 52 
1028	D72B	C5 		      	FCB   	'E'+$80        	
1029	D72C	F0F3 		      	FDB   	$F0F3          	
1030				
1031	D72E	52 45 		      	FCC     	/RE/    	
1032	D730	CD 		      	FCB   	'M'+$80        	
1033	D731	E652 		      	FDB   	$E652          	
1034				
1035	D733	50 52 49 4E 	      	FCC     	/PRIN/  	
1036	D737	D4 		      	FCB   	'T'+$80        	
1037	D738	E758 		      	FDB   	$E758          	
1038				
1039	D73A	49 4E 50 55 	      	FCC     	/INPU/  	
1040	D73E	D4 		      	FCB   	'T'+$80        	
1041	D73F	F33A 		      	FDB   	$F33A          	
1042				
1043	D741	44 49 		      	FCC     	/DI/    	
1044	D743	CD 		      	FCB   	'M'+$80        	
1045	D744	EC9A 		      	FDB   	$EC9A          	
1046				
1047	D746	43 4C 45 41 	      	FCC     	/CLEA/  	
1048	D74A	D2 		      	FCB   	'R'+$80        	
1049	D74B	E426 		      	FDB   	$E426          	
1050				
1051	D74D	53 54 4F 		      	FCC     	/STO/   	
1052	D750	D0 		      	FCB   	'P'+$80        	
1053	D751	E545 		      	FDB   	$E545          	
1054				
1055	D753	45 4E 		      	FCC     	/EN/    	
1056	D755	C4 		      	FCB   	'D'+$80        	
1057	D756	E5A3 		      	FDB   	$E5A3          	
1058				
1059	D758	4C 50 52 49 	      	FCC     	/LPRIN/ 	
    	    	4E 
1060	D75D	D4 		      	FCB   	'T'+$80        	
1061	D75E	E756 		      	FDB   	$E756          	
1062				
1063	D760	4F 50 54 49 	      	FCC     	/OPTIO/ 	
    	    	4F 
1064	D765	CE 		      	FCB   	'N'+$80        	
1065	D766	EFEA 		      	FDB   	$EFEA          	
1066				
1067	D768	42 45 45 50 	      	FCC     	/BEEP/  	
1068	D76C	B0 		      	FCB   	'0'+$80        	
1069	D76D	F021 		      	FDB   	$F021          	
1070				
1071	D76F	42 45 45 50 	      	FCC     	/BEEP/  	
1072	D773	B1 		      	FCB   	'1'+$80        	
1073	D774	F000 		      	FDB   	$F000          	
1074				
1075	D776	42 45 45 		      	FCC     	/BEE/   	
1076	D779	D0 		      	FCB   	'P'+$80        	
1077	D77A	F018 		      	FDB   	$F018          	
1078				
1079	D77C	48 43 4F 50 	      	FCC     	/HCOP/  	
1080	D780	D9 		      	FCB   	'Y'+$80        	
1081	D781	E504 		      	FDB   	$E504          	
1082				
1083	D783	4C 4F 41 		      	FCC     	/LOA/   	
1084	D786	C4 		      	FCB   	'D'+$80        	
1085				;		FDB		$F4EF
1086	D787	D046 		      	FDB   	LOAD           	
1087				
1088	D789	4D 45 58 45 	      	FCC     	/MEXE/  	
1089	D78D	C3 		      	FCB   	'C'+$80        	
1090				;		FDB		$F4E3
1091	D78E	D3F3 		      	FDB   	MEXEC          	
1092				
1093	D790	53 41 56 		      	FCC     	/SAV/   	
1094	D793	C5 		      	FCB   	'E'+$80        	
1095				;		FDB		$F508
1096	D794	D1A2 		      	FDB   	BSAVE          	
1097				
1098	D796	4D 53 41 56 	      	FCC     	/MSAVE/ 	
    	    	45 
1099	D79B	A2 		      	FCB   	'"'+$80        	
1100				;		FDB		$F517
1101	D79C	D264 		      	FDB   	MSAVE          	
1102				
1103	D79E	56 45 52 49 	      	FCC     	/VERIF/ 	
    	    	46 
1104	D7A3	D9 		      	FCB   	'Y'+$80        	
1105	D7A4	F4FC 		      	FDB   	$F4FC          	
1106				
1107	D7A6	43 4C 		      	FCC     	/CL/    	
1108	D7A8	D3 		      	FCB   	'S'+$80        	
1109	D7A9	F47C 		      	FDB   	$F47C          	
1110				
1111	D7AB	53 44 44 49 	      	FCC     	/SDDI/  	
1112	D7AF	D2 		      	FCB   	'R'+$80        	
1113	D7B0	D32D 		      	FDB   	FILES          	
1114				
1115	D7B2	FF 		      	FCB   	$FF            	
1116	D7B3	F26E 		      	FDB   	$F26E          	
1117				
1118	D7B5	52 4E 44 		      	FCC     	/RND/   	
1119	D7B8	A8 		      	FCB   	'('+$80        	
1120	D7B9	EB2C 		      	FDB   	$EB2C          	
1121				
1122	D7BB	41 42 53 		      	FCC     	/ABS/   	
1123	D7BE	A8 		      	FCB   	'('+$80        	
1124	D7BF	E95C 		      	FDB   	$E95C          	
1125				
1126	D7C1	4D 4F 44 		      	FCC     	/MOD/   	
1127	D7C4	A8 		      	FCB   	'('+$80        	
1128	D7C5	EB0C 		      	FDB   	$EB0C          	
1129				
1130	D7C7	41 53 43 		      	FCC     	/ASC/   	
1131	D7CA	A8 		      	FCB   	'('+$80        	
1132	D7CB	EFB7 		      	FDB   	$EFB7          	
1133				
1134	D7CD	46 52 45 		      	FCC     	/FRE/   	
1135	D7D0	A8 		      	FCB   	'('+$80        	
1136	D7D1	EF6F 		      	FDB   	$EF6F          	
1137				
1138	D7D3	50 45 45 4B 	      	FCC     	/PEEK/  	
1139	D7D7	A8 		      	FCB   	'('+$80        	
1140	D7D8	EF4D 		      	FDB   	$EF4D          	
1141				
1142	D7DA	53 47 4E 		      	FCC     	/SGN/   	
1143	D7DD	A8 		      	FCB   	'('+$80        	
1144	D7DE	EF74 		      	FDB   	$EF74          	
1145				
1146	D7E0	4C 45 4E 		      	FCC     	/LEN/   	
1147	D7E3	A8 		      	FCB   	'('+$80        	
1148	D7E4	EFAB 		      	FDB   	$EFAB          	
1149				
1150	D7E6	56 50 4F 53 	      	FCC     	/VPOS/  	
1151	D7EA	A8 		      	FCB   	'('+$80        	
1152	D7EB	F185 		      	FDB   	$F185          	
1153				
1154	D7ED	48 50 4F 53 	      	FCC     	/HPOS/  	
1155	D7F1	A8 		      	FCB   	'('+$80        	
1156	D7F2	F175 		      	FDB   	$F175          	
1157				
1158	D7F4	55 53 52 		      	FCC     	/USR/   	
1159	D7F7	A8 		      	FCB   	'('+$80        	
1160	D7F8	EB41 		      	FDB   	$EB41          	
1161				
1162	D7FA	56 41 4C 		      	FCC     	/VAL/   	
1163	D7FD	A8 		      	FCB   	'('+$80        	
1164	D7FE	EFBF 		      	FDB   	$EFBF          	
1165				
1166	D800	FF 		      	FCB   	$FF            	
1167	D801	EAA5 		      	FDB   	$EAA5          	
1168				
1169	D803	54 		      	FCC     	/T/     	
1170	D804	CF 		      	FCB   	'O'+$80        	
1171	D805	1234 		      	FDB   	$1234          	
1172				
1173	D807	53 54 45 		      	FCC     	/STE/   	
1174	D80A	D0 		      	FCB   	'P'+$80        	
1175	D80B	ABCD 		      	FDB   	$ABCD          	
1176				
1177	D80D	53 50 43 		      	FCC     	/SPC/   	
1178	D810	A8 		      	FCB   	'('+$80        	
1179	D811	EF95 		      	FDB   	$EF95          	
1180				
1181	D813	54 41 42 		      	FCC     	/TAB/   	
1182	D816	A8 		      	FCB   	'('+$80        	
1183	D817	E78F 		      	FDB   	$E78F          	
1184				
1185	D819	46 4C 44 		      	FCC     	/FLD/   	
1186	D81C	A8 		      	FCB   	'('+$80        	
1187	D81D	EFD3 		      	FDB   	$EFD3          	
1188				
1189	D81F	FF 		      	FCB   	$FF            	
1190	D820	E7C4 		      	FDB   	$E7C4          	
1191				
1192	D822	48 45 58 24 	      	FCC     	/HEX$/  	
1193	D826	A8 		      	FCB   	'('+$80        	
1194	D827	F147 		      	FDB   	$F147          	
1195				
1196	D829	43 48 52 24 	      	FCC     	/CHR$/  	
1197	D82D	A8 		      	FCB   	'('+$80        	
1198	D82E	F1EC 		      	FDB   	$F1EC          	
1199				
1200	D830	4C 45 46 54 	      	FCC     	/LEFT$/ 	
    	    	24 
1201	D835	A8 		      	FCB   	'('+$80        	
1202	D836	EE80 		      	FDB   	$EE80          	
1203				
1204	D838	52 49 47 48 	      	FCC     	/RIGHT$/	
    	    	54 24 
1205	D83E	A8 		      	FCB   	'('+$80        	
1206	D83F	EE88 		      	FDB   	$EE88          	
1207				
1208	D841	4D 49 44 24 	      	FCC     	/MID$/  	
1209	D845	A8 		      	FCB   	'('+$80        	
1210	D846	EEA2 		      	FDB   	$EEA2          	
1211				
1212	D848	FF 		      	FCB   	$FF            	
1213	D849	EEEF 		      	FDB   	$EEEF          	
1214				
1215	D84B	43 4D 4F 44 	      	FCC     	/CMODE/ 	
    	    	45 
1216	D850	B0 		      	FCB   	'0'+$80        	
1217	D851	EFF7 		      	FDB   	$EFF7          	
1218				
1219	D853	43 4D 4F 44 	      	FCC     	/CMODE/ 	
    	    	45 
1220	D858	B1 		      	FCB   	'1'+$80        	
1221	D859	EFFA 		      	FDB   	$EFFA          	
1222				
1223	D85B	4F 56 46 		      	FCC     	/OVF/   	
1224	D85E	B0 		      	FCB   	'0'+$80        	
1225	D85F	EFF0 		      	FDB   	$EFF0          	
1226				
1227	D861	4F 56 46 		      	FCC     	/OVF/   	
1228	D864	B1 		      	FCB   	'1'+$80        	
1229	D865	EFF3 		      	FDB   	$EFF3          	
1230				
1231	D867	FF 		      	FCB   	$FF            	
1232	D868	EAFD 		      	FDB   	$EAFD          	
1233				
1234				;------------------ MEMORY EDIT ----------------------------
1235	DD00			      	ORG   	$DD00          	
1236				
1237	DD00	DF E4		      	STX   	ADRS           	
1238	DD02	96 E4		ME8   	LDAA  	ADRS           	
1239	DD04	BD D40F		      	JSR   	PRHEX          	
1240	DD07	96 E5		      	LDAA  	ADRS+1         	
1241	DD09	BD D40F		      	JSR   	PRHEX          	
1242	DD0C	BD F3BA		      	JSR   	SPC            	
1243				
1244	DD0F	8D 2B		ME0   	BSR   	ME1            	
1245	DD11	25 4F		      	BCS   	ME6            	
1246	DD13	16		      	TAB   			
1247	DD14	58		      	ASLB  			
1248	DD15	58		      	ASLB  			
1249	DD16	58		      	ASLB  			
1250	DD17	58		      	ASLB  			;Bレジスタに送って16倍
1251	DD18	37		      	PSHB  			
1252	DD19	8D 21		      	BSR   	ME1            	
1253	DD1B	33		      	PULB  			
1254	DD1C	25 44		      	BCS   	ME6            	
1255	DD1E	1B		      	ABA   			
1256	DD1F	A7 00		      	STAA  	X              	
1257	DD21	08		      	INX   			
1258	DD22	DF E4		      	STX   	ADRS           	
1259	DD24	96 E5		      	LDAA  	ADRS+1         	
1260	DD26	84 07		      	ANDA  	#$07           	;次のアドレスが$xxx0又は$xxx8のなら改行してアドレス表示へ
1261	DD28	4D		      	TSTA  			
1262	DD29	27 07		      	BEQ   	ME7            	
1263	DD2B	BD F3BA		      	JSR   	SPC            	;次のアドレスが$xxx0又は$xxx8でないなら空白1文字表示
1264	DD2E	DE E4		      	LDX   	ADRS           	
1265	DD30	20 DD		      	BRA   	ME0            	
1266	DD32	CE D5E0		ME7   	LDX   	#CRLF          	
1267	DD35	BD D402		      	JSR   	STRPRN         	;改行
1268	DD38	DE E4		      	LDX   	ADRS           	
1269	DD3A	20 C6		      	BRA   	ME8            	
1270				
1271	DD3C	BD E4F2		ME1   	JSR   	INPUT          	
1272	DD3F	81 30		      	CMPA  	#$30           	
1273	DD41	25 0C		      	BCS   	ME2            	
1274	DD43	81 3A		      	CMPA  	#$3A           	
1275	DD45	25 13		      	BCS   	ME3            	
1276	DD47	81 41		      	CMPA  	#$41           	
1277	DD49	25 04		      	BCS   	ME2            	
1278	DD4B	81 47		      	CMPA  	#$47           	
1279	DD4D	25 0E		      	BCS   	ME4            	
1280	DD4F	81 0D		ME2   	CMPA  	#$0D           	
1281	DD51	27 0D		      	BEQ   	ME5            	
1282	DD53	86 08		      	LDAA  	#$08           	
1283	DD55	BD F3BC		      	JSR   	PRINT          	
1284	DD58	20 E2		      	BRA   	ME1            	
1285	DD5A	80 30		ME3   	SUBA  	#$30           	
1286	DD5C	39		      	RTS   			
1287	DD5D	80 37		ME4   	SUBA  	#$37           	
1288	DD5F	39		      	RTS   			
1289	DD60	0D		ME5   	SEC   			
1290	DD61	39		      	RTS   			
1291	DD62	39		ME6   	RTS   			
1292				
1293				;------------------ MEMORY DUMP USR関数第2パラメータ(Xレジスタ)のアドレスからダンプ -----------------
1294	DE00			      	ORG   	$DE00          	
1295				
1296	DE00	DF E4		      	STX   	ADRS           	;16進コード表示用カウンタ
1297	DE02	DF E6		      	STX   	LENG           	;ASCIIコード表示用カウンタ
1298				
1299	DE04	C6 08		DPS   	LDAB  	#$08           	;8行を表示
1300	DE06	37		DP0   	PSHB  			
1301	DE07	DE E4		      	LDX   	ADRS           	
1302	DE09	96 E4		      	LDAA  	ADRS           	;アドレスを表示
1303	DE0B	BD D40F		      	JSR   	PRHEX          	
1304	DE0E	96 E5		      	LDAA  	ADRS+1         	
1305	DE10	BD D40F		      	JSR   	PRHEX          	
1306	DE13	BD F3BA		      	JSR   	SPC            	;空白表示
1307				
1308	DE16	C6 08		      	LDAB  	#$08           	;8Byte分を1行表示
1309	DE18	A6 00		DP1   	LDAA  	X              	
1310	DE1A	BD D40F		      	JSR   	PRHEX          	;Aレジスタを16進2桁で表示
1311	DE1D	08		      	INX   			
1312	DE1E	5A		      	DECB  			
1313	DE1F	26 F7		      	BNE   	DP1            	;ループ
1314	DE21	DF E4		      	STX   	ADRS           	;1行分最終アドレスを退避
1315				
1316	DE23	BD F3BA		      	JSR   	SPC            	;空白表示
1317				
1318	DE26	DE E6		      	LDX   	LENG           	
1319	DE28	C6 08		      	LDAB  	#$08           	;8Byte分
1320	DE2A	A6 00		DP2   	LDAA  	X              	
1321	DE2C	81 20		      	CMPA  	#$20           	;$20以下なら'.'($2E)に置き換え
1322	DE2E	24 02		      	BCC   	DP3            	
1323	DE30	86 2E		      	LDAA  	#$2E           	
1324	DE32	BD F3BC		DP3   	JSR   	PRINT          	
1325	DE35	08		      	INX   			
1326	DE36	5A		      	DECB  			
1327	DE37	26 F1		      	BNE   	DP2            	
1328	DE39	DF E6		      	STX   	LENG           	;1行分最終アドレスを退避
1329				
1330	DE3B	CE D5E0		      	LDX   	#CRLF          	
1331	DE3E	BD D402		      	JSR   	STRPRN         	;改行
1332	DE41	33		      	PULB  			
1333	DE42	5A		      	DECB  			
1334	DE43	26 C1		      	BNE   	DP0            	;ループ
1335				
1336	DE45	CE DE71		      	LDX   	#DPMES         	;継続指示メッセージ
1337	DE48	BD D402		      	JSR   	STRPRN         	
1338	DE4B	BD D45E		DP4   	JSR   	KSCN2          	;キー入力待ち
1339	DE4E	4D		      	TSTA  			
1340	DE4F	27 FA		      	BEQ   	DP4            	
1341	DE51	81 20		      	CMPA  	#' '           	;スペースなら次ページ
1342	DE53	27 AF		      	BEQ   	DPS            	
1343	DE55	81 4E		      	CMPA  	#'N'           	;'N'なら次ページ
1344	DE57	27 AB		      	BEQ   	DPS            	
1345	DE59	81 42		      	CMPA  	#'B'           	;'B'なら前ページ
1346	DE5B	27 01		      	BEQ   	DP6            	
1347	DE5D	39		      	RTS   			
1348				
1349	DE5E	96 E5		DP6   	LDAA  	ADRS+1         	;'B'キーが押されたら(ADRS) <- (ADRS) - $80を計算して格納
1350	DE60	80 80		      	SUBA  	#$80           	
1351	DE62	97 E5		      	STAA  	ADRS+1         	
1352	DE64	97 E7		      	STAA  	LENG+1         	
1353	DE66	24 07		      	BCC   	DP7            	
1354	DE68	96 E4		      	LDAA  	ADRS           	
1355	DE6A	4A		      	DECA  			
1356	DE6B	97 E4		      	STAA  	ADRS           	
1357	DE6D	97 E6		      	STAA  	LENG           	
1358	DE6F	20 93		DP7   	BRA   	DPS            	
1359				
1360	DE71			DPMES 				
1361	DE71	2D 20 4E 45 	      	FCC     	/- NEXT:SPACE BACK:B CANSEL:ANY -/	
    	    	58 54 3A 53 
    	    	50 41 43 45 
    	    	20 42 41 43 
    	    	4B 3A 42 20 
    	    	43 41 4E 53 
    	    	45 4C 3A 41 
    	    	4E 59 20 2D 
1362	DE91	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1363				
1364				;------------------ MEMORY TEST ----------------------------
1365	DF00			      	ORG   	$DF00          	
1366				
1367	DF00	DE 04		      	LDX   	BSTA           	;テスト開始アドレス
1368	DF02	DF E4		      	STX   	ADRS           	
1369				
1370	DF04	CE D5E0		MEM1  	LDX   	#CRLF          	
1371	DF07	BD D402		      	JSR   	STRPRN         	
1372				
1373	DF0A	96 E4		      	LDAA  	ADRS           	;アドレスを表示
1374	DF0C	BD D40F		      	JSR   	PRHEX          	
1375	DF0F	96 E5		      	LDAA  	ADRS+1         	
1376	DF11	BD D40F		      	JSR   	PRHEX          	
1377				
1378	DF14	BD F3BA		      	JSR   	SPC            	
1379				
1380	DF17	DE E4		      	LDX   	ADRS           	
1381	DF19	86 55		      	LDAA  	#$55           	;$55を書き込み
1382	DF1B	A7 00		      	STAA  	X              	
1383				
1384	DF1D	BD D40F		      	JSR   	PRHEX          	
1385	DF20	BD F3BA		      	JSR   	SPC            	
1386				
1387	DF23	A6 00		      	LDAA  	X              	;読み出し
1388	DF25	16		      	TAB   			
1389	DF26	BD D40F		      	JSR   	PRHEX          	
1390	DF29	17		      	TBA   			
1391				
1392	DF2A	81 55		      	CMPA  	#$55           	;読出しが$55でなければエラー
1393	DF2C	26 1D		      	BNE   	MSTP           	
1394				
1395	DF2E	BD F3BA		      	JSR   	SPC            	
1396				
1397	DF31	86 AA		      	LDAA  	#$AA           	;$AAを書き込み
1398	DF33	A7 00		      	STAA  	X              	
1399				
1400	DF35	BD D40F		      	JSR   	PRHEX          	
1401	DF38	BD F3BA		      	JSR   	SPC            	
1402				
1403	DF3B	A6 00		      	LDAA  	X              	;読出し
1404	DF3D	16		      	TAB   			
1405	DF3E	BD D40F		      	JSR   	PRHEX          	
1406	DF41	17		      	TBA   			
1407				
1408	DF42	81 AA		      	CMPA  	#$AA           	;読出しが$AAでなければエラー
1409	DF44	26 05		      	BNE   	MSTP           	
1410	DF46	08		      	INX   			
1411	DF47	DF E4		      	STX   	ADRS           	
1412	DF49	20 B9		      	BRA   	MEM1           	;ループ
1413				
1414	DF4B	CE DF52		MSTP  	LDX   	#MEMSTP        	;STOPメッセージ
1415	DF4E	BD D402		      	JSR   	STRPRN         	
1416	DF51	39		      	RTS   			
1417				
1418	DF52			MEMSTP				
1419	DF52	0D 0A 		      	FCB   	$0D,$0A        	
1420	DF54	4D 45 4D 4F 	      	FCC     	/MEMORY TEST STOP!/	
    	    	52 59 20 54 
    	    	45 53 54 20 
    	    	53 54 4F 50 
    	    	21 
1421	DF65	0D 0A 00 		      	FCB   	$0D,$0A,$00    	
1422				
1423					END   	               	

0 error(s),  0 warning(s) is detected.

Label	address
ADRS  	00E4	ADRS2 	00F2	ADRSK 	00EC	AZ1   	D401	AZLCNV	D3F7
BDSEND	D252	BEEP  	F018	BEND  	0006	BNMSG 	D5C1	BSAVE 	D1A2
BSMSG 	D5B8	BSTA  	0004	BSV1  	D1B1	BSV10 	D1BD	BSV2  	D1D2
BTBL  	D6A6	BTPNT 	001A	CMTMSG	D5AE	CRLF  	D5E0	CTBL  	D6D7
CTPNT 	001C	DL1   	D360	DL2   	D363	DL3   	D37D	DL33  	D391
DL4   	D393	DL5   	D3BF	DL6   	D3C9	DL61  	D3E0	DL7   	D3E7
DL8   	D3E9	DL9   	D399	DL91  	D39C	DP0   	DE06	DP1   	DE18
DP2   	DE2A	DP3   	DE32	DP4   	DE4B	DP6   	DE5E	DP7   	DE6F
DPMES 	DE71	DPS   	DE04	DUMMY 	D045	ERR   	D179	ERR1  	D184
ERR3  	D18D	ERR99 	D196	ERRJ  	D092	ERRJ2 	D1CF	ERRJ3 	D297
ERRJ4 	D31C	ERRJ5 	D32A	ERRJ6 	D3F0	ERRR  	D19C	F1CHK 	D654
F2CHK 	D65C	FILES 	D32D	FLG   	00E3	FN0   	D051	FN1   	D053
FN10  	D06D	FN11  	D071	FN12  	D07C	FN13  	D07D	FN14  	D08A
FN2   	D095	FNS3  	D211	FNS4  	D22A	FNS5  	D231	FNS6  	D23E
FNS7  	D24E	FNSEND	D20E	FNSIZ 	00F0	HEND  	0008	INI2  	D030
INI3  	D03F	INIT  	D016	INPUT 	E4F2	KBUF  	0030	KEYDAT	C800
KEYSEL	C801	KSC0  	D464	KSC1  	D477	KSC10 	D4F4	KSC11 	D4F8
KSC12 	D4FC	KSC13 	D500	KSC14 	D504	KSC15 	D4B3	KSC2  	D49D
KSC3  	D4A1	KSC4  	D4A9	KSC5  	D4AD	KSC6  	D4B1	KSC7  	D4B6
KSC8  	D4BB	KSC9  	D4CE	KSCAN 	F7A9	KSCN2 	D45E	KTBL  	D508
KTBL2 	D550	LD1   	D0BD	LD2   	D0FD	LD3   	D103	LDMSG 	D5CB
LENG  	00E6	LOAD  	D046	LOP1  	D152	LOP2  	D176	ME0   	DD0F
ME1   	DD3C	ME2   	DD4F	ME3   	DD5A	ME4   	DD5D	ME5   	DD60
ME6   	DD62	ME7   	DD32	ME8   	DD02	MEM1  	DF04	MEMSTP	DF52
MEXEC 	D3F3	MSAVE 	D264	MSG99 	D61B	MSG_AD	D624	MSG_F0	D5E3
MSG_F1	D5FE	MSG_F3	D60E	MSGKEY	D634	MSTP  	DF4B	MSV1  	D273
MSV10 	D285	MSV2  	D284	MSV3  	D29A	MSV4  	D29C	MSV5  	D2AC
MSV6  	D2B3	MSV8  	D2C8	MSV9  	D2CF	PH2   	D426	PH3   	D428
PIOA  	CC10	PIOB  	CC11	PIOC  	CC12	PIOINI	D699	PIOR  	CC13
PRHEX 	D40F	PRHX1 	D41E	PRINT 	F3BC	RCVBYTE	D664	SDIR99	D3EF
SDIR_PRG	D32D	SDMSG 	D598	SDR1  	D33C	SDR10 	D34E	SDR2  	D34D
SEND  	000C	SH1   	D453	SH2   	D457	SH21  	D440	SH3   	D45B
SH4   	D45D	SHEX  	D441	SHEX2 	D42C	SND4BIT	D687	SNDBYTE	D678
SP1   	D40E	SPC   	F3BA	START 	D001	STRPRN	D402	SVMSG 	D5D4
V2END 	000A	XSAVE 	00E8	XSAVE2	00EA	XSAVEK	00EE	
